<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>计算机网络面试知识点总结</title>
      <link href="/posts/54431/"/>
      <url>/posts/54431/</url>
      <content type="html"><![CDATA[<p>一方面是在找工作之前对计算机网络/通信网络的回顾，另一方面准备深信服网络技术大赛。基于《计算机网络》第五版。</p><a id="more"></a><hr><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><h3 id="网络硬件"><a href="#网络硬件" class="headerlink" title="网络硬件"></a>网络硬件</h3><p>点到点 p2p<br>单播 unicasting<br>广播 broadcasting<br>组播 multicasting</p><h4 id="个域网-PAN"><a href="#个域网-PAN" class="headerlink" title="个域网 PAN"></a>个域网 PAN</h4><h4 id="局域网-LAN"><a href="#局域网-LAN" class="headerlink" title="局域网 LAN"></a>局域网 LAN</h4><p>接入点 AP access point<br>无线路由器 wireless router<br>基站 base station<br>WiFi IEEE 802.111<br>以太网 Ethernet 802.3</p><h4 id="域域网-MAN"><a href="#域域网-MAN" class="headerlink" title="域域网 MAN"></a>域域网 MAN</h4><h4 id="广域网-WAN"><a href="#广域网-WAN" class="headerlink" title="广域网 WAN"></a>广域网 WAN</h4><p>主机 host<br>子网 subnet<br>交换机 switch<br>路由器 router<br>ISP internet service provider<br>路由算法  转发算法</p><h4 id="互联网络"><a href="#互联网络" class="headerlink" title="互联网络"></a>互联网络</h4><h3 id="网络软件"><a href="#网络软件" class="headerlink" title="网络软件"></a>网络软件</h3><p>网络体系结构 network architecture<br>协议栈 protocol stack</p><h4 id="层次设计"><a href="#层次设计" class="headerlink" title="层次设计"></a>层次设计</h4><p>检错编码 error detection<br>纠错编码 error correction<br>路由 routing<br>寻址 addressing<br>命名 naming<br>统计复用 statistical multiplexing<br>拥塞 congestion<br>服务质量 qos queality of service</p><h4 id="面向连接和无连接"><a href="#面向连接和无连接" class="headerlink" title="面向连接和无连接"></a>面向连接和无连接</h4><h4 id="服务原语"><a href="#服务原语" class="headerlink" title="服务原语"></a>服务原语</h4><h4 id="服务与协议"><a href="#服务与协议" class="headerlink" title="服务与协议"></a>服务与协议</h4><h3 id="参考模型"><a href="#参考模型" class="headerlink" title="参考模型"></a>参考模型</h3><h4 id="OSI"><a href="#OSI" class="headerlink" title="OSI"></a>OSI</h4><ul><li>物理层 physical layer</li><li>数据链路层 data link layer</li><li>网络层 network layer</li><li>传输层 transport layer</li><li>会话层 session layer</li><li>表示层 presentation layer</li><li>应用层 application layer</li></ul><h4 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h4><ul><li>链路层</li><li>互联网层</li><li>传输层</li><li>应用层</li></ul><p>最终模型 </p><ul><li>物理层</li><li>数据链路层</li><li>网络层</li><li>传输层</li><li>应用层</li></ul><p>OSI 7层   TCP/IP 4层</p><h3 id="网络实例"><a href="#网络实例" class="headerlink" title="网络实例"></a>网络实例</h3><h4 id="因特网"><a href="#因特网" class="headerlink" title="因特网"></a>因特网</h4><ul><li>ARPANET</li><li>NSFNET</li></ul><p>Internet体系结构</p><p>连接到ISP：DSL Digital Subscriber Line</p><h4 id="3G"><a href="#3G" class="headerlink" title="3G"></a>3G</h4><p>宽带码分多址 WCDMA wideband code division multiple access<br>无线网络控制器 RNC radio network controller<br>核心网 core network<br>LTE long term evolution</p><h4 id="802-11"><a href="#802-11" class="headerlink" title="802.11"></a>802.11</h4><p>无线局域网</p><p>正交频分复用 OFDM orthogonal frequency division multiplexing<br>载波侦听多路访问 CSMA carrier sense multiple access</p><h4 id="RFID-传感器"><a href="#RFID-传感器" class="headerlink" title="RFID 传感器"></a>RFID 传感器</h4><h3 id="网络标准化"><a href="#网络标准化" class="headerlink" title="网络标准化"></a>网络标准化</h3><p>ITU international telecommunication union<br>ISO international standards organization</p><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><h3 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h3><h4 id="傅里叶分析和带宽"><a href="#傅里叶分析和带宽" class="headerlink" title="傅里叶分析和带宽"></a>傅里叶分析和带宽</h4><p>带宽 bandwidth<br>基带 baseband</p><h4 id="信道最大传输速率"><a href="#信道最大传输速率" class="headerlink" title="信道最大传输速率"></a>信道最大传输速率</h4><p>尼奎斯特定理<br>香农公式 最大比特率 = Blog2（1+S/N） B带宽 S/N 信噪比</p><h4 id="传输介质"><a href="#传输介质" class="headerlink" title="传输介质"></a>传输介质</h4><ul><li>双绞线 twisted pair</li><li>同轴电缆 coaxial cable</li><li>fiber</li></ul><h3 id="无线传输"><a href="#无线传输" class="headerlink" title="无线传输"></a>无线传输</h3><p>宽频技术：</p><ul><li>跳频扩频</li><li>直接序列扩频</li><li>超宽带通信 UWB</li></ul><h3 id="无线电-微波-红外-光通信-卫星"><a href="#无线电-微波-红外-光通信-卫星" class="headerlink" title="无线电 微波 红外 光通信 卫星"></a>无线电 微波 红外 光通信 卫星</h3><h3 id="数字调制与多路复用"><a href="#数字调制与多路复用" class="headerlink" title="数字调制与多路复用"></a>数字调制与多路复用</h3>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerNetwork </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记一次参加dorahacks黑客马拉松的经历</title>
      <link href="/posts/8806/"/>
      <url>/posts/8806/</url>
      <content type="html"><![CDATA[<p>在6月2号，参加了dorahacks的黑客马拉松活动，即连续24小时编程比赛，打造一款产品。整体来说比赛一般，参与人数很少，并且小团体严重，后期感觉有互相换票的嫌疑，不过对于我自己来说，临时学习了区块链的知识，并与师弟一起，利用24小时，从零开发了一款基于区块链的APP（我负责后台，师弟负责前台）。</p><a id="more"></a><hr><h2 id="仓库地址"><a href="#仓库地址" class="headerlink" title="仓库地址"></a>仓库地址</h2><p><a href="https://github.com/cloisonne/blockchain" target="_blank" rel="noopener">基于区块链的记忆app的服务端</a><br><a href="https://github.com/cloisonne/Drifting" target="_blank" rel="noopener">基于区块链的心情漂流APP </a></p><hr><h2 id="针对blockchain做的改进"><a href="#针对blockchain做的改进" class="headerlink" title="针对blockchain做的改进"></a>针对blockchain做的改进</h2><h3 id="增加block属性"><a href="#增加block属性" class="headerlink" title="增加block属性"></a>增加block属性</h3><p>改进了block属性，以与记忆app（一款基于区块链的心情分享、漂流瓶社交应用）配合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_block</span><span class="params">(self, proof: int, my_message: str, previous_hash: Optional[str])</span> -&gt; Dict[str, Any]:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    生成新块</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :参数proof: 工作量证明算法给出的证明</span></span><br><span class="line"><span class="string">    :参数previous_hash: 上一个块的哈希值</span></span><br><span class="line"><span class="string">    :return: 一个新块</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    block = &#123;</span><br><span class="line">        <span class="string">'index'</span>: len(self.chain) + <span class="number">1</span>,</span><br><span class="line">        <span class="string">'my_message'</span>: my_message,</span><br><span class="line">        <span class="string">'timestamp'</span>: time(),</span><br><span class="line">        <span class="string">'transactions'</span>: self.current_transactions,</span><br><span class="line">        <span class="string">'proof'</span>: proof,</span><br><span class="line">        <span class="string">'previous_hash'</span>: previous_hash <span class="keyword">or</span> self.hash(self.chain[<span class="number">-1</span>]),</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="加入web端，与flask交互"><a href="#加入web端，与flask交互" class="headerlink" title="加入web端，与flask交互"></a>加入web端，与flask交互</h3><p>php实现 需要搭建apache+php环境。</p><h3 id="修改了挖矿等方法的method"><a href="#修改了挖矿等方法的method" class="headerlink" title="修改了挖矿等方法的method"></a>修改了挖矿等方法的method</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/mine', methods=['GET','POST'])</span></span><br></pre></td></tr></table></figure><h3 id="post-test"><a href="#post-test" class="headerlink" title="post_test"></a>post_test</h3><p>用于模拟post，发送挖矿请求。</p><hr><h2 id="PHP界面的实现"><a href="#PHP界面的实现" class="headerlink" title="PHP界面的实现"></a>PHP界面的实现</h2><p>效果如图：</p><p><img src="https://blog-1252404748.cos.ap-chengdu.myqcloud.com/images/php-blockchain.png" alt="区块链前端"></p><p>基于folk的php代码，根据flask后台改造了区块链前端。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=<span class="string">"center"</span>&gt;</span><br><span class="line">&lt;form class="form-inline" action="index.php?port=&lt;?php echo $_REQUEST["port"]?&gt;&amp;mine=1" method="POST"&gt;</span><br><span class="line">  &lt;div class="form-group"&gt;</span><br><span class="line">&lt;label &gt;输入message：&lt;/label&gt;</span><br><span class="line">&lt;input type="text" class="form-control" id="my_message" name="my_message"&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button type="submit" class="btn btn-primary"&gt;发送消息&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
            <tag> PHP </tag>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>车牌识别工作时间轴</title>
      <link href="/posts/19204/"/>
      <url>/posts/19204/</url>
      <content type="html"><![CDATA[<p>最近放弃了带遮挡的人脸识别，投身车牌识别的大业，这里的车牌识别是基于国内的、多种类的、恶劣条件下的，可以成为Real or Wild的plate recognition，将时间线和所做工作总结如下，主要同步自实验室的私有gitlab。</p><a id="more"></a><hr><h2 id="说下gitlab"><a href="#说下gitlab" class="headerlink" title="说下gitlab"></a>说下gitlab</h2><p>恰巧guyhub被微软收购了，未来可能会退出CN版的guyhub，当然如果是这样，外网guyhub应该是访问不了了，而国内的服务一定是遵守社会主义核心价值观，像host这样的开源库可能就要被灭绝了。</p><p>我们实验室内部代码交流和项目协作主要使用gitlab，一方面代码不便于在github公开仓库上共享，另一方面放着服务器不搭个写代码的平台也说不过去。gitlab的功能一定是比github更强大更丰富的，目前使用的功能还是比较少，对于git比较熟，所以也算得心应手。</p><hr><h2 id="开源库HyperLPR"><a href="#开源库HyperLPR" class="headerlink" title="开源库HyperLPR"></a>开源库HyperLPR</h2><p><a href="https://github.com/zeusees/HyperLPR" target="_blank" rel="noopener">HyperLPR</a>是基于深度学习的高性能中文车牌识别开源库，这里做一些研究，目前发现的问题有：</p><ul><li>EasyPR的数据集准确率并不高，大概60%？远达不到宣称的90%</li><li>框架使用深度学习，训练网络时数据集应该不够多，效果差强人意</li></ul><p>目前发现的优点有：</p><ul><li>端到端的神经网络训练模型进行车牌字符识别</li><li>代码比较轻量</li></ul><h3 id="工作流程分析"><a href="#工作流程分析" class="headerlink" title="工作流程分析"></a>工作流程分析</h3><p>对HyperLPR一个完整的车牌识别工作流程进行分析：</p><ol><li>batch.py  批量处理工具 批量读取文件调用pipline</li><li>pipline调用SimpleRecognizePlate函数（SimpleRecognizePlateByE2E ？）</li><li>detectPlateRough 传入灰度图 参数如下<ul><li>resize_h </li><li>en_scale</li><li>top_bottom_padding_rate</li></ul></li><li>调用模型’./model/cascade.xml’ 使用opencv中CascadeClassifier的detectMultiScale多尺度检测</li><li>车牌粗定位完成 进行SimplePredict 使用”./model/plate_type.h5”模型确定车牌类别（神经网络）</li><li>如果车型判断成功 对车牌进行bitwise_not二值化反色处理</li><li>调用finemapping中的精定位算法findContoursAndDrawBoundingBox</li><li>调用finemapping中的”./model/model12.h5”左右边界回归  进行垂直精定位算法finemappingVertical</li><li>调用e2e 使用模型”./model/ocr_plate_all_w_rnn_2.h5” 端到端字符识别  只输出不使用？</li><li>校正完成 使用segmentation中的slidingWindowsEval 进行文字分割和识别</li><li>置信度判断和输出</li></ol><p>注意事项：</p><ul><li>ocr_plate_all_gru.h5 作为序列模型效果更好，但是更慢  以上过程中未使用</li></ul><h3 id="测试程序"><a href="#测试程序" class="headerlink" title="测试程序"></a>测试程序</h3><p>完整修改了测试程序，并进行了正确率测试，大部分特殊车牌不支持，少数几种车牌识别率低于20%。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plate_recogniton</span><span class="params">(real_path)</span>:</span></span><br><span class="line">    plate_real = real_path[:<span class="number">-4</span>].split(<span class="string">'\\'</span>)[<span class="number">-1</span>][:<span class="number">8</span>]</span><br><span class="line">    plate_real_list.append(plate_real)</span><br><span class="line">    print(<span class="string">'plate_real:'</span> + str(plate_real))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> real_path.endswith(<span class="string">".jpg"</span>) <span class="keyword">or</span> real_path.endswith(<span class="string">".png"</span>) <span class="keyword">or</span> real_path.endswith(<span class="string">".JPG"</span>):</span><br><span class="line">        image =  cv_imread(real_path)</span><br><span class="line">        <span class="comment"># print(type(image))</span></span><br><span class="line">        <span class="comment"># image,res  = model.SimpleRecognizePlateByE2E(image)</span></span><br><span class="line">        res = model.SimpleRecognizePlateByE2E(image)</span><br><span class="line">        max_res = [<span class="string">'null'</span>,<span class="number">0</span>,[<span class="number">862.01999999999998</span>, <span class="number">924.0</span>, <span class="number">178.03504678726196</span>, <span class="number">52.0</span>]]</span><br><span class="line">        res.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>],reverse=<span class="keyword">True</span>)</span><br><span class="line">        <span class="keyword">if</span> len(res) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span> len(res) &gt;= <span class="number">1</span>:</span><br><span class="line">            max_res = res[<span class="number">0</span>]</span><br><span class="line">        print(res)</span><br><span class="line">        plate_predict = max_res[<span class="number">0</span>]</span><br><span class="line">        print(<span class="string">'plate_predict:'</span> + plate_predict)</span><br><span class="line">        plate_predict_list.append(plate_predict)</span><br></pre></td></tr></table></figure><h3 id="模型的训练程序"><a href="#模型的训练程序" class="headerlink" title="模型的训练程序"></a>模型的训练程序</h3><h3 id="框架的改进思路"><a href="#框架的改进思路" class="headerlink" title="框架的改进思路"></a>框架的改进思路</h3><hr><p>## </p><p>### </p><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
            <tag> DeepLearning </tag>
            
            <tag> PlateRecogniton </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018华为网赛云主机操作合集</title>
      <link href="/posts/14112/"/>
      <url>/posts/14112/</url>
      <content type="html"><![CDATA[<p>在华为2018网络技术大赛中拿到了全国亚军，3个小时的配置任务（包括华为manageone平台、fuisoninsight大数据平台、云主机操作），除了最后hue上的数据库操作比较费时，总共花了1个小时多一点就配完了，还是不错的成绩。这一篇是赛前整理的一些配置的linux命令。</p><a id="more"></a><hr><p>华为使用的云主机平台为SUSE Linux Enterprise servers，这里记一些网络决赛常用命令。</p><h2 id="文档分工"><a href="#文档分工" class="headerlink" title="文档分工"></a>文档分工</h2><p>肖 : FusionInsight HD V100R002C70SPC200 业务操作指南 02</p><p>zookeeper   yarn  mapreduce  hive  HDFS</p><p>董 ： ManageOne ServiceCenter 3.0.8 高危操作一览表 01</p><p>郭 ： ManageOne ServiceCenter 3.0.8 告警处理 01</p><p>需要分出去的： </p><p>FusionInsight HD V100R002C70SPC200 产品描述 02  企业级增强特性</p><h2 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h2><p><a href="http://man.linuxde.net/" target="_blank" rel="noopener">Linux命令大全</a></p><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><p><a href="https://www.linuxidc.com/Linux/2016-10/136251.htm" target="_blank" rel="noopener">用户和用户组以及 Linux 权限管理</a></p><h4 id="etc-passwd-中的字段"><a href="#etc-passwd-中的字段" class="headerlink" title="/etc/passwd 中的字段"></a>/etc/passwd 中的字段</h4><ul><li>ACCOUNT：用户名</li><li>PASSWORD：密码占位符</li><li>UID：用户ID</li><li>GID：用户组ID</li><li>COMMAND：注释信息</li><li>HOME DIR：用户家目录</li><li>SHELL：用户的默认 shell</li></ul><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><ul><li>useradd -u UID：指定 UID，这个 UID 必须是大于等于500，并没有其他用户占用的 </li><li>UID useradd -g  GID/GROUPNAME：指定默认组，可以是 GID 或者 GROUPNAME，同样也必须真实存在</li><li>useradd -G  GROUPS：指定额外组 </li><li>useradd -c COMMENT：指定用户的注释信息 </li><li>useradd -d PATH：指定用户的家目录</li><li>useradd -s SHELL：指定用户的默认 shell，最好是在 /etc/shells 中存在的路径 </li><li>useradd -s /sbin/nologin：该用户不能登录，还记得我们上面说到的系统用户不能登录吧？我们可以看到系统用户的 shell 字段也是</li><li>/sbin/nologin echo $SHELL ：查看当前用户的 shell 类型 useradd -M</li><li>USERNAME：创建用户但不创建家目录 useradd -mk USERNAME：创建用户的同时创建家目录，并复制 /etc/skel中的内容到家目录中。关于 /etc/skel 目录会在下一篇 Linux 权限管理中再次讲解。</li><li>如果用户没有家目录，那么不能切换到该用户</li></ul><h4 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h4><ul><li>usermod -G GROUPS USERNAME：改变用户的附加组，会完全替换原有的附加组 usermod -G -a GROUPS </li><li>USERNAME：在原有附加组的基础上追加附加组 usermod -d PATH      </li><li>USERNAME：修改家目录。修改后原先家目录中的文件不能访问了，因为在当前的家目录中并不存在这些文件。 usermod -l      </li><li>NEWNAME USERNAME：改变用户名 usermod -e USERNAME：指定该用户的过期时间 </li><li>usermod -L     USERNAME：锁定用户</li><li>usermod -U USERNAME：解锁用户</li></ul><h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4><ul><li>id 显示用户属性</li><li>finger 检索用户信息</li><li>userdel 删除  -r删除家目录</li><li>groupadd -g GID GROUPNAME  groupdel   groupmod  gpasswd 组密码</li></ul><h3 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h3><h4 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h4><p> linux文件的用户权限的分析图</p><p>例：rwx　rw-　r–</p><p>r=读取属性　　//值＝4</p><p>w=写入属性　　//值＝2</p><p>x=执行属性　　//值＝1</p><pre><code>chmod u+x,g+w f01　　//为文件f01设置自己可以执行，组员可以写入的权限chmod u=rwx,g=rw,o=r f01chmod 764 f01chmod a+x f01　　//对文件f01的u,g,o都设置可执行属性</code></pre><h4 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h4><p>将目录/usr/meng及其下面的所有文件、子目录的文件主改成 liu：</p><pre><code>chown -R liu /usr/meng</code></pre><h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><h4 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h4><pre><code>ifconfigifconfig eth0 upifconfig eth0 down[root@localhost ~]# ifconfig eth0 192.168.2.10[root@localhost ~]# ifconfig eth0 192.168.2.10 netmask 255.255.255.0[root@localhost ~]# ifconfig eth0 192.168.2.10 netmask 255.255.255.0 broadcast 192.168.2.255</code></pre><h3 id="SLA指标"><a href="#SLA指标" class="headerlink" title="SLA指标"></a>SLA指标</h3><ul><li>df 查看分区</li><li>route -n 路由</li><li>cat /etc/recolv.conf</li><li>ifconfig</li></ul><h3 id="分区管理"><a href="#分区管理" class="headerlink" title="分区管理"></a>分区管理</h3><p><a href="https://blog.csdn.net/beyondlpf/article/details/10147037" target="_blank" rel="noopener">linux 分区 物理卷 逻辑卷</a></p><h4 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h4><pre><code>fdisk -l83 是代表EXT2和EXT382 是代表SWAP分区fdisk   /dev/sda D删除一个分区N创建一个分区Q 不保存退出T改变分区IDW保存退出 partprobemkfs    -t   ext3   /dev/sda7 mkdir   /mnt/backupmount   -t   ext3   /dev/sda7    /mnt/backup mkfs.ext3   /dev/sdaxt  改变分区类型LVM  8el 查看分区类型编号</code></pre><h4 id="创建LVM"><a href="#创建LVM" class="headerlink" title="创建LVM"></a>创建LVM</h4><pre><code>pvcreate   /dev/sdax vgcreate     myvg        /dev/sda8lvcreate  -L  大小  卷组名  -n  逻辑卷名称mkfs.ext3   /dev/myvg/mylv1 mkdir   /mnt/mylv1 mount   -t   ext3   /dev/myvg/mylv1   /mnt/mylv1 lvdisplaylvcreate   -L  150M   myvg   -n   mylv2mkfs.ext3   /dev/myvg/mylv2mkdir   /mnt/mylv2mount   -t   ext3   /dev/myvg/mylv2   /mnt/mylv2 lvresize   -L   绝对大小   对象lvresize   -L   100M   /dev/myvg/mylv2 resize2fs   /dev/myvg/mylv2</code></pre><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><h3 id="产品架构"><a href="#产品架构" class="headerlink" title="产品架构"></a>产品架构</h3><p><code>FusionInsight HD V100R002C70SPC200 产品描述 02</code></p><ul><li><p>DBservice<br>  一个具备高可靠性的传统关系型数据库，为Hive、 Hue、 Spark组件提供元数据存储服务。</p></li><li><p>HBase<br>  提供海量数据存储功能，是一种构建在HDFS之上的分布式、面向列的存储系统。</p></li><li><p>HDFS<br>  Hadoop分布式文件系统（Hadoop Distributed File System），提供高吞吐量的数据访问，适合大规模数据集方面的应用。</p></li><li><p>Hive<br>  建立在Hadoop基础上的开源的数据仓库，提供类似SQL的Hive Query Language语言操作结构化数据存储服务和基本的数据分析服务。</p></li><li><p>Hue<br>  提供了FusionInsight HD应用的图形化用户Web界面。 Hue支持展示多种组件，目前支持HDFS、YARN/MapReduce、 Hive和Solr。</p></li><li><p>KrbServer 及 LdapServer<br>  通过KrbServer为所有组件提供Kerberos认证功能，实现了可靠的认证机制。LdapServer支持轻量目录访问协议（Lightweight Directory Access Protocol，简称为LDAP），为Kerberos认证提供用户和用户组数据保存能力。</p></li><li><p>Mapreduce<br>  提供快速并行处理大量数据的能力，是一种分布式数据处理模式和执行环境。</p></li><li><p>Yarn<br>  资源管理系统，它是一个通用的资源模块，可以为各类应用程序进行资源管理和调度。</p></li><li><p>ZooKeeper<br>  提供分布式、高可用性的协调服务能力。帮助系统避免单点故障，从而建立可靠的应用程序。</p></li></ul><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>有遮挡的人脸识别论文阅读整理</title>
      <link href="/posts/9363/"/>
      <url>/posts/9363/</url>
      <content type="html"><![CDATA[<p>暂时决定先跑个RSC，后面需要改进时继续整理论文。</p><a id="more"></a><hr><h2 id="现有研究和背景"><a href="#现有研究和背景" class="headerlink" title="现有研究和背景"></a>现有研究和背景</h2><p>现有的用于解决部分遮挡的人脸识别的方法：</p><ol><li>基于 <code>KL</code>（Karhunen Loeve ,KL）扩展的方法：这类方法对原始训练数据进行预处理，然后通过KL变换求得主成分作为分类的特征，最后用稀疏表示分类 （Sparse Representation Classification，SRC）进行分类。<br>典型的方法包括：<ul><li><code>RSC</code>（Robust Sparse Coding）</li><li><code>LRMA</code>（Low Rank Matrix Approximation） </li><li><code>SDR-SLR</code>（Supervised Low Rank Dictionary Decomposition ,SDR-SLR）将训练数据分离成与身份有关信息、与身份无关信息以及噪声部分，能有效地提高有遮挡的人脸识别率。<br>以上方法强调了在训练数据中结构不协调的重要性，即 尽可能地从独立的不同类中学习到变换矩阵。</li></ul></li><li><del>基于模型的方法： 主要代表方法是基于 3D 模型的人脸识别，这类通过更多的摄像传感器获取人脸的三维模型来进行识别与认证，对于人脸的姿态、表情、 光照、 遮挡等变化都有非常稳健的性能。 Nese Alyuz提出了一种完全自动的三维 人脸识别系统，对遮挡的情况具有鲁棒性。它主要针对表面有遮挡的人脸识别和基于子空间分析技术引起的数据丢失进行分类，利用未被遮挡的部分进行训练，遮挡部分被剔除。在分类阶段采取掩蔽策略，是一种利用不完备数据进行子空间分析的 技术，进一步来说就是用局部处理的方法来改善全局的质量。</del></li><li><del>基于相关的方法： Felix Juefei-Xu 在文章[12]中提出了在表情、遮挡、 姿态变 化下的 3D<br>人脸识别。文章[15]提出了一种新的几何框架，用螺旋弯曲的方法去对 比、匹配、<br>平均化他们的形状并表示面部的表面，去创建一个黎曼结构，用于分析 面部表面的形状。 A. M.<br>Ali[13]提出了一种在远距离框架下姿态不变的 3D 人脸识别 模型。能自动获取图形完成人脸识别。</del></li><li>基于<code>模板</code>的方法： JongJu 在文章[14]中提出了一种在遮挡下对面部特征检测<br>和追踪的方法，初始化阶段、检测人脸、估计面部的姿态，根据检测出来的人脸， 初始化与姿态有关的特征集合；<br>优化阶段将海森矩阵与轮廓梯度向量以及外观误 差联合起来更新参数集，进而获得面部的参数， 通过加入一个模板脸将特征检测延 伸到人脸追踪，<br>使得在重度遮挡的情况下依然能实现更为精确的面部特征识别。</li><li>基于<code>特征</code>的方法： 字符串匹配是一种非常有力的部分匹配技术，但是并不<br>适合正面的人脸识别，因为人脸包括连续和不连续的特征，需要利用全局序列来表 Weiping<br>Chen[16]提出了一种使用全局字符串匹配的人脸识别方法，它利用非常<br>紧凑的语法描述字符串去表示人脸，可以在两张不连续的字符串脸间完成匹配。因 为人脸字符串的相继顺序和方向都不变，<br>这个潜在的性质使得算法在识别过程中 能够自动利用每一块没有被遮挡的区域，而不用去管形状是什么样。 这种方法在训<br>练样本数量很少时同样有效。实验验证上述方法不仅在部分遮挡的人脸识别中有<br>显著的性能，而且有能力将素描的人脸和相片里面的人脸进行匹配。另外一种是<br>Lingfeng[17]提出来的流形正则化的局部稀疏表示方法（MRLSR）， 该方法认为在稀 疏表示条件下所有的编码向量都是组稀疏的。具有个体稀疏和局部相似两条性质。 利用这些性质能有效地提升有部分遮挡情况下的人脸识别率。</li><li>基于<code>神经网络</code>的方法： 随着近几年深度学习研究的深入，基于神经网络的人脸识别研究也获得了许多进步，其中香港中文大学的汤晓鸥团队提出的基于深度学习[18-20]的人脸识别，利用卷积神经网络学习特征，刷新了人脸识别率的新高 峰。 DeepID特征可以从卷积神经网络的最后一个隐藏层提出来，在学习基于卷积 神经网络的分类器时，沿着特征提取的层次结构减少神经元的个数，这个卷积神经网络的顶层神经元个数会逐渐减少，最后只保留几个与身份相关的神经元。 Y. Sun[19]针对人脸识别中很难有效提取到能降低类内变化并增加类间变化的特征这个问 题，提出了 <code>DeepID2</code> 特征。实验证明使用DeepID2 特征能更加有效地提升识别率。 在文章[20]中提出了一种更高性能的卷积神经网络，通过增加隐藏表示的维数并在前面的卷积层加入监督，使得 DeepID2+获得更好的识别率， 实验证明了 DeepID2+ 对于遮挡情况也十分稳健。</li></ol><h2 id="现有数据库："><a href="#现有数据库：" class="headerlink" title="现有数据库："></a>现有数据库：</h2><ol><li>AR 人脸图像数据库： 包含 126 个人的四千多张正面人脸图像，其中男性<br>70 个，女性 56 个。每个人有 26 张人脸图像，其中包含了光照变化、表情变化、<br>还有眼镜遮挡和围巾遮挡。该人脸数据库中的图像分别间隔了两周的时间采集：<br>session1 和 session2，每个时间段每个人采集了 13 张。</li><li>FERET 人脸图像数据库： 美国军方组织的 FERET 人脸识别算法测试[5]，<br>主要为了解决成像条件理想、用户配合、中小规模人脸数据库上的人脸识别问题。<br>该数据库包含有 14,051 张人脸图像， 每张人脸图像有姿态和光照的变化，并且主<br>要为白种人。</li><li>Yale 人脸数据库： 包含有 15 个人的 165 张 GIF 格式的灰度图片， 其中每<br>个人有 11 张人脸图像，包含了丰富的表情变化和光照变化， 比如：快乐、伤心、<br>惊讶、正常、 困倦、眨眼、 左偏光、 中心光、右偏光等。</li><li>Yale 人脸数据库 B： 在 576 个观察条件下（9 种不同姿态64 种光照条件）<br>采集到的 10 个自愿者的 5760 张人脸图像， 即每个自愿者在每一种观察条件下采<br>集到一张人脸图像。</li><li>PIE 人脸数据库： 由 68 个人的的 41368 张人脸图像组成，其中每个人的人<br>脸图像是在 13 种不同姿态、 43 种不同的光照、 4 种不同的表情条件下采集到的。</li><li>SCface 人脸数据库： 由 130 个人的 4060 张静态人脸图像构成， 人脸图像<br>是在室内用五架分辨率不一的摄像机采集的。 SCface 人脸数据库是开源的， 可以<br>很方便的获取。</li><li>LFW 人脸数据库： 该数据库由美国马萨诸塞大学阿姆斯特分校计算机视觉<br>实验室整理完成，主要研究非受限情形下的人脸识别问题，现在已成为学术界乃至<br>工业界评价识别性能的 benchmark。该数据库包含了 5749 个人的 13233 幅人脸图<br>像，这些人脸图像主要是从互联网上收集的，反映了真实场景下的人脸图像，比如<br>大的姿态变化、光照变化、表情变化、任意的遮挡等。</li></ol><h2 id="论文观点整理"><a href="#论文观点整理" class="headerlink" title="论文观点整理"></a>论文观点整理</h2><h3 id="有部分遮挡的人脸识别方法研究"><a href="#有部分遮挡的人脸识别方法研究" class="headerlink" title="有部分遮挡的人脸识别方法研究"></a>有部分遮挡的人脸识别方法研究</h3><p><strong>因为人脸这边不做了，集中精力搞车牌，暂时不更新了。</strong></p><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MachineLearning </tag>
            
            <tag> FaceRecognition </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>机器学习路线和清单</title>
      <link href="/posts/17158/"/>
      <url>/posts/17158/</url>
      <content type="html"><![CDATA[<p>写给师妹的机器学习路线和清单。</p><a id="more"></a><hr><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>目前这是互联网领域最火的科目之一，一方面是高薪，另一方面是层出不穷的辅导班，未来很难说，不过这绝对是一个容易入门但很难做好做出成绩的方向。</p><p>想要找到一份不错的工作，需要更好的对算法底层的理解，需要刷一些相关的题目，需要有竞赛经验或者顶会论文才可以。</p><p>但是只要努力，总会得到自己想要的吧。</p><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><h3 id="周志华的西瓜书《机器学习》"><a href="#周志华的西瓜书《机器学习》" class="headerlink" title="周志华的西瓜书《机器学习》"></a>周志华的西瓜书《机器学习》</h3><p>这本书是很多人推荐给新手的入门书，与此类似的还有吴恩达的机器学习课程，我觉得都很一般，特别是这本书，基本上对新手入门不太友好，但是对于有一定基础的确实可以缩短时间，可以省去很多选择的时间，把精力专注在一本书上，下面是一些推荐学习的tips：</p><ol><li>对于机器学习算法的统筹感官，推荐阅读：<br><a href="https://blog.csdn.net/u011001084/article/details/52523897" target="_blank" rel="noopener">机器学习常用 35 大算法盘点（附思维导图）</a></li><li>基于此，一些学习机器学习所需的前置条件就可以有所了解了，比如概率论、工程优化、基本的关联规则等等，这些内容我建议用到的直接增量学习。</li><li>开始西瓜书的学习，第一遍难点略过，注意把握统筹感受，这个阶段搞不明白损失函数到底是什么实在是很正常的事情，只需要知道一些专业术语，和这些算法是什么即可。</li></ol><h3 id="什么是我最推崇的增量学习？"><a href="#什么是我最推崇的增量学习？" class="headerlink" title="什么是我最推崇的增量学习？"></a>什么是我最推崇的增量学习？</h3><p>例如在logistic对数回归的学习中，需要对公式进行推导，这里用到了高等数学的基本概念；或者对于贝叶斯分类器，这里需要概率论与数理统计的基本概念。重点是，不会这些推导会影响你对算法的整体感知吗，不会的，所以可以选择性略过，节约了大量的时间。如果选择要死啃，此时遇到什么再去学习什么，翻到对应章节，切忌拿一本概率论苦读。</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>实战主要是使用python，sklearn库，进行库函数的调取，这里前置条件又很多，如下：</p><ul><li>python语言，会写即可，不需要学习web开发、GUI等第三方模块</li><li>还是学python3，学会了python2也会了</li><li>python的第三方库，包括numpy pandas 还有画图使用的mayplotlib和seaborn等</li><li>IDE建议使用pycharm，对新手友好，实在是很反感各种新手教学上来就要摸linux配环境的行为，除了加大难度有屁用？</li><li>除了pycharm之外，熟悉ipython的交互形式，最好能够接触到jupyter notebook</li></ul><h3 id="学习方式："><a href="#学习方式：" class="headerlink" title="学习方式："></a>学习方式：</h3><ol><li>对于聪明人，直接看库函数API文档即可，我没有花时间学过python，直接上手写的，用到什么功能什么函数直接百度或者查python的文档即可<ul><li><a href="https://docs.python.org/3.6/" target="_blank" rel="noopener">python3.6 doc</a></li><li><a href="https://matplotlib.org/api/index.html" target="_blank" rel="noopener">matplotlib API</a></li><li><a href="http://scikit-learn.org/stable/documentation.html" target="_blank" rel="noopener">sklearn API</a><br>需要注意的是，在sklearn官网上实在有太多example，配合pycharm使用，可以很快的上手机器学习代码。</li></ul></li><li>对于不聪明的人，可以读一些书，去图书馆搜以下关键词，随便挑一本封面看着比较新的入门就可以了。<ul><li>机器学习实战</li><li>数据分析</li><li>python+数据</li></ul></li><li>推荐使用脑图学习，这也是我最新喜欢的方式，这里使用百度脑图，web打开即用，十分方便：<ul><li><a href="http://naotu.baidu.com/" target="_blank" rel="noopener">百度脑图</a></li></ul></li></ol><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>在这个阶段，通过代码上手，我们已经知道了一个基本的机器学习程序流程了：</p><ul><li>数据预处理</li><li>特征分析</li><li>更复杂的数据处理</li><li>丢到机器学习库里</li><li>调整一些参数</li><li>fit一个模型，predict一个结果</li></ul><p>就是这么简单。</p><p>在这个阶段最重要的是搞清楚一些之前很模糊的概念，比如loss，推荐阅读：</p><p><a href="https://blog.csdn.net/u010976453/article/details/78488279" target="_blank" rel="noopener">机器学习中的损失函数 （着重比较：hinge loss vs softmax loss）</a></p><p>比如几个重点模型的推导，简单的知识对应关系如下：</p><ul><li>线性回归逻辑回归  —— 高等数学</li><li>贝叶斯分类 —— 概率论</li><li>神经网络 —— 最优化</li></ul><p>以神经网络为例，最需要搞明白的是梯度下降和反向传播这几个概念，我想如果走到这一步，神经网络的路线也是了然于胸了，从感知器到CNN到RNN到LSTM即可。</p><p>这里也可以参考我的另一篇文章：</p><p><a href="/posts/55073/">面试准备阅读列表</a></p><h2 id="应试"><a href="#应试" class="headerlink" title="应试"></a>应试</h2><p>学习的目的，不是搞科研，发paper，只是为了找工作而已，找工作就要应试，这里建议看七月在线的题目：</p><p><a href="https://www.julyedu.com/question/index" target="_blank" rel="noopener">七月在线题库</a></p><h2 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h2><p>此外，如果希望做一些比赛，应当从kaggle入手，从最简单的titanic开始即可，有很多人写的kernel（即一些入门教程和示例程序），这里需要有一定的英语水平，其实哪里都需要英语好，英语好了有些问题直接stackoverflow，直接google就好了，很简单。</p><p><a href="https://www.kaggle.com/" target="_blank" rel="noopener">kaggle地址</a></p>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>华为2018网络大赛超纲内容整理</title>
      <link href="/posts/27479/"/>
      <url>/posts/27479/</url>
      <content type="html"><![CDATA[<p>2017年在该比赛中获得了西北赛区第二，在此记录一下2018年华为网络大赛可能会出现的超纲知识点，包括云计算、大数据、Docker、微服务等等。</p><a id="more"></a><hr><h2 id="学习视频笔记"><a href="#学习视频笔记" class="headerlink" title="学习视频笔记"></a>学习视频笔记</h2><p>这里是folk的github上2017年有人写的笔记，其中有一定出入，SDN/NFV的内容应该是被删除了。</p><div class="github-widget" data-repo="cloisonne/Huawei-2018-network"></div><h2 id="记录的超纲内容"><a href="#记录的超纲内容" class="headerlink" title="记录的超纲内容"></a>记录的超纲内容</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>自动化内存管理(Automatic Memory Management,AMM) </p><ol><li><a href="https://www.cnblogs.com/dato/p/7049343.html" target="_blank" rel="noopener">浅谈 DML、DDL、DCL的区别</a> </li></ol><h4 id="DML、DDL、DCL的区别"><a href="#DML、DDL、DCL的区别" class="headerlink" title="DML、DDL、DCL的区别"></a>DML、DDL、DCL的区别</h4><ul><li>DML（data manipulation language）数据操纵语言</li><li>DDL（data definition language）数据库定义语言</li><li>DCL（Data Control Language）数据库控制语言</li></ul><h4 id="其他知识点"><a href="#其他知识点" class="headerlink" title="其他知识点"></a>其他知识点</h4><ul><li>RMAN对数据库恢复，数据库处于mount状态</li><li>编译SQL 访问共享池</li><li>查询表数据 需要处于open状态</li><li>AMM下，可以自动调整大小的包括 共享池、大型池</li></ul><h3 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h3><ol><li><a href="https://blog.csdn.net/silencezyn1208/article/details/72236562" target="_blank" rel="noopener">微服务架构浅谈(一)</a> </li><li><a href="https://blog.csdn.net/zeb_perfect/article/details/52536411" target="_blank" rel="noopener">微服务要素-十二要素（The Twelve Factors）</a> </li></ol><ul><li>微服务和单体式应用的区别</li><li>12-factor中的重点<ul><li>基准代码</li><li>依赖</li><li>等等</li></ul></li></ul><h3 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h3><ol><li><a href="http://www.360doc.com/content/16/0421/20/16915_552675362.shtml" target="_blank" rel="noopener">开源大数据处理工具汇总 </a> </li><li><a href="https://www.zhihu.com/question/53331259" target="_blank" rel="noopener">kafka解决了什么问题? </a> </li></ol><ul><li>cloudera的flume，分布式的日志系统</li><li>kafka 是一个分布式的、分区的、多复本的日志提交服务，是一个消息系统。</li><li>zookeeper  是一个分布式的、开放式的分布式应用程序协调服务</li><li>GFS是一个可扩展的分布式文件系统，用于大型的、分布式的、对大量数据进行访问的应用。</li><li>Chubby被设计成为一个需要访问中心化的分布式锁服务。</li><li>BigTable是Google设计的分布式数据存储系统,用来处理海量的数据的一种非关系型的数据库。</li></ul><ol><li><a href="https://blog.csdn.net/zonzereal/article/details/78095110" target="_blank" rel="noopener">hadoop的三大核心组件</a> </li></ol><ul><li>HDFS</li><li>YARN<br>  YARN可以调度的包括Spark Storm MapReduce</li><li>MapReduce</li></ul><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><ol><li><a href="https://blog.csdn.net/u013485792/article/details/76071252" target="_blank" rel="noopener">NAPT和NAT的工作原理及其区别</a> </li></ol><p>NAPT 即加端口号 :8888  NAT为IP映射</p><ul><li>虚拟交换机工作在第二层</li><li>在802.1q中,vlan配置的最大可能值为4094 ， 其中0 和 4095保留</li></ul><p><code>Trunk端口既能发送带标签的数据帧，也能发送不带标签的数据帧。</code></p><p>Access端口发往其他设备的报文，都是Untagged数据帧， 而Trunk端口仅在一种特定情况下才能发出untagged数据帧，其它情况发出的都是Tagged数据帧。Hybrid端口是交换机上既可以连接用户主机，又可以连接其他交换机的端口。</p><p>Hybrid端口既可以连接接入链路又可以连接干道链路。Hybrid端口允许多个VLAN的帧通过，并可以在出端口方向将某些VLAN帧的Tag剥掉。华 为设备默认的端口类型是Hybrid。</p><p>Trunk端口收发数据帧的规则如下：</p><ol><li>当接收到对端设备发送的不带Tag的数据帧时，会添加该端口的 PVID，如果PVID在允许通过的VLAN ID列表中，则接收该报文，否则丢 弃该报文。当接收到对端设备发送的带Tag的数据帧时，检查VLANID是 否在允许通过的VLANID列表中。如果VLANID在接口允许通过的VLANID 列表中，则接收该报文。否则丢弃该报文。</li><li>端口发送数据帧时，当VLAN ID与端口的PVID相同，且是该端口允许通 过的VLAN ID时(两个条件)，去掉Tag，发送该报文。<br>当VLANID与端口的PVID不同，且是该端口允许通过的VLANID时，保持原有Tag，发送该报文。</li></ol><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>停止httpd服务：</p><ul><li>killall httpd</li><li>/etc/init.d/httpd stop</li><li>service httpd stop</li></ul><p>注意，httpd是一个进程组，有子进程，kill不能停止。</p><ul><li>路由表中，有目的地址、下一跳、出接口</li></ul><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><ol><li><a href="https://blog.csdn.net/mengdonghui123456/article/details/52935486" target="_blank" rel="noopener">docker 三组件：镜像、容器、仓库</a> </li></ol><p>docker的资源控制：</p><ul><li>blkio 输入输出</li><li>cpu cpu</li><li>namespace 隔离</li><li>devices 控制设备访问</li><li>freezer 挂起或恢复</li><li>net-cls 标记网络数据包</li></ul><h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><p>NAS和SAN的区别</p><ul><li>SAN 本身不自带文件系统，占用客户端资源提供文件系统功能；NAS 本身自 带文件系统 </li><li>SAN 存储通常使用 iSCSI、FC 等协议；NAS 通常使用 NFS、CIFS 等协议 </li><li>NAS 和 SAN 可以整合在同一台存储设备上，即可以实现一台存储产品既用于 SAN，又用于 NAS</li></ul><p>LVM逻辑卷扩展</p><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 云计算 </tag>
            
            <tag> Docker </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>华为2018软件精英挑战赛初赛记录</title>
      <link href="/posts/59415/"/>
      <url>/posts/59415/</url>
      <content type="html"><![CDATA[<p>2018华为软件精英挑战赛初赛的思路和代码总结。</p><a id="more"></a><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="github地址"><a href="#github地址" class="headerlink" title="github地址"></a>github地址</h3><div class="github-widget" data-repo="cloisonne/huawei-2018-software"></div><h3 id="用到的网址"><a href="#用到的网址" class="headerlink" title="用到的网址"></a>用到的网址</h3><p><a href="https://blog.csdn.net/u013719780/article/details/77435158" target="_blank" rel="noopener">手把手教你实现线性回归模型</a></p><p><a href="https://blog.csdn.net/jiede1/article/details/78245597" target="_blank" rel="noopener">机器学习算法—随机森林实现（包括回归和分类）</a></p><p><a href="https://blog.csdn.net/ppp8300885/article/details/77934822" target="_blank" rel="noopener">新手向的时间序列预测解决方案-前Top2%</a></p><hr><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="stacking"><a href="#stacking" class="headerlink" title="stacking"></a>stacking</h3><p>主要采用模型堆叠，stacking的方式，stack了包括拉格朗日均值、随机森林回归、线性回归、指数平滑等算法，利用本地调试脚本，进行参数优化。</p><h3 id="序列预测的平滑处理"><a href="#序列预测的平滑处理" class="headerlink" title="序列预测的平滑处理"></a>序列预测的平滑处理</h3><p>包括均值化、归一化、差分、滑动窗口。</p><h3 id="装箱算法"><a href="#装箱算法" class="headerlink" title="装箱算法"></a>装箱算法</h3><p>实现了包括首次适应、多重背包、模拟退火等。</p><hr><h2 id="失败原因"><a href="#失败原因" class="headerlink" title="失败原因"></a>失败原因</h2><h3 id="华为的问题"><a href="#华为的问题" class="headerlink" title="华为的问题"></a>华为的问题</h3><ul><li>高级测试用例格式与初级不符，浪费2次机会</li><li>规定时间60s不区分语言，python直接跑超时，浪费5次机会</li></ul><h3 id="自己的问题"><a href="#自己的问题" class="headerlink" title="自己的问题"></a>自己的问题</h3><ul><li>代码的优化不好，事实上模拟退火本地应该做一个60s的测试，测最大数据量</li><li>stack过多，这种比赛，模型越简单越容易</li><li>调参大赛，前期关注在初赛刷榜，关注点有问题</li><li>python没有numpy等第三方库，实现一些算法很麻烦，效率又低</li></ul><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C程序在linux下的segmentation-fault（core-dumped）</title>
      <link href="/posts/38716/"/>
      <url>/posts/38716/</url>
      <content type="html"><![CDATA[<p>调试程序过程中出现core dumped，各种原因项目无法导入eclipse，只能使用gbd进行调试。</p><a id="more"></a><hr><h3 id="Segmentation-fault-core-dumped-原因"><a href="#Segmentation-fault-core-dumped-原因" class="headerlink" title="Segmentation fault (core dumped)原因"></a>Segmentation fault (core dumped)原因</h3><p>Segmentation fault (core dumped)多为内存不当操作造成。空指针、野指针的读写操作，数组越界访问，破坏常量等。</p><hr><h3 id="使用gdb查看core文件"><a href="#使用gdb查看core文件" class="headerlink" title="使用gdb查看core文件"></a>使用gdb查看core文件</h3><p>设置core文件大小：</p><pre><code>ulimit -aulimit -c unlimited</code></pre><p>gdb查看core文件:</p><pre><code>gdb ./file core</code></pre><hr><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><blockquote><p>输入start使程序运行到main中第一行运行代码。next或者n为执行下一行程序，until xx执行到xx行，print或p可输出变量值，b xx用于在xx行设置断点，run或r用于执行程序至下一断点，d xx删除xx行断点。<br>我们可以先run一遍程序，这时它会提示出错行信息。然后until到出错行前5行，交替执行next和print，输出与出错行变量相关变量或指针的值。最终定位出错的根本操作在哪一行。修改之即可。</p></blockquote><hr><h3 id="出错原因"><a href="#出错原因" class="headerlink" title="出错原因"></a>出错原因</h3><p>数组越界，写C语言的过程中一定要密切关注数组越界问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#0  0x0000000000405ef0 in get_operator (fd=10, stateinfo=0x679c00 &lt;stateinfo&gt;)</span><br><span class="line">    at SIM_wifi_state.c:247</span><br><span class="line"></span><br><span class="line">warning: Source file is more recent than executable.</span><br><span class="line">247while(buff[i+1]!=&apos;\&quot;&apos;)</span><br><span class="line">[Current thread is 1 (Thread 0x7f784ff96700 (LWP 10051))]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用pycharm来进行git版本控制</title>
      <link href="/posts/26852/"/>
      <url>/posts/26852/</url>
      <content type="html"><![CDATA[<p>pycharm是世界上最好的IDE。</p><a id="more"></a><hr><p>发现有人写的更详细，不需要写了：<br><a href="https://www.cnblogs.com/caseast/p/6085837.html" target="_blank" rel="noopener">我是传送门</a></p><h3 id="Pycharm-Error-“fatal-Could-not-read-from-remote-repository-”"><a href="#Pycharm-Error-“fatal-Could-not-read-from-remote-repository-”" class="headerlink" title="Pycharm Error “fatal: Could not read from remote repository.”"></a>Pycharm Error “fatal: Could not read from remote repository.”</h3><p>外国网友的解决方案：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ln -s github_key_name id_rsa</span><br><span class="line">ln -s github_key_name.pub id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>没有用</p><p><code>重点在于setting中ssh方式要选择native</code></p><hr><h3 id="git中如何忽略文件"><a href="#git中如何忽略文件" class="headerlink" title="git中如何忽略文件"></a>git中如何忽略文件</h3><p>使用.gitignore <a href="https://github.com/cloisonne/gitignore" target="_blank" rel="noopener">github传送门</a></p><p>对于已经加入commit的，如何ignore</p><pre><code>git rm --cached -r .idea</code></pre><p>检查是否被忽略：</p><pre><code>git check-ignore -v .idea/</code></pre><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Pycharm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>leetcode数组思路总结</title>
      <link href="/posts/47967/"/>
      <url>/posts/47967/</url>
      <content type="html"><![CDATA[<p>暂时没什么前言。</p><a id="more"></a><hr><h2 id="N-sum类型题解"><a href="#N-sum类型题解" class="headerlink" title="N-sum类型题解"></a>N-sum类型题解</h2><h3 id="2-sum"><a href="#2-sum" class="headerlink" title="2-sum"></a>2-sum</h3><p>两种解法：</p><ul><li>排序，双指针首尾搜索，逐渐逼近</li><li>固定一个数，寻找(target-n)，使用了hashtable方法</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self,nums,target)</span>:</span></span><br><span class="line">lookup = []</span><br><span class="line"><span class="keyword">for</span> i,num <span class="keyword">in</span> enumerate(nums):</span><br><span class="line"><span class="keyword">if</span> target-num <span class="keyword">in</span> lookup:</span><br><span class="line"><span class="keyword">return</span> [lookup[target-num], i]</span><br><span class="line">lookup[num] = i</span><br></pre></td></tr></table></figure><hr><p>## </p><p>### </p><hr><p>## </p><p>### </p><hr>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Leetcode </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>leetcode位运算思路总结</title>
      <link href="/posts/24951/"/>
      <url>/posts/24951/</url>
      <content type="html"><![CDATA[<p>leetcode位运算题解和总结，使用Python完成，未来选择性的加入lintcode题解。</p><a id="more"></a><hr><p>Python3题解及刷题完成度详见gayhub：</p><div class="github-widget" data-repo="cloisonne/LeetCode"></div><hr><h3 id="Single-Number："><a href="#Single-Number：" class="headerlink" title="Single Number："></a>Single Number：</h3><p>对数组中的元素一一异或，相同的数异或=0。</p><p>实现异或的两种方式：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_xor</span><span class="params">(self,a,b)</span>:</span></span><br><span class="line"><span class="keyword">return</span> a^b</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> reduce(operator.xor, A)</span><br></pre></td></tr></table></figure></p><hr><h3 id="Single-Number-Ⅱ"><a href="#Single-Number-Ⅱ" class="headerlink" title="Single Number Ⅱ"></a>Single Number Ⅱ</h3><p>其他元素出现3次，使用统计方法或者位运算。<br>位运算解法和其他元素出现4次时的解法：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># one 出现一次  two 出现两次  three 出现三次</span></span><br><span class="line">one, two = <span class="number">0</span></span><br><span class="line">one, two = (~x &amp; one) | (x &amp; ~one &amp; ~two), (~x &amp; two) | (x &amp; one)</span><br><span class="line">one, two, three = (~x &amp; one) | (x &amp; ~one &amp; ~two &amp; ~three), (~x &amp; two) | (x &amp; one), (~x &amp; three) | (x &amp; two)</span><br></pre></td></tr></table></figure><p>使用counter计算：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">return</span> (collections.Counter(list(set(nums))*<span class="number">3</span>) - collections.Counter(nums)).keys()[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></p><hr><h3 id="Single-Number-Ⅲ"><a href="#Single-Number-Ⅲ" class="headerlink" title="Single Number Ⅲ"></a>Single Number Ⅲ</h3><p>两个元素出现一次，其他元素出现两次<br>全部异或，得到xor，获得bit：</p><pre><code>bit = xor &amp; ~xor</code></pre><p>bit是两个数第一个不相同的位</p><pre><code>result[bool(i&amp;bit)] ^= i</code></pre><p>其他数异或下来都是0 ， 这两个数异或下来的bool值一个是1 一个是0，成功分到了一个数组中。</p><hr><h3 id="Reverse-Bits"><a href="#Reverse-Bits" class="headerlink" title="Reverse Bits"></a>Reverse Bits</h3><p>二进制翻转，原数右移一位，赋给result，result左移一位：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">result &lt;&lt;= <span class="number">1</span></span><br><span class="line">result |= n&amp;<span class="number">1</span> <span class="comment"># 取右边第一位</span></span><br><span class="line">n &gt;&gt;= <span class="number">1</span></span><br></pre></td></tr></table></figure><p>使用zfill（返回指定长度的字符串–右对齐）的一行解：</p><pre><code>return int(bin(n)[2:].zfill(32)[::-1], 2) # bin()开头是0b</code></pre><p>Q:<code>如果该方法被大量调用，或者用于处理超大数据（Bulk data）时有什么优化方法？</code></p><p>A:将数字分成8份，每份只能是0-15，记录0-15的翻转值，array或者map：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] reverseHex = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">0</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">15</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// you need treat n as an unsigned value</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">reverseBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rev = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">        rev = (rev &lt;&lt; <span class="number">4</span>) + reverseHex[n &amp; <span class="number">0xF</span>];</span><br><span class="line">        n &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rev;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h3 id="Number-of-1-Bits"><a href="#Number-of-1-Bits" class="headerlink" title="Number of 1 Bits"></a>Number of 1 Bits</h3><p>求出二进制数中1的个数</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hammingWeight</span><span class="params">(self, n)</span>:</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n:</span><br><span class="line">n &amp;= n - <span class="number">1</span></span><br><span class="line">result += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p><code>n&amp;(n-1)的妙用</code>:</p><pre><code>n与n-1的区别在于,对于n,从右向左数的第一个&quot;1&quot;开始一直到右,和n-1,完全相反n&amp;(n-1)作用：将n的二进制表示中的最低位为1的改为0</code></pre><hr><h3 id="Bitwise-AND-of-Numbers-Range"><a href="#Bitwise-AND-of-Numbers-Range" class="headerlink" title="Bitwise AND of Numbers Range"></a>Bitwise AND of Numbers Range</h3><hr>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Leetcode </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/8/"/>
      <url>/posts/8/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>面试准备阅读列表</title>
      <link href="/posts/55073/"/>
      <url>/posts/55073/</url>
      <content type="html"><![CDATA[<p>习惯了手写笔记，将学习过程阅读的资料记录在这篇文档里，陆续增加。</p><a id="more"></a><hr><h3 id="书目"><a href="#书目" class="headerlink" title="书目"></a>书目</h3><ol><li>《机器学习》周志华 2018.2</li><li>《python高性能编程》 2018.3</li></ol><hr><h3 id="传统机器学习"><a href="#传统机器学习" class="headerlink" title="传统机器学习"></a>传统机器学习</h3><ol><li><a href="https://blog.csdn.net/v_JULY_v/article/details/78121924" target="_blank" rel="noopener">BAT机器学习面试1000题系列 </a> 每日刷</li><li><a href="http://blog.csdn.net/zouxy09/article/details/8537620/" target="_blank" rel="noopener">从最大似然到EM算法浅解 </a> 2018.3.7</li><li><a href="https://blog.csdn.net/mingtian715/article/details/53488094" target="_blank" rel="noopener">机器学习中的PR曲线和ROC曲线  </a> 2018.3.23</li><li><a href="https://blog.csdn.net/yanyanyufei96/article/details/71195063" target="_blank" rel="noopener">VotingClassifier 模型聚合——投票</a> 2018.3.25</li><li><a href="https://www.cnblogs.com/waring/p/5890214.html" target="_blank" rel="noopener">非平衡数据机器学习</a> 2018.3.25</li><li><a href="http://www.bubuko.com/infodetail-2133893.html" target="_blank" rel="noopener">机器学习：概率校准</a> 2018.3.25</li><li><a href="https://blog.csdn.net/u010976453/article/details/78488279" target="_blank" rel="noopener">机器学习中的损失函数 （着重比较：hinge loss vs softmax loss</a> 2018.3.25</li><li><a href="https://blog.csdn.net/july_sun/article/details/53088673" target="_blank" rel="noopener">机器学习常用的分类器比较</a> 2018.3.25</li><li><a href="https://blog.csdn.net/daunxx/article/details/51881956" target="_blank" rel="noopener">线性判别分析（Linear Discriminant Analysis）</a> 2018.3.26</li><li><a href="https://blog.csdn.net/u011001084/article/details/52523897" target="_blank" rel="noopener">机器学习常用 35 大算法盘点（附思维导图） </a> 2018.3.26</li><li><a href="https://blog.csdn.net/sinat_27554409/article/details/72823984" target="_blank" rel="noopener">机器学习的分类与主要算法对比</a> 2018.3.26</li><li><a href="https://www.cnblogs.com/maybe2030/p/5678387.html" target="_blank" rel="noopener">logistic函数和softmax函数</a> 2018.3.27</li><li><a href="https://blog.csdn.net/programmer_wei/article/details/52072939" target="_blank" rel="noopener">Logistic Regression（逻辑回归）原理及公式推导</a> 2018.3.27</li><li><a href="https://blog.csdn.net/jiede1/article/details/78245597" target="_blank" rel="noopener">机器学习算法—随机森林实现（包括回归和分类） </a> 2018.4.7</li></ol><hr><h3 id="feature-engineering"><a href="#feature-engineering" class="headerlink" title="feature engineering"></a>feature engineering</h3><ol><li><a href="http://www.360doc.com/content/17/0605/12/42308479_660150397.shtml" target="_blank" rel="noopener">如何用Python对数据进行差分</a> 2018.4.8</li></ol><hr><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h3><ol><li><a href="http://blog.csdn.net/flyinglittlepig/article/details/71598144" target="_blank" rel="noopener">反向传播(BPTT)与循环神经网络(RNN)文本预测</a> 2018.3.21</li><li><a href="http://blog.csdn.net/flyinglittlepig/article/details/72229041" target="_blank" rel="noopener">LSTM结构理解与python实现</a> 2018.3.21</li><li><a href="https://blog.csdn.net/hongmaodaxia/article/details/41809341" target="_blank" rel="noopener">深度学习BP算法的推导（附加RNN,LSTM的推导说明）</a> 2018.3.23</li><li><a href="http://www.cnblogs.com/iamccme/archive/2013/05/14/3078418.html" target="_blank" rel="noopener">《统计学习方法》 梯度下降的两种应用场景）</a> 2018.3.23</li><li><a href="https://blog.csdn.net/u014313009/article/details/51043064" target="_blank" rel="noopener">交叉熵代价函数（作用及公式推导）</a> 2018.3.23</li><li><a href="https://blog.csdn.net/v_july_v/article/details/51812459" target="_blank" rel="noopener">CNN笔记：通俗理解卷积神经网络</a> 2018.3.23</li><li><a href="https://blog.csdn.net/login_sonata/article/details/77488383" target="_blank" rel="noopener">CNN卷积神经网络和反向传播</a> 2018.4.5</li><li><a href="https://blog.csdn.net/dongfang1984/article/details/76974087" target="_blank" rel="noopener">pooling层是如何反向传播的？ </a> 2018.4.5</li></ol><hr><h3 id="人脸识别"><a href="#人脸识别" class="headerlink" title="人脸识别"></a>人脸识别</h3><p>详见此篇博文： <a href="/posts/9363/">有遮挡的人脸识别论文阅读整理</a> 2018.5</p><hr><h3 id="kaggle、天池"><a href="#kaggle、天池" class="headerlink" title="kaggle、天池"></a>kaggle、天池</h3><ol><li><a href="https://arxiv.org/pdf/1708.05123.pdf" target="_blank" rel="noopener">Deep &amp; Cross Network for Ad Click Predictions）</a> 2018.4.4</li></ol><hr><h3 id="自然语言处理"><a href="#自然语言处理" class="headerlink" title="自然语言处理"></a>自然语言处理</h3><ol><li><a href="https://zhuanlan.zhihu.com/p/24037830" target="_blank" rel="noopener">Spark MLlib 文本特征提取（TF-IDF/Word2Vec/CountVectorizer）</a> 2018.3.25</li><li><a href="https://blog.csdn.net/mylove0414/article/details/61616617" target="_blank" rel="noopener">大白话讲解word2vec到底在做些什么</a> 2018.3.25</li><li><a href="https://www.kaggle.com/marcospinaci/talking-plots-2-adding-grammar" target="_blank" rel="noopener">kaggle自然语言处理</a> 2018.3.25</li></ol><hr><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ol><li><a href="https://blog.csdn.net/sinat_16790541/article/details/43376741" target="_blank" rel="noopener">python 模块相互import</a> 2018.4.6</li><li><a href="https://segmentfault.com/a/1190000009398663" target="_blank" rel="noopener">简单聊聊Python中的wraps修饰器</a> 2018.4.6</li></ol><hr><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ol><li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/" target="_blank" rel="noopener">Linux 技巧：让进程在后台可靠运行的几种方法</a> 2018.4.24</li><li><a href="https://blog.csdn.net/u013983194/article/details/78546599" target="_blank" rel="noopener">ubuntu16.04搭建ss服务器 </a> 2018.4.24</li></ol><hr><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><ol><li><a href="https://blog.csdn.net/moliilom/article/details/50909096" target="_blank" rel="noopener">Java语言中try-catch-finally的执行顺序</a> 2018.4.10</li></ol><hr><h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h3><ol><li><a href="https://blog.csdn.net/wangyunpeng0319/article/details/78651998" target="_blank" rel="noopener">RPC服务和HTTP服务对比</a> 2018.3.25</li></ol><hr><h3 id="其他的收藏"><a href="#其他的收藏" class="headerlink" title="其他的收藏"></a>其他的收藏</h3><ol><li><a href="http://blog.csdn.net/stpeace/article/details/45767245" target="_blank" rel="noopener"> 彻底解读剪不断理还乱的\r\n和\n </a> 2018.3.22</li></ol><hr>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MachineLearning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>google机器学习速成课程总结</title>
      <link href="/posts/61970/"/>
      <url>/posts/61970/</url>
      <content type="html"><![CDATA[<p>Google新出的16小时机器学习速成课程，主要针对TensorFlow，记一些重点。主题不支持MathJax，公式省略。</p><a id="more"></a><hr><h2 id="机器学习概念"><a href="#机器学习概念" class="headerlink" title="机器学习概念"></a>机器学习概念</h2><hr><h3 id="机器学习主要术语"><a href="#机器学习主要术语" class="headerlink" title="机器学习主要术语"></a>机器学习主要术语</h3><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>在简单线性回归中，标签是我们要预测的事物，即 y 变量。标签可以是小麦未来的价格、图片中显示的动物品种、音频剪辑的含义或任何事物。</p><h4 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h4><p>在简单线性回归中，特征是输入变量，即 x 变量。简单的机器学习项目可能会使用单个特征，而比较复杂的机器学习项目可能会使用数百万个特征，按如下方式指定：</p><p>在垃圾邮件检测器示例中，特征可能包括：</p><ul><li>电子邮件文本中的字词</li><li>发件人的地址</li><li>发送电子邮件的时段</li><li>电子邮件中包含“一种奇怪的把戏”这样的短语。</li></ul><h4 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h4><p>样本是指数据的特定实例：x。（我们采用粗体 x 表示它是一个矢量。）我们将样本分为以下两类：</p><ul><li>有标签样本</li><li>无标签样本</li></ul><h4 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h4><p>模型定义了特征与标签之间的关系。例如，垃圾邮件检测模型可能会将某些特征与“垃圾邮件”紧密联系起来。我们来重点介绍一下模型生命周期的两个阶段：</p><ul><li><p>训练表示创建或学习模型。也就是说，您向模型展示有标签样本，让模型逐渐学习特征与标签之间的关系。</p></li><li><p>推断表示将训练后的模型应用于无标签样本。也就是说，您使用训练后的模型来做出有用的预测 (y’)。</p></li></ul><h4 id="回归与分类"><a href="#回归与分类" class="headerlink" title="回归与分类"></a>回归与分类</h4><ul><li><p>回归模型可预测连续值。例如，回归模型做出的预测可回答如下问题：</p></li><li><p>分类模型可预测离散值。例如，分类模型做出的预测可回答如下问题：</p></li></ul><hr><h3 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h3><p>过</p><hr><h3 id="训练与损失"><a href="#训练与损失" class="headerlink" title="训练与损失"></a>训练与损失</h3><p>损失是对糟糕预测的惩罚。也就是说，损失是一个数值，表示对于单个样本而言模型预测的准确程度。如果模型的预测完全准确，则损失为零，否则损失会较大。训练模型的目标是从所有样本中找到一组平均损失“较小”的权重和偏差。</p><ul><li><p>平方损失（又称为 L2 损失）</p></li><li><p>均方误差 (MSE)</p><p>  求出各个样本的所有平方损失之和，然后除以样本数量</p></li></ul><hr><h3 id="降低损失-Reducing-Loss"><a href="#降低损失-Reducing-Loss" class="headerlink" title="降低损失(Reducing Loss)"></a>降低损失(Reducing Loss)</h3><ul><li><p>迭代方法</p></li><li><p>梯度下降法</p></li><li><p>学习速率</p></li><li><p>优化学习速率</p></li><li><p>随机梯度下降法（SGD）</p><p>  小批量随机梯度下降法（小批量 SGD）是介于全批量迭代与 SGD 之间的折衷方案。小批量通常包含 10-1000 个随机选择的样本。小批量 SGD 可以减少 SGD 中的杂乱样本数量，但仍然比全批量更高效。</p></li></ul><hr><h3 id="使用-TensorFlow-的起始步骤"><a href="#使用-TensorFlow-的起始步骤" class="headerlink" title="使用 TensorFlow 的起始步骤"></a>使用 TensorFlow 的起始步骤</h3><table><thead><tr><th>工具包</th><th>说明</th></tr></thead><tbody><tr><td>Estimator (tf.estimator)</td><td>高级 OOP API</td></tr><tr><td>tf.layers/tf.losses/tf.metrics</td><td>用于常见模型组件的库</td></tr><tr><td>TensorFlow</td><td>低级 API</td></tr></tbody></table><p>TensorFlow 由以下两个组件组成：</p><ul><li>图协议缓冲区（Protocol Buffers）</li><li>执行（分布式）图的运行时</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set up a linear classifier.</span></span><br><span class="line">classifier = tf.estimator.LinearClassifier()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Train the model on some example data.</span></span><br><span class="line">classifier.train(input_fn=train_input_fn, steps=<span class="number">2000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use it to predict.</span></span><br><span class="line">predictions = classifier.predict(input_fn=predict_input_fn)</span><br></pre></td></tr></table></figure><p>一个例子：<br>    在 TensorFlow 中使用 LinearRegressor 类并基于单个输入特征预测各城市街区的房屋价值中位数<br>    使用均方根误差 (RMSE) 评估模型预测的准确率<br>    通过调整模型的超参数提高模型准确率</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> IPython <span class="keyword">import</span> display</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> gridspec</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.data <span class="keyword">import</span> Dataset</span><br><span class="line"></span><br><span class="line">tf.logging.set_verbosity(tf.logging.ERROR)</span><br><span class="line">pd.options.display.max_rows = <span class="number">10</span></span><br><span class="line">pd.options.display.float_format = <span class="string">'&#123;:.1f&#125;'</span>.format</span><br><span class="line"></span><br><span class="line">california_housing_dataframe = pd.read_csv(<span class="string">"https://storage.googleapis.com/ml_universities/california_housing_train.csv"</span>, sep=<span class="string">","</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机化处理</span></span><br><span class="line">california_housing_dataframe = california_housing_dataframe.reindex(</span><br><span class="line">    np.random.permutation(california_housing_dataframe.index))</span><br><span class="line">california_housing_dataframe[<span class="string">"median_house_value"</span>] /= <span class="number">1000.0</span></span><br><span class="line">california_housing_dataframe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查数据</span></span><br><span class="line">california_housing_dataframe.describe()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define the input feature: total_rooms.</span></span><br><span class="line">my_feature = california_housing_dataframe[[<span class="string">"total_rooms"</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a numeric feature column for total_rooms.</span></span><br><span class="line">feature_columns = [tf.feature_column.numeric_column(<span class="string">"total_rooms"</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define the label.</span></span><br><span class="line">targets = california_housing_dataframe[<span class="string">"median_house_value"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use gradient descent as the optimizer for training the model.</span></span><br><span class="line">my_optimizer=tf.train.GradientDescentOptimizer(learning_rate=<span class="number">0.0000001</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 梯度裁剪 (gradient clipping)</span></span><br><span class="line">my_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, <span class="number">5.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure the linear regression model with our feature columns and optimizer.</span></span><br><span class="line"><span class="comment"># Set a learning rate of 0.0000001 for Gradient Descent.</span></span><br><span class="line">linear_regressor = tf.estimator.LinearRegressor(</span><br><span class="line">    feature_columns=feature_columns,</span><br><span class="line">    optimizer=my_optimizer</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_input_fn</span><span class="params">(features, targets, batch_size=<span class="number">1</span>, shuffle=True, num_epochs=None)</span>:</span></span><br><span class="line">    <span class="string">"""Trains a linear regression model of one feature.</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      features: pandas DataFrame of features</span></span><br><span class="line"><span class="string">      targets: pandas DataFrame of targets</span></span><br><span class="line"><span class="string">      batch_size: Size of batches to be passed to the model</span></span><br><span class="line"><span class="string">      shuffle: True or False. Whether to shuffle the data.</span></span><br><span class="line"><span class="string">      num_epochs: Number of epochs for which data should be repeated. None = repeat indefinitely</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      Tuple of (features, labels) for next data batch</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># Convert pandas data into a dict of np arrays.</span></span><br><span class="line">    features = &#123;key:np.array(value) <span class="keyword">for</span> key,value <span class="keyword">in</span> dict(features).items()&#125;                                           </span><br><span class="line"> </span><br><span class="line">    <span class="comment"># Construct a dataset, and configure batching/repeating</span></span><br><span class="line">    ds = Dataset.from_tensor_slices((features,targets)) <span class="comment"># warning: 2GB limit</span></span><br><span class="line">    ds = ds.batch(batch_size).repeat(num_epochs)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Shuffle the data, if specified</span></span><br><span class="line">    <span class="keyword">if</span> shuffle:</span><br><span class="line">      ds = ds.shuffle(buffer_size=<span class="number">10000</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Return the next batch of data</span></span><br><span class="line">    features, labels = ds.make_one_shot_iterator().get_next()</span><br><span class="line">    <span class="keyword">return</span> features, labels</span><br><span class="line"></span><br><span class="line">_ = linear_regressor.train(</span><br><span class="line">    input_fn = <span class="keyword">lambda</span>:my_input_fn(my_feature, targets),</span><br><span class="line">    steps=<span class="number">100</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create an input function for predictions.</span></span><br><span class="line"><span class="comment"># Note: Since we're making just one prediction for each example, we don't </span></span><br><span class="line"><span class="comment"># need to repeat or shuffle the data here.</span></span><br><span class="line">prediction_input_fn =<span class="keyword">lambda</span>: my_input_fn(my_feature, targets, num_epochs=<span class="number">1</span>, shuffle=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call predict() on the linear_regressor to make predictions.</span></span><br><span class="line">predictions = linear_regressor.predict(input_fn=prediction_input_fn)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Format predictions as a NumPy array, so we can calculate error metrics.</span></span><br><span class="line">predictions = np.array([item[<span class="string">'predictions'</span>][<span class="number">0</span>] <span class="keyword">for</span> item <span class="keyword">in</span> predictions])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print Mean Squared Error and Root Mean Squared Error.</span></span><br><span class="line">mean_squared_error = metrics.mean_squared_error(predictions, targets)</span><br><span class="line">root_mean_squared_error = math.sqrt(mean_squared_error)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Mean Squared Error (on training data): %0.3f"</span> % mean_squared_error</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Root Mean Squared Error (on training data): %0.3f"</span> % root_mean_squared_error</span><br></pre></td></tr></table></figure><p>写成一个函数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">train_model</span><span class="params">(learning_rate, steps, batch_size, input_feature=<span class="string">"total_rooms"</span>)</span>:</span></span><br><span class="line">  <span class="string">"""Trains a linear regression model of one feature.</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  Args:</span></span><br><span class="line"><span class="string">    learning_rate: A `float`, the learning rate.</span></span><br><span class="line"><span class="string">    steps: A non-zero `int`, the total number of training steps. A training step</span></span><br><span class="line"><span class="string">      consists of a forward and backward pass using a single batch.</span></span><br><span class="line"><span class="string">    batch_size: A non-zero `int`, the batch size.</span></span><br><span class="line"><span class="string">    input_feature: A `string` specifying a column from `california_housing_dataframe`</span></span><br><span class="line"><span class="string">      to use as input feature.</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  </span><br><span class="line">  periods = <span class="number">10</span></span><br><span class="line">  steps_per_period = steps / periods</span><br><span class="line"></span><br><span class="line">  my_feature = input_feature</span><br><span class="line">  my_feature_data = california_housing_dataframe[[my_feature]]</span><br><span class="line">  my_label = <span class="string">"median_house_value"</span></span><br><span class="line">  targets = california_housing_dataframe[my_label]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Create feature columns</span></span><br><span class="line">  feature_columns = [tf.feature_column.numeric_column(my_feature)]</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># Create input functions</span></span><br><span class="line">  training_input_fn = <span class="keyword">lambda</span>:my_input_fn(my_feature_data, targets, batch_size=batch_size)</span><br><span class="line">  prediction_input_fn = <span class="keyword">lambda</span>: my_input_fn(my_feature_data, targets, num_epochs=<span class="number">1</span>, shuffle=<span class="keyword">False</span>)</span><br><span class="line">  </span><br><span class="line">  <span class="comment"># Create a linear regressor object.</span></span><br><span class="line">  my_optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate)</span><br><span class="line">  my_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, <span class="number">5.0</span>)</span><br><span class="line">  linear_regressor = tf.estimator.LinearRegressor(</span><br><span class="line">      feature_columns=feature_columns,</span><br><span class="line">      optimizer=my_optimizer</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Set up to plot the state of our model's line each period.</span></span><br><span class="line">  plt.figure(figsize=(<span class="number">15</span>, <span class="number">6</span>))</span><br><span class="line">  plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">  plt.title(<span class="string">"Learned Line by Period"</span>)</span><br><span class="line">  plt.ylabel(my_label)</span><br><span class="line">  plt.xlabel(my_feature)</span><br><span class="line">  sample = california_housing_dataframe.sample(n=<span class="number">300</span>)</span><br><span class="line">  plt.scatter(sample[my_feature], sample[my_label])</span><br><span class="line">  colors = [cm.coolwarm(x) <span class="keyword">for</span> x <span class="keyword">in</span> np.linspace(<span class="number">-1</span>, <span class="number">1</span>, periods)]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Train the model, but do so inside a loop so that we can periodically assess</span></span><br><span class="line">  <span class="comment"># loss metrics.</span></span><br><span class="line">  <span class="keyword">print</span> <span class="string">"Training model..."</span></span><br><span class="line">  <span class="keyword">print</span> <span class="string">"RMSE (on training data):"</span></span><br><span class="line">  root_mean_squared_errors = []</span><br><span class="line">  <span class="keyword">for</span> period <span class="keyword">in</span> range (<span class="number">0</span>, periods):</span><br><span class="line">    <span class="comment"># Train the model, starting from the prior state.</span></span><br><span class="line">    linear_regressor.train(</span><br><span class="line">        input_fn=training_input_fn,</span><br><span class="line">        steps=steps_per_period</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># Take a break and compute predictions.</span></span><br><span class="line">    predictions = linear_regressor.predict(input_fn=prediction_input_fn)</span><br><span class="line">    predictions = np.array([item[<span class="string">'predictions'</span>][<span class="number">0</span>] <span class="keyword">for</span> item <span class="keyword">in</span> predictions])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Compute loss.</span></span><br><span class="line">    root_mean_squared_error = math.sqrt(</span><br><span class="line">        metrics.mean_squared_error(predictions, targets))</span><br><span class="line">    <span class="comment"># Occasionally print the current loss.</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"  period %02d : %0.2f"</span> % (period, root_mean_squared_error)</span><br><span class="line">    <span class="comment"># Add the loss metrics from this period to our list.</span></span><br><span class="line">    root_mean_squared_errors.append(root_mean_squared_error)</span><br><span class="line">    <span class="comment"># Finally, track the weights and biases over time.</span></span><br><span class="line">    <span class="comment"># Apply some math to ensure that the data and line are plotted neatly.</span></span><br><span class="line">    y_extents = np.array([<span class="number">0</span>, sample[my_label].max()])</span><br><span class="line">    </span><br><span class="line">    weight = linear_regressor.get_variable_value(<span class="string">'linear/linear_model/%s/weights'</span> % input_feature)[<span class="number">0</span>]</span><br><span class="line">    bias = linear_regressor.get_variable_value(<span class="string">'linear/linear_model/bias_weights'</span>)</span><br><span class="line"></span><br><span class="line">    x_extents = (y_extents - bias) / weight</span><br><span class="line">    x_extents = np.maximum(np.minimum(x_extents,</span><br><span class="line">                                      sample[my_feature].max()),</span><br><span class="line">                           sample[my_feature].min())</span><br><span class="line">    y_extents = weight * x_extents + bias</span><br><span class="line">    plt.plot(x_extents, y_extents, color=colors[period]) </span><br><span class="line">  <span class="keyword">print</span> <span class="string">"Model training finished."</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Output a graph of loss metrics over periods.</span></span><br><span class="line">  plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">  plt.ylabel(<span class="string">'RMSE'</span>)</span><br><span class="line">  plt.xlabel(<span class="string">'Periods'</span>)</span><br><span class="line">  plt.title(<span class="string">"Root Mean Squared Error vs. Periods"</span>)</span><br><span class="line">  plt.tight_layout()</span><br><span class="line">  plt.plot(root_mean_squared_errors)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Output a table with calibration data.</span></span><br><span class="line">  calibration_data = pd.DataFrame()</span><br><span class="line">  calibration_data[<span class="string">"predictions"</span>] = pd.Series(predictions)</span><br><span class="line">  calibration_data[<span class="string">"targets"</span>] = pd.Series(targets)</span><br><span class="line">  display.display(calibration_data.describe())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">print</span> <span class="string">"Final RMSE (on training data): %0.2f"</span> % root_mean_squared_error</span><br></pre></td></tr></table></figure><p><strong>常用超参数</strong></p><ul><li>steps：是指训练迭代的总次数。一步计算一批样本产生的损失，然后使用该值修改模型的权重一次。</li><li>batch size：是指单步的样本数量（随机选择）。例如，SGD 的批量大小为 1。</li></ul><p><strong>方便变量</strong></p><pre><code>periods：控制报告的粒度。例如，如果 periods 设为 7 且 steps 设为 70，则练习将每 10 步（或 7 次）输出一次损失值。与超参数不同，我们不希望您修改 periods 的值。请注意，修改 periods 不会更改您的模型所学习的内容。</code></pre><p><strong>合成特征和离群值</strong></p><ul><li>合成特征</li><li>识别离群值</li><li>截取离群值<br>  离群值设置为相对合理的最小值或最大值来进一步改进模型拟合情况。</li></ul><hr><h3 id="过拟合和泛化"><a href="#过拟合和泛化" class="headerlink" title="过拟合和泛化"></a>过拟合和泛化</h3><p>以下三项基本假设阐明了泛化：</p><ul><li>我们从分布中随机抽取独立同分布 (i.i.d) 的样本。换言之，样本之间不会互相影响。（另一种解释：i.i.d. 是表示变量随机性的一种方式）。</li><li>分布是平稳的；即分布在数据集内不会发生变化。</li><li>我们从同一分布的数据划分中抽取样本。</li></ul><hr><h3 id="拆分数据"><a href="#拆分数据" class="headerlink" title="拆分数据"></a>拆分数据</h3><ul><li>训练集 - 用于训练模型的子集。</li><li>测试集 - 用于测试训练后模型的子集。</li></ul><hr><h3 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h3><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><ul><li>映射数值</li><li>映射字符串（onehot encoding</li><li>映射分类（枚举）值</li></ul><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>避免很少使用的离散特征值</li><li>最好具有清晰明确的含义</li><li>不要将“神奇”的值与实际数据混为一谈（异常值</li><li>考虑上游不稳定性<h4 id="数据清理"><a href="#数据清理" class="headerlink" title="数据清理"></a>数据清理</h4></li></ul><ol><li>缩放特征值<ul><li>帮助梯度下降法更快速地收敛。</li><li>帮助避免“NaN 陷阱”。在这种陷阱中，模型中的一个数值变成 NaN（例如，当某个值在训练期间超出浮点精确率限制时），并且模型中的所有其他数值最终也会因数学运算而变成 NaN。</li><li>帮助模型为每个特征确定合适的权重。如果没有进行特征缩放，则模型会对范围较大的特征投入过多精力。</li></ul></li><li>处理极端离群值<ul><li>对数缩放</li><li>限制特征值</li></ul></li><li>分箱（划分范围</li><li>清查</li></ol><hr><h3 id="特征组合-Feature-Crosses"><a href="#特征组合-Feature-Crosses" class="headerlink" title="特征组合(Feature Crosses)"></a>特征组合(Feature Crosses)</h3><h4 id="对非线性规律进行编码"><a href="#对非线性规律进行编码" class="headerlink" title="对非线性规律进行编码"></a>对非线性规律进行编码</h4><p>特征组合是指通过将两个或多个输入特征相乘来对特征空间中的非线性规律进行编码的合成特征。“cross”（组合）这一术语来自 cross product（向量积）。</p><h4 id="组合独热矢量"><a href="#组合独热矢量" class="headerlink" title="组合独热矢量"></a>组合独热矢量</h4><p>对独热编码进行特征组合，则会得到可解读为逻辑连接的二元特征</p><p>线性学习器可以很好地扩展到大量数据。对大规模数据集使用特征组合是学习高度复杂模型的一种有效策略。</p><hr><h3 id="简化正则化-Regularization-for-Simplicity-：L₂-正则化"><a href="#简化正则化-Regularization-for-Simplicity-：L₂-正则化" class="headerlink" title="简化正则化 (Regularization for Simplicity)：L₂ 正则化"></a>简化正则化 (Regularization for Simplicity)：L₂ 正则化</h3><p>通过降低复杂模型的复杂度来防止过拟合，这种原则称为正则化。<br>以最小化损失和复杂度为目标，这称为<code>结构风险最小化</code>.</p>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于Python元类metaclass和在ORM中的应用</title>
      <link href="/posts/29034/"/>
      <url>/posts/29034/</url>
      <content type="html"><![CDATA[<p>元类其实并不复杂，即生成类的一个类，type可以动态创建类，同时，可以使用更为强大的metaclass。<br>ORM是这种模式的应用场景，即Object Relational Mapping。此外本文还介绍了协程coroutine和logging模块。</p><a id="more"></a><hr><h2 id="type和metaclass生成类"><a href="#type和metaclass生成类" class="headerlink" title="type和metaclass生成类"></a>type和metaclass生成类</h2><h3 id="type生成类"><a href="#type生成类" class="headerlink" title="type生成类"></a>type生成类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(self, name=<span class="string">'world'</span>)</span>:</span> <span class="comment"># 先定义函数</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'Hello, %s.'</span> % name)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Hello = type(<span class="string">'Hello'</span>, (object,), dict(hello=fn)) <span class="comment"># 创建Hello class</span></span><br></pre></td></tr></table></figure><h3 id="metaclass生成类"><a href="#metaclass生成类" class="headerlink" title="metaclass生成类"></a>metaclass生成类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListMetaclass</span><span class="params">(type)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, name, bases, attrs)</span>:</span></span><br><span class="line">        attrs[<span class="string">'add'</span>] = <span class="keyword">lambda</span> self, value: self.append(value)</span><br><span class="line">        <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyList</span><span class="params">(list, metaclass=ListMetaclass)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><hr><h2 id="ORM实例"><a href="#ORM实例" class="headerlink" title="ORM实例"></a>ORM实例</h2><h3 id="廖雪峰简单ORM"><a href="#廖雪峰简单ORM" class="headerlink" title="廖雪峰简单ORM"></a>廖雪峰简单ORM</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用metaclass写一个ORM的demo</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Field</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, column_type)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.column_type = column_type</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回对象的字符串表达式</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;%s:%s&gt;'</span> % (self.__class__.name, self.name)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringField</span><span class="params">(Field)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        super(StringField, self).__init__(name,<span class="string">'varchar(100)'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntagerField</span><span class="params">(Field)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        super(IntagerField, self).__init__(name, <span class="string">'bigint'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelMetaclass</span><span class="params">(type)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, name, bases, attrs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">'Model'</span>:</span><br><span class="line">            <span class="keyword">return</span> type.__new__(cls,name,bases,attrs)</span><br><span class="line">        print(<span class="string">'Found model: %s'</span> % name)</span><br><span class="line">        mappings = dict()</span><br><span class="line">        <span class="keyword">for</span> k,v <span class="keyword">in</span> attrs.items():</span><br><span class="line">            <span class="keyword">if</span> isinstance(v, Field):</span><br><span class="line">                print(<span class="string">'Found mapping: %s ==&gt; %s'</span> % (k,v))</span><br><span class="line">                mappings[k] = v</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> mappings.keys():</span><br><span class="line">            attrs.pop()</span><br><span class="line">        attrs[<span class="string">'__mappings__'</span>] = mappings</span><br><span class="line">        attrs[<span class="string">'__table__'</span>] = name</span><br><span class="line">        <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span><span class="params">(dict, metaclass=ModelMetaclass)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kw)</span>:</span></span><br><span class="line">        super(Model, self).__init__(**kw)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self[key]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">r"'Model' object has no attribute '%s'"</span> % key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, key, value)</span>:</span></span><br><span class="line">        self[key] = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></span><br><span class="line">        fields = []</span><br><span class="line">        params = []</span><br><span class="line">        args = []</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> self.__mappings__.items():</span><br><span class="line">            fields.append(v.name)</span><br><span class="line">            params.append(<span class="string">'?'</span>)</span><br><span class="line">            args.append(getattr(self, k, <span class="keyword">None</span>))</span><br><span class="line">        sql = <span class="string">'insert into %s (%s) values (%s)'</span> % (self.__table__, <span class="string">','</span>.join(fields), <span class="string">','</span>.join(params))</span><br><span class="line">        print(<span class="string">'SQL: %s'</span> % sql)</span><br><span class="line">        print(<span class="string">'ARGS: %s'</span> % str(args))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用方法</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(Model)</span>:</span></span><br><span class="line">    id = IntagerField(<span class="string">'id'</span>)</span><br><span class="line">    name = StringField(<span class="string">'username'</span>)</span><br><span class="line">    email = StringField(<span class="string">'email'</span>)</span><br><span class="line">    password = StringField(<span class="string">'password'</span>)</span><br><span class="line"></span><br><span class="line">u = User(id = <span class="number">12345</span>, name = <span class="string">'Li'</span>, email = <span class="string">'123'</span>, password = <span class="string">'22'</span>)</span><br><span class="line"></span><br><span class="line">u.save()</span><br></pre></td></tr></table></figure><h3 id="更复杂的一个ORM"><a href="#更复杂的一个ORM" class="headerlink" title="更复杂的一个ORM"></a>更复杂的一个ORM</h3><p>来自<a href="http://www.songluyi.com/python-%e7%bc%96%e5%86%99orm%e6%97%b6%e7%9a%84%e9%87%8d%e9%9a%be%e7%82%b9%e6%8e%8c%e6%8f%a1/" target="_blank" rel="noopener">编写orm时的重难点掌握</a></p><p>代码比较复杂：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(level=logging.INFO)</span><br><span class="line"><span class="comment"># 一次使用异步 处处使用异步</span></span><br><span class="line"><span class="keyword">import</span> aiomysql</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(sql,args=<span class="params">()</span>)</span>:</span></span><br><span class="line">    logging.info(<span class="string">'SQL:%s'</span> %sql)</span><br><span class="line"><span class="meta">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_pool</span><span class="params">(loop, **kw)</span>:</span></span><br><span class="line">    logging.info(<span class="string">' start creating database connection pool'</span>)</span><br><span class="line">    <span class="keyword">global</span> __pool</span><br><span class="line">    <span class="comment"># 理解这里的yield from 是很重要的</span></span><br><span class="line">    __pool=<span class="keyword">yield</span> <span class="keyword">from</span> aiomysql.create_pool(</span><br><span class="line">        host=kw.get(<span class="string">'host'</span>,<span class="string">'localhost'</span>),</span><br><span class="line">        port=kw.get(<span class="string">'port'</span>,<span class="number">3306</span>),</span><br><span class="line">        user=kw[<span class="string">'user'</span>],</span><br><span class="line">        password=kw[<span class="string">'password'</span>],</span><br><span class="line">        db=kw[<span class="string">'db'</span>],</span><br><span class="line">        charset=kw.get(<span class="string">'charset'</span>,<span class="string">'utf8'</span>),</span><br><span class="line">        autocommit=kw.get(<span class="string">'autocommit'</span>,<span class="keyword">True</span>),</span><br><span class="line">        maxsize=kw.get(<span class="string">'maxsize'</span>,<span class="number">10</span>),</span><br><span class="line">        <span class="comment"># 目前不清楚这个minsize是什么鬼</span></span><br><span class="line">        minsize=kw.get(<span class="string">'minsize'</span>,<span class="number">1</span>),</span><br><span class="line">        loop=loop</span><br><span class="line">        )</span><br><span class="line"> </span><br><span class="line"><span class="meta">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destroy_pool</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> __pool</span><br><span class="line">    <span class="keyword">if</span> __pool <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> :</span><br><span class="line">        __pool.close()</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> __pool.wait_closed()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 我很好奇为啥不用commit 事务不用提交么</span></span><br><span class="line"><span class="meta">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select</span><span class="params">(sql, args, size=None)</span>:</span></span><br><span class="line">    log(sql,args)</span><br><span class="line">    <span class="keyword">global</span> __pool</span><br><span class="line">    <span class="comment"># 666 建立游标</span></span><br><span class="line">    <span class="comment"># -*- yield from 将会调用一个子协程，并直接返回调用的结果</span></span><br><span class="line">    <span class="comment"># yield from从连接池中返回一个连接</span></span><br><span class="line">    <span class="keyword">with</span> (<span class="keyword">yield</span> <span class="keyword">from</span> __pool)<span class="keyword">as</span> conn:</span><br><span class="line">        cur = <span class="keyword">yield</span> <span class="keyword">from</span> conn.cursor(aiomysql.DictCursor)</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> cur.execute(sql.replace(<span class="string">'?'</span>, <span class="string">'%s'</span>), args)</span><br><span class="line">        <span class="keyword">if</span> size:</span><br><span class="line">            rs = <span class="keyword">yield</span> <span class="keyword">from</span> cur.fetchmany(size)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rs = <span class="keyword">yield</span> <span class="keyword">from</span> cur.fetchall()</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> cur.close()</span><br><span class="line">        logging.info(<span class="string">'rows have returned %s'</span> %len(rs))</span><br><span class="line">    <span class="keyword">return</span> rs</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 封装INSERT, UPDATE, DELETE</span></span><br><span class="line"><span class="comment"># 语句操作参数一样，所以定义一个通用的执行函数</span></span><br><span class="line"><span class="comment"># 返回操作影响的行号</span></span><br><span class="line"><span class="comment"># 我想说的是 知道影响行号有个叼用</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(sql,args, autocommit=True)</span>:</span></span><br><span class="line">    log(sql)</span><br><span class="line">    <span class="keyword">global</span> __pool</span><br><span class="line">    <span class="keyword">with</span> (<span class="keyword">yield</span> <span class="keyword">from</span> __pool) <span class="keyword">as</span> conn:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 因为execute类型sql操作返回结果只有行号，不需要dict</span></span><br><span class="line">            cur = <span class="keyword">yield</span> <span class="keyword">from</span> conn.cursor()</span><br><span class="line">            <span class="comment"># 顺便说一下 后面的args 别掉了 掉了是无论如何都插入不了数据的</span></span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> cur.execute(sql.replace(<span class="string">'?'</span>, <span class="string">'%s'</span>), args)</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> conn.commit()</span><br><span class="line">            affected_line=cur.rowcount</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> cur.close()</span><br><span class="line">            print(<span class="string">'execute : '</span>, affected_line)</span><br><span class="line">        <span class="keyword">except</span> BaseException <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line">        <span class="keyword">return</span> affected_line</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 这个函数主要是把查询字段计数 替换成sql识别的?</span></span><br><span class="line"><span class="comment"># 比如说：insert into  `User` (`password`, `email`, `name`, `id`) values (?,?,?,?)  看到了么 后面这四个问号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_args_string</span><span class="params">(num)</span>:</span></span><br><span class="line">    lol=[]</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(num):</span><br><span class="line">        lol.append(<span class="string">'?'</span>)</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">','</span>.join(lol))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义Field类，负责保存(数据库)表的字段名和字段类型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Field</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 表的字段包含名字、类型、是否为表的主键和默认值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, column_type, primary__key, default)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.column_type=column_type</span><br><span class="line">        self.primary_key=primary__key</span><br><span class="line">        self.default=default</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 返回 表名字 字段名 和字段类型</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&amp;lt;%s , %s , %s&amp;gt;"</span> %(self.__class__.__name__, self.name, self.column_type)</span><br><span class="line"><span class="comment"># 定义数据库中五个存储类型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StringField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None, primary_key=False, default=None, ddl=<span class="string">'varchar(100)'</span>)</span>:</span></span><br><span class="line">        super().__init__(name,ddl,primary_key,default)</span><br><span class="line"><span class="comment"># 布尔类型不可以作为主键</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BooleanField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None, default=None)</span>:</span></span><br><span class="line">        super().__init__(name,<span class="string">'Boolean'</span>,<span class="keyword">False</span>, default)</span><br><span class="line"><span class="comment"># 不知道这个column type是否可以自己定义 先自己定义看一下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IntegerField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None, primary_key=False, default=<span class="number">0</span>)</span>:</span></span><br><span class="line">        super().__init__(name, <span class="string">'int'</span>, primary_key, default)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FloatField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None, primary_key=False,default=<span class="number">0.0</span>)</span>:</span></span><br><span class="line">        super().__init__(name, <span class="string">'float'</span>, primary_key, default)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TextField</span><span class="params">(Field)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name=None, default=None)</span>:</span></span><br><span class="line">        super().__init__(name,<span class="string">'text'</span>,<span class="keyword">False</span>, default)</span><br><span class="line"><span class="comment"># class Model(dict,metaclass=ModelMetaclass):</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># -*-定义Model的元类</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 所有的元类都继承自type</span></span><br><span class="line"><span class="comment"># ModelMetaclass元类定义了所有Model基类(继承ModelMetaclass)的子类实现的操作</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># -*-ModelMetaclass的工作主要是为一个数据库表映射成一个封装的类做准备：</span></span><br><span class="line"><span class="comment"># ***读取具体子类(user)的映射信息</span></span><br><span class="line"><span class="comment"># 创造类的时候，排除对Model类的修改</span></span><br><span class="line"><span class="comment"># 在当前类中查找所有的类属性(attrs)，如果找到Field属性，就将其保存到__mappings__的dict中，同时从类属性中删除Field(防止实例属性遮住类的同名属性)</span></span><br><span class="line"><span class="comment"># 将数据库表名保存到__table__中</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 完成这些工作就可以在Model中定义各种数据库的操作方法</span></span><br><span class="line"><span class="comment"># metaclass是类的模板，所以必须从`type`类型派生：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModelMetaclass</span><span class="params">(type)</span>:</span></span><br><span class="line">    <span class="comment"># __new__控制__init__的执行，所以在其执行之前</span></span><br><span class="line">    <span class="comment"># cls:代表要__init__的类，此参数在实例化时由Python解释器自动提供(例如下文的User和Model)</span></span><br><span class="line">    <span class="comment"># bases：代表继承父类的集合</span></span><br><span class="line">    <span class="comment"># attrs：类的方法集合</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, name, bases, attrs)</span>:</span></span><br><span class="line">        <span class="comment"># 排除model 是因为要排除对model类的修改</span></span><br><span class="line">        <span class="keyword">if</span> name==<span class="string">'Model'</span>:</span><br><span class="line">            <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line">        <span class="comment"># 获取table名称 为啥获取table名称 至于在哪里我也是不明白握草</span></span><br><span class="line">        table_name=attrs.get(<span class="string">'__table__'</span>, <span class="keyword">None</span>) <span class="keyword">or</span> name</span><br><span class="line">        logging.info(<span class="string">'found table: %s (table: %s) '</span> %(name,table_name ))</span><br><span class="line">        <span class="comment"># 获取Field所有主键名和Field</span></span><br><span class="line">        mappings=dict()</span><br><span class="line">        fields=[]</span><br><span class="line">        primaryKey=<span class="keyword">None</span></span><br><span class="line">        <span class="comment"># 这个k是表示字段名</span></span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> attrs.items():</span><br><span class="line">            <span class="keyword">if</span> isinstance(v, Field):</span><br><span class="line">                logging.info(<span class="string">'Found mapping %s===&amp;gt;%s'</span> %(k, v))</span><br><span class="line">            <span class="comment"># 注意mapping的用法</span></span><br><span class="line">                mappings[k] = v</span><br><span class="line">                <span class="keyword">if</span> v.primary_key:</span><br><span class="line">                    logging.info(<span class="string">'fond primary key hahaha %s'</span>%k)</span><br><span class="line">                    <span class="comment"># 这里很有意思 当第一次主键存在primaryKey被赋值 后来如果再出现主键的话就会引发错误</span></span><br><span class="line">                    <span class="keyword">if</span> primaryKey:</span><br><span class="line">                        <span class="keyword">raise</span> RuntimeError(<span class="string">'Duplicated key for field'</span>)</span><br><span class="line">                    primaryKey=k</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fields.append(k)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> primaryKey:</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(<span class="string">'Primary key not found!'</span>)</span><br><span class="line">        <span class="comment"># w下面位字段从类属性中删除Field 属性</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> mappings.keys():</span><br><span class="line">            attrs.pop(k)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 保存除主键外的属性为''列表形式</span></span><br><span class="line">        <span class="comment"># 这一句的lambda表达式没懂</span></span><br><span class="line">        escaped_fields=list(map(<span class="keyword">lambda</span> f:<span class="string">'`%s`'</span> %f, fields))</span><br><span class="line">        <span class="comment"># 保存属性和列的映射关系</span></span><br><span class="line">        attrs[<span class="string">'__mappings__'</span>]=mappings</span><br><span class="line">        <span class="comment"># 保存表名</span></span><br><span class="line">        attrs[<span class="string">'__table__'</span>]=table_name</span><br><span class="line">        <span class="comment"># 保存主键名称</span></span><br><span class="line">        attrs[<span class="string">'__primary_key__'</span>]=primaryKey</span><br><span class="line">        <span class="comment"># 保存主键外的属性名</span></span><br><span class="line">        attrs[<span class="string">'__fields__'</span>]=fields</span><br><span class="line">        <span class="comment"># 构造默认的增删改查 语句</span></span><br><span class="line">        attrs[<span class="string">'__select__'</span>]=<span class="string">'select `%s`, %s from `%s` '</span>%(primaryKey,<span class="string">', '</span>.join(escaped_fields), table_name)</span><br><span class="line">        attrs[<span class="string">'__insert__'</span>] = <span class="string">'insert into  `%s` (%s, `%s`) values (%s) '</span> %(table_name, <span class="string">', '</span>.join(escaped_fields), primaryKey, create_args_string(len(escaped_fields)+<span class="number">1</span>))</span><br><span class="line">        attrs[<span class="string">'__update__'</span>]=<span class="string">'update `%s` set %s where `%s` = ?'</span> %(table_name, <span class="string">', '</span>.join(map(<span class="keyword">lambda</span> f:<span class="string">'`%s`=?'</span> % (mappings.get(f).name <span class="keyword">or</span> f), fields)), primaryKey)</span><br><span class="line">        attrs[<span class="string">'__delete__'</span>]=<span class="string">'delete `%s` where `%s`=?'</span> %(table_name, primaryKey)</span><br><span class="line">        <span class="keyword">return</span> type.__new__(cls, name, bases, attrs)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 定义ORM所有映射的基类：Model</span></span><br><span class="line"><span class="comment"># Model类的任意子类可以映射一个数据库表</span></span><br><span class="line"><span class="comment"># Model类可以看作是对所有数据库表操作的基本定义的映射</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 基于字典查询形式</span></span><br><span class="line"><span class="comment"># Model从dict继承，拥有字典的所有功能，同时实现特殊方法__getattr__和__setattr__，能够实现属性操作</span></span><br><span class="line"><span class="comment"># 实现数据库操作的所有方法，定义为class方法，所有继承自Model都具有数据库操作方法</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span><span class="params">(dict,metaclass=ModelMetaclass)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, **kw)</span>:</span></span><br><span class="line">        super(Model,self).__init__(**kw)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self[key]</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            <span class="keyword">raise</span> AttributeError(<span class="string">"'Model' object have no attribution: %s"</span>% key)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, key, value)</span>:</span></span><br><span class="line">        self[key] =value</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getValue</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="comment"># 这个是默认内置函数实现的</span></span><br><span class="line">        <span class="keyword">return</span> getattr(self, key, <span class="keyword">None</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getValueOrDefault</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        value=getattr(self, key , <span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">if</span> value <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            field = self.__mappings__[key]</span><br><span class="line">            <span class="keyword">if</span> field.default <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                value = field.default() <span class="keyword">if</span> callable(field.default) <span class="keyword">else</span> field.default</span><br><span class="line">                logging.info(<span class="string">'using default value for %s : %s '</span> % (key, str(value)))</span><br><span class="line">                setattr(self, key, value)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> value</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="comment"># 类方法有类变量cls传入，从而可以用cls做一些相关的处理。并且有子类继承时，调用该类方法时，传入的类变量cls是子类，而非父类。</span></span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_all</span><span class="params">(cls, where=None, args=None, **kw)</span>:</span></span><br><span class="line">        sql = [cls.__select__]</span><br><span class="line">        <span class="keyword">if</span> where:</span><br><span class="line">            sql.append(<span class="string">'where'</span>)</span><br><span class="line">            sql.append(where)</span><br><span class="line">        <span class="keyword">if</span> args <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            args = []</span><br><span class="line"> </span><br><span class="line">        orderBy = kw.get(<span class="string">'orderBy'</span>, <span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">if</span> orderBy:</span><br><span class="line">            sql.append(<span class="string">'order by'</span>)</span><br><span class="line">            sql.append(orderBy)</span><br><span class="line">        <span class="comment"># dict 提供get方法 指定放不存在时候返回后学的东西 比如a.get('Fuck',None)</span></span><br><span class="line">        limit = kw.get(<span class="string">'limit'</span>, <span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">if</span> limit <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            sql.append(<span class="string">'limit'</span>)</span><br><span class="line">            <span class="keyword">if</span> isinstance(limit, int):</span><br><span class="line">                sql.append(<span class="string">'?'</span>)</span><br><span class="line">                args.append(limit)</span><br><span class="line">            <span class="keyword">elif</span> isinstance(limit, tuple) <span class="keyword">and</span> len(limit) ==<span class="number">2</span>:</span><br><span class="line">                sql.append(<span class="string">'?,?'</span>)</span><br><span class="line">                args.extend(limit)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">'Invalid limit value : %s '</span>%str(limit))</span><br><span class="line"> </span><br><span class="line">        rs = <span class="keyword">yield</span> <span class="keyword">from</span> select(<span class="string">' '</span>.join(sql),args)</span><br><span class="line">        <span class="keyword">return</span> [cls(**r) <span class="keyword">for</span> r <span class="keyword">in</span> rs]</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findNumber</span><span class="params">(cls, selectField, where=None, args=None)</span>:</span></span><br><span class="line">        <span class="string">'''find number by select and where.'''</span></span><br><span class="line">        sql = [<span class="string">'select %s __num__ from `%s`'</span> %(selectField, cls.__table__)]</span><br><span class="line">        <span class="keyword">if</span> where:</span><br><span class="line">            sql.append(<span class="string">'where'</span>)</span><br><span class="line">            sql.append(where)</span><br><span class="line">        rs = <span class="keyword">yield</span> <span class="keyword">from</span> select(<span class="string">' '</span>.join(sql), args, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> len(rs) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        <span class="keyword">return</span> rs[<span class="number">0</span>][<span class="string">'__num__'</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 这个黑魔法我还在研究呢~</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">(cls, primarykey)</span>:</span></span><br><span class="line">        <span class="string">'''find object by primary key'''</span></span><br><span class="line">        rs = <span class="keyword">yield</span> <span class="keyword">from</span> select(<span class="string">'%s where `%s`=?'</span> %(cls.__select__, cls.__primary_key__), [primarykey], <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> len(rs) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        <span class="keyword">return</span> cls(**rs[<span class="number">0</span>])</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findAll</span><span class="params">(cls, **kw)</span>:</span></span><br><span class="line">        rs = []</span><br><span class="line">        <span class="keyword">if</span> len(kw) == <span class="number">0</span>:</span><br><span class="line">            rs = <span class="keyword">yield</span> <span class="keyword">from</span> select(cls.__select__, <span class="keyword">None</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            args=[]</span><br><span class="line">            values=[]</span><br><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> kw.items():</span><br><span class="line">                args.append(<span class="string">'%s=?'</span> % k )</span><br><span class="line">                values.append(v)</span><br><span class="line">            rs = <span class="keyword">yield</span> <span class="keyword">from</span> select(<span class="string">'%s where %s '</span> % (cls.__select__,  <span class="string">' and '</span>.join(args)), values)</span><br><span class="line">        <span class="keyword">return</span> rs</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></span><br><span class="line">        args = list(map(self.getValueOrDefault, self.__fields__))</span><br><span class="line">        print(<span class="string">'save:%s'</span> % args)</span><br><span class="line">        args.append(self.getValueOrDefault(self.__primary_key__))</span><br><span class="line">        rows = <span class="keyword">yield</span> <span class="keyword">from</span> execute(self.__insert__, args)</span><br><span class="line">        <span class="keyword">if</span> rows != <span class="number">1</span>:</span><br><span class="line">            print(self.__insert__)</span><br><span class="line">            logging.warning(<span class="string">'failed to insert record: affected rows: %s'</span> %rows)</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="comment"># 显示方言错误是什么鬼。。。</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self)</span>:</span></span><br><span class="line">        args = list(map(self.getValue, self.__fields__))</span><br><span class="line">        args.append(self.getValue(self.__primary_key__))</span><br><span class="line">        rows = <span class="keyword">yield</span> <span class="keyword">from</span> execute(self.__update__, args)</span><br><span class="line">        <span class="keyword">if</span> rows != <span class="number">1</span>:</span><br><span class="line">            logging.warning(<span class="string">'failed to update record: affected rows: %s'</span>%rows)</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self)</span>:</span></span><br><span class="line">        args = [self.getValue(self.__primary_key__)]</span><br><span class="line">        rows = <span class="keyword">yield</span> <span class="keyword">from</span> execute(self.__updata__, args)</span><br><span class="line">        <span class="keyword">if</span> rows != <span class="number">1</span>:</span><br><span class="line">            logging.warning(<span class="string">'failed to remove by primary key: affected rows: %s'</span> %rows)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(Model)</span>:</span></span><br><span class="line">        id = IntegerField(<span class="string">'id'</span>,primary_key=<span class="keyword">True</span>)</span><br><span class="line">        name = StringField(<span class="string">'username'</span>)</span><br><span class="line">        email = StringField(<span class="string">'email'</span>)</span><br><span class="line">        password = StringField(<span class="string">'password'</span>)</span><br><span class="line">    <span class="comment">#创建异步事件的句柄</span></span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#创建实例</span></span><br><span class="line"><span class="meta">    @asyncio.coroutine</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> create_pool(loop=loop,host=<span class="string">'localhost'</span>, port=<span class="number">3308</span>, user=<span class="string">'sly'</span>, password=<span class="string">'070801382'</span>, db=<span class="string">'test'</span>)</span><br><span class="line">        user = User(id=<span class="number">8</span>, name=<span class="string">'sly'</span>, email=<span class="string">'slysly759@gmail.com'</span>, password=<span class="string">'fuckblog'</span>)</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> user.save()</span><br><span class="line">        r = <span class="keyword">yield</span> <span class="keyword">from</span> User.find(<span class="string">'11'</span>)</span><br><span class="line">        print(r)</span><br><span class="line">        r = <span class="keyword">yield</span> <span class="keyword">from</span> User.findAll()</span><br><span class="line">        print(<span class="number">1</span>, r)</span><br><span class="line">        r = <span class="keyword">yield</span> <span class="keyword">from</span> User.findAll(id=<span class="string">'12'</span>)</span><br><span class="line">        print(<span class="number">2</span>, r)</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> destroy_pool()</span><br><span class="line"> </span><br><span class="line">    loop.run_until_complete(test())</span><br><span class="line">    loop.close()</span><br><span class="line">    <span class="keyword">if</span> loop.is_closed():</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure></p><hr><h2 id="知识点学习"><a href="#知识点学习" class="headerlink" title="知识点学习"></a>知识点学习</h2><h3 id="asyncio异步IO库"><a href="#asyncio异步IO库" class="headerlink" title="asyncio异步IO库"></a>asyncio异步IO库</h3><p>廖雪峰中的asyncio异步获取网页例子：</p><p>注意异步操作需要在<code>coroutine</code>中通过<code>yield from</code>完成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line"><span class="meta">@asyncio.coroutine</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wget</span><span class="params">(host)</span>:</span></span><br><span class="line">    print(<span class="string">'wget %s...'</span> % host)</span><br><span class="line">    connect = asyncio.open_connection(host, <span class="number">80</span>)</span><br><span class="line">    reader, writer = <span class="keyword">yield</span> <span class="keyword">from</span> connect</span><br><span class="line">    header = <span class="string">'GET / HTTP/1.0\r\nHost: %s\r\n\r\n'</span> % host</span><br><span class="line">    writer.write(header.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> writer.drain()</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        line = <span class="keyword">yield</span> <span class="keyword">from</span> reader.readline()</span><br><span class="line">        <span class="keyword">if</span> line == <span class="string">b'\r\n'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'%s header &gt; %s'</span> % (host, line.decode(<span class="string">'utf-8'</span>).rstrip()))</span><br><span class="line">    <span class="comment"># Ignore the body, close the socket</span></span><br><span class="line">    writer.close()</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">tasks = [wget(host) <span class="keyword">for</span> host <span class="keyword">in</span> [<span class="string">'www.sina.com.cn'</span>, <span class="string">'www.sohu.com'</span>, <span class="string">'www.163.com'</span>]]</span><br><span class="line">loop.run_until_complete(asyncio.wait(tasks))</span><br><span class="line">loop.close()</span><br></pre></td></tr></table></figure><h3 id="logging日志库"><a href="#logging日志库" class="headerlink" title="logging日志库"></a>logging日志库</h3><p>知乎上有个问题里拿来的demo:</p><p>问题是为什么pycharm的traceback还有ERROR等打印顺序会发生变化，加了sleep就不会变化了。</p><p>我猜测是pycharm有一些异步执行的步骤，具体也没有在StackOverflow上找到答案。<code>作为TODO吧</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">logging.basicConfig(level=logging.DEBUG)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'try'</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    r = <span class="number">10</span> / int(<span class="string">'a'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'result'</span>, r)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    logging.exception(e)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'exception'</span>, e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'no error'</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'finally.'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'END**************'</span>)</span><br></pre></td></tr></table></figure><p>logging的级别：</p><ul><li>DEBUG</li><li>INFO</li><li>WARNING</li><li>ERROR</li><li>CRITICAL</li><li>NOSET</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logger.debug(<span class="string">'debug message'</span>)</span><br><span class="line">logger.info(<span class="string">'info message'</span>)</span><br><span class="line">logger.warn(<span class="string">'warn message'</span>)</span><br><span class="line">logger.error(<span class="string">'error message'</span>)</span><br><span class="line">logger.critical(<span class="string">'critical message'</span>)</span><br></pre></td></tr></table></figure><h3 id="yield和yield-from"><a href="#yield和yield-from" class="headerlink" title="yield和yield from"></a>yield和yield from</h3><h4 id="三个概念："><a href="#三个概念：" class="headerlink" title="三个概念："></a>三个概念：</h4><ul><li>生成器<br>  一边循环一边计算的机制，称为生成器：generator</li><li>可迭代<br>  可迭代是指一种可以在容器中逐个提取元素的能力。<br>  必须具备<code>__iter__()</code></li><li>迭代器<br>  <code>__iter__()</code><br>  <code>__next__()</code></li></ul><p>yield写斐波那契</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fab_yield</span><span class="params">(max)</span>:</span></span><br><span class="line">    n, a, b = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n&lt;max:</span><br><span class="line">        <span class="keyword">yield</span> b</span><br><span class="line">        <span class="comment"># print b</span></span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line">f=fab_yield(<span class="number">100</span>)</span><br><span class="line">print(type(f))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><h4 id="yield-from"><a href="#yield-from" class="headerlink" title="yield from"></a>yield from</h4><blockquote><p>总之大意是原本的yield语句只能将CPU控制权还给直接调用者，当你想要将一个generator或者coroutine里带有yield语句的逻辑重构到另一个generator（原文是subgenerator）里的时候，会非常麻烦，因为外面的generator要负责为里面的generator做消息传递；所以某人有个想法是让python把消息传递封装起来，使其对程序猿透明，于是就有了yield from。</p></blockquote><p>假设A函数中有这样一个语句</p><blockquote><p>yield from B()</p></blockquote><p>B()返回的是一个可迭代（iterable）的对象b，那么A()会返回一个 generator——照我们的命名规范，名字叫a——那么：</p><ol><li>b迭代产生的每个值都直接传递给a的调用者。</li><li>所有通过<code>send</code>方法发送到a的值都被直接传递给b. 如果发送的值是<code>None</code>，则调用b的<code>__next__()</code>方法，否则调用b的<code>send</code>方法。如果对b的方法调用产生<code>StopIteration</code>异常，a会继续执行<code>yield from</code>后面的语句，而其他异常则会传播到a中，导致a在执行<code>yield from</code>的时候抛出异常。</li><li>如果有除<code>GeneratorExit</code>以外的异常被throw到a中的话，该异常会被直接throw到b中。如果b的<code>throw</code>方法抛出<code>StopIteration</code>， a会继续执行；其他异常则会导致a也抛出异常。</li><li>如果一个<code>GeneratorExit</code>异常被throw到a中，或者a的<code>close</code>方法被调用了，并且b也有<code>close</code>方法的话，b的<code>close</code>方法也会被调用。如果b的这个方法抛出了异常，则会导致a也抛出异常。 反之，如果b成功close掉了，a也会抛出异常，但是是特定的<code>GeneratorExit</code>异常。</li><li>a中<code>yield fro</code>m表达式的求值结果是b迭代结束时抛出的<code>StopIteration</code>异常的第一个参数。</li><li>b中的<code>return &lt;expr&gt;</code>语句实际上会抛出<code>StopIteration(&lt;expr&gt;)</code> 异常，所以b中return的值会成为a中<code>yield from</code>表达式的返回值。</li></ol><h4 id="关于协程Coroutine"><a href="#关于协程Coroutine" class="headerlink" title="关于协程Coroutine"></a>关于协程Coroutine</h4><ul><li>不是线程切换，而是由程序自身控制，因此，没有线程切换的开销</li><li>不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不加锁，只需要判断状态就好了，所以执行效率比多线程高很多。</li></ul><hr>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/7/"/>
      <url>/posts/7/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/6/"/>
      <url>/posts/6/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>蓄水池抽样证明以及例题</title>
      <link href="/posts/62400/"/>
      <url>/posts/62400/</url>
      <content type="html"><![CDATA[<p>蓄水池抽样在kmeans算法中有所应用，诸如Cloudera ML的分布式蓄水池抽样和加权分布式蓄水池抽样。</p><a id="more"></a><hr><h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h3><ol><li>先选取数据流中的前k个元素，保存在集合A中；</li><li>从第j（k + 1 &lt;= j &lt;= n）个元素开始，每次先以概率p = k/j选择是否让第j个元素留下。若j被选中，则从A中随机选择一个元素并用该元素j替换它；否则直接淘汰该元素；</li><li>重复步骤2直到结束，最后集合A中剩下的就是保证随机抽取的k个元素。</li></ol><hr><h3 id="两个leetcode例题"><a href="#两个leetcode例题" class="headerlink" title="两个leetcode例题"></a>两个leetcode例题</h3><p>转载自<a href="https://www.jianshu.com/p/63f6cf19923d" target="_blank" rel="noopener">这里</a></p><ul><li>Linked List Random Node</li></ul><p>Given a singly linked list, return a random node’s value from the linked list. Each node must have the same probability of being chosen.</p><p>Follow up:<br>What if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?</p><p>Example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Init a singly linked list [1,2,3].</span></span><br><span class="line">ListNode head = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">head.next = <span class="keyword">new</span> ListNode(<span class="number">2</span>);</span><br><span class="line">head.next.next = <span class="keyword">new</span> ListNode(<span class="number">3</span>);</span><br><span class="line">Solution solution = <span class="keyword">new</span> Solution(head);</span><br><span class="line"></span><br><span class="line"><span class="comment">// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.</span></span><br><span class="line">solution.getRandom();</span><br></pre></td></tr></table></figure><p>Solution:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Random r;</span><br><span class="line">    ListNode head;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Solution</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">this</span>.head = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRandom</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        ListNode nodeVal = head;</span><br><span class="line">        ListNode curr = head;</span><br><span class="line">        <span class="keyword">while</span> (curr != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (r.nextInt(count++) == <span class="number">0</span>) &#123;</span><br><span class="line">                nodeVal = curr;</span><br><span class="line">            &#125;</span><br><span class="line">            curr = curr.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nodeVal.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Random Pick Index</li></ul><p>Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.</p><p>Note:<br>The array size can be very large. Solution that uses too much extra space will not pass the judge.</p><p>Example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</span><br><span class="line">Solution solution = <span class="keyword">new</span> Solution(nums);</span><br><span class="line"></span><br><span class="line"><span class="comment">// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.</span></span><br><span class="line">solution.pick(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// pick(1) should return 0. Since in the array only nums[0] is equal to 1.</span></span><br><span class="line">solution.pick(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>Solution:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] nums;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Solution</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nums = nums;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pick</span><span class="params">(<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] == target) &#123;</span><br><span class="line">                <span class="keyword">if</span> (random.nextInt(count++) == <span class="number">0</span>) &#123;</span><br><span class="line">                    index = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="kmeans中的蓄水池抽样"><a href="#kmeans中的蓄水池抽样" class="headerlink" title="kmeans中的蓄水池抽样"></a>kmeans中的蓄水池抽样</h3><p>转载自<a href="http://blog.jobbole.com/42550/" target="_blank" rel="noopener">这里</a></p><p><strong>Cloudera ML</strong>： 基于hadoop的ML</p><p>分布式蓄水池抽样是Greg讨论的第一种算法。可以从前面的讨论中发现，基本的蓄水池抽样要求对数据流进行顺序读取。要进行容量为k的分布式蓄水池抽样（前面讨论的容量都为1）我们使用mapreduce 模拟sql中的ORDER BY RAND (随机抽取)。对于集合中的每一个元素，都产生一个0-1的随机数，之后选取随机值最大的前k个元素。这种方法在对大数据集进行分层抽样的时候非常管用。这里每一个分层都都是一些分类变量如性别，年龄，地理信息等的组合。注意如果输入的数据集分布极端的不均匀，那么抽样可能不能覆盖到所有的层级。为了对每种分类的组合进行抽样，cloudera ML 提供了sample命令，它可以操作纯文本或者hive中的表。</p><p>第二个算法更加好玩：加权分布式蓄水池抽样。这里集合中的数据是有权重的，算法希望数据被抽样选中的概率和该数据的权重成比例。实际上这个问题之前并不一定有解，直到2005年pavlos efraimidis和paul spirakis的论文《weighted random sampling with a reservoir》。他们的解法既简单又优雅，基本思想和上面的分布式蓄水池抽样一致：<code>对于每个数据计算一个0-1的值R，并求r的n次方根作为该数据的新的R值。</code>这里的n就是该数据的权重。最终算法返回前k个R值最高的数据然后返回。根据计算规则，权重越大的数据计算所得的R值越接近1，所以越有可能被返回。</p><p>在cloudera ML项目中，为了更好地使用k-means++算法（K-均值++算法），我们会首先使用加权的蓄水池抽样算法对输入数据进行抽样。ksketch命令会为k-means++算法进行初始化–在输入数据上进行迭代操作，选择样本抽样。每次选取过程，数据被选入样本的概率和该数据与当前样本中最短距离节点的距离成比例。通过使用加权的蓄水池抽样算法，只需扫描数据一遍就能决定样本组成（一般方法需要首先遍历一次以计算出聚类的总代价，之后第二次遍历根据第一次的计算结果进行样本选择）。</p>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于二叉树的算法题</title>
      <link href="/posts/17951/"/>
      <url>/posts/17951/</url>
      <content type="html"><![CDATA[<p>关于二叉树的算法题，用java写，包括剑指offer和网上各种。</p><a id="more"></a><hr><h3 id="二叉树的下一个节点"><a href="#二叉树的下一个节点" class="headerlink" title="二叉树的下一个节点"></a>二叉树的下一个节点</h3><p>给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeLinkNode &#123;</span></span><br><span class="line"><span class="comment">    int val;</span></span><br><span class="line"><span class="comment">    TreeLinkNode left = null;</span></span><br><span class="line"><span class="comment">    TreeLinkNode right = null;</span></span><br><span class="line"><span class="comment">    TreeLinkNode next = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    TreeLinkNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeLinkNode <span class="title">GetNext</span><span class="params">(TreeLinkNode pNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        TreeLinkNode curNode = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 右孩子存在</span></span><br><span class="line">        <span class="keyword">if</span>(pNode.right!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            curNode = pNode.right;</span><br><span class="line">            <span class="keyword">while</span>(curNode.left!=<span class="keyword">null</span>)curNode=curNode.left;</span><br><span class="line">            <span class="keyword">return</span> curNode;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//右孩子不存在 p是左孩子 找父节点</span></span><br><span class="line">        <span class="keyword">if</span>(pNode.next==<span class="keyword">null</span>)<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(pNode==pNode.next.left)&#123;</span><br><span class="line">            <span class="keyword">return</span> pNode.next;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//右孩子不存在 p是右孩子 追溯父节点 找是左孩子的那个的父节点</span></span><br><span class="line">        curNode=pNode.next;</span><br><span class="line">        <span class="keyword">while</span>(curNode.next!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(curNode==curNode.next.left)</span><br><span class="line">                <span class="keyword">return</span> curNode.next;</span><br><span class="line">        curNode=curNode.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对称的二叉树"><a href="#对称的二叉树" class="headerlink" title="对称的二叉树"></a>对称的二叉树</h3><p>请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode pRoot)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isSymmetrical(pRoot, pRoot);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode pRoot1,TreeNode pRoot2)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pRoot1==<span class="keyword">null</span>&amp;&amp;pRoot2==<span class="keyword">null</span>)<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(pRoot1==<span class="keyword">null</span>||pRoot2==<span class="keyword">null</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(pRoot1.val!=pRoot2.val)<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> isSymmetrical(pRoot1.left,pRoot2.right)&amp;&amp;isSymmetrical(pRoot2.left,pRoot1.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="按之字形顺序打印二叉树"><a href="#按之字形顺序打印二叉树" class="headerlink" title="按之字形顺序打印二叉树"></a>按之字形顺序打印二叉树</h3><p>请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。</p><p><strong>注意</strong>： 偶数行reverse方法效率太低了。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; Print(TreeNode pRoot) &#123;</span><br><span class="line"><span class="keyword">int</span> layer =<span class="number">1</span>;</span><br><span class="line">        Stack&lt;TreeNode&gt; s1 = <span class="keyword">new</span> Stack&lt;TreeNode&gt;(); <span class="comment">//存奇数层</span></span><br><span class="line">        s1.push(pRoot);</span><br><span class="line">        Stack&lt;TreeNode&gt; s2 = <span class="keyword">new</span> Stack&lt;TreeNode&gt;();<span class="comment">//存偶数层</span></span><br><span class="line">        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(!s1.empty()||!s2.empty())&#123;</span><br><span class="line">            <span class="keyword">if</span>(layer%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                ArrayList&lt;Integer&gt; temp = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">                <span class="keyword">while</span>(!s1.empty())&#123;</span><br><span class="line">                    TreeNode node = s1.pop();</span><br><span class="line">                    <span class="keyword">if</span>(node!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        temp.add(node.val);</span><br><span class="line">                        System.out.print(node.val+<span class="string">' '</span>);</span><br><span class="line">                        s2.push(node.left);</span><br><span class="line">                        s2.push(node.right);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!temp.isEmpty())&#123;</span><br><span class="line">                    list.add(temp);</span><br><span class="line">                    layer++;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ArrayList&lt;Integer&gt; temp = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">                <span class="keyword">while</span>(!s2.empty())&#123;</span><br><span class="line">                    TreeNode node = s2.pop();</span><br><span class="line">                    <span class="keyword">if</span>(node!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        temp.add(node.val);</span><br><span class="line">                        System.out.print(node.val+<span class="string">' '</span>);</span><br><span class="line">                        s1.push(node.right);</span><br><span class="line">                        s1.push(node.left);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!temp.isEmpty())&#123;</span><br><span class="line">                    list.add(temp);</span><br><span class="line">                    layer++;</span><br><span class="line">                    System.out.println();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="把二叉树打印成多行"><a href="#把二叉树打印成多行" class="headerlink" title="把二叉树打印成多行"></a>把二叉树打印成多行</h3><p>从上到下按层打印二叉树，同一层结点从左至右输出。每一层输出一行。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; Print(TreeNode pRoot) &#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(pRoot==<span class="keyword">null</span>)<span class="keyword">return</span> list;</span><br><span class="line">        Queue&lt;TreeNode&gt; layer = <span class="keyword">new</span> LinkedList&lt;TreeNode&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; temp = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        layer.add(pRoot);</span><br><span class="line">        <span class="keyword">int</span> start=<span class="number">0</span>,end=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!layer.isEmpty())&#123;</span><br><span class="line">            TreeNode cur = layer.remove();</span><br><span class="line">            temp.add(cur.val);</span><br><span class="line">            start++;</span><br><span class="line">            <span class="keyword">if</span>(cur.left!=<span class="keyword">null</span>)layer.add(cur.left);</span><br><span class="line">            <span class="keyword">if</span>(cur.right!=<span class="keyword">null</span>)layer.add(cur.right);</span><br><span class="line">            <span class="keyword">if</span>(start==end)&#123;</span><br><span class="line">                end=layer.size();</span><br><span class="line">                start=<span class="number">0</span>;</span><br><span class="line">                list.add(temp);</span><br><span class="line">                temp=<span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="序列化二叉树"><a href="#序列化二叉树" class="headerlink" title="序列化二叉树"></a>序列化二叉树</h3><p>请实现两个函数，分别用来序列化和反序列化二叉树</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">Serialize</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="keyword">null</span>)<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        Serialize2(root,res);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Serialize2</span><span class="params">(TreeNode root,StringBuilder res)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="keyword">null</span>)&#123;</span><br><span class="line">            res.append(<span class="string">"#,"</span>);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(root.val);</span><br><span class="line">        res.append(<span class="string">','</span>);</span><br><span class="line">        Serialize2(root.left,res);</span><br><span class="line">        Serialize2(root.right,res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> index=-<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">TreeNode <span class="title">Deserialize</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(str.length()==<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        String[] strs = str.split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">return</span> Deserialize2(strs);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">TreeNode <span class="title">Deserialize2</span><span class="params">(String[] strs)</span></span>&#123;</span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">if</span>(!strs[index].equals(<span class="string">"#"</span>))&#123;</span><br><span class="line">            TreeNode root = <span class="keyword">new</span> TreeNode(<span class="number">0</span>);</span><br><span class="line">            root.val=Integer.parseInt(strs[index]);</span><br><span class="line">            root.left=Deserialize2(strs);</span><br><span class="line">            root.right=Deserialize2(strs);</span><br><span class="line">            <span class="keyword">return</span> root;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二叉搜索树的第k个结点"><a href="#二叉搜索树的第k个结点" class="headerlink" title="二叉搜索树的第k个结点"></a>二叉搜索树的第k个结点</h3><p>给定一颗二叉搜索树，请找出其中的第k大的结点。例如， 5 / \ 3 7 /\ /\ 2 4 6 8 中，按结点数值大小顺序第三个结点的值为4。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="function">TreeNode <span class="title">KthNode</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root!=<span class="keyword">null</span>&amp;&amp;k&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">            TreeNode node = KthNode(root.left,k);</span><br><span class="line">            <span class="keyword">if</span>(node!=<span class="keyword">null</span>)<span class="keyword">return</span> node;</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span>(index==k)<span class="keyword">return</span> root;</span><br><span class="line">            node= KthNode(root.right,k);</span><br><span class="line">            <span class="keyword">if</span>(node!=<span class="keyword">null</span>)<span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/5/"/>
      <url>/posts/5/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>针对Titanic问题的各种分类器stacking和XGBoost解法</title>
      <link href="/posts/32063/"/>
      <url>/posts/32063/</url>
      <content type="html"><![CDATA[<p>在典型feature engineering的情况下，使用xgboost和堆叠（仍然有一层xgboost），达到的Public Score都是0.79，相对比较优秀。另有遗传算法，不知道参数如何获得，score 0.88。</p><a id="more"></a><hr><p>使用jupyter notebook，Python3.5，WIN10下Pycharm搭建环境。</p><hr><h2 id="feature-engineering"><a href="#feature-engineering" class="headerlink" title="feature engineering"></a>feature engineering</h2><p>主要包括数据读入，特征选择，数据清洗，特征处理。</p><h3 id="reading-using-Pandas"><a href="#reading-using-Pandas" class="headerlink" title="reading using Pandas"></a>reading using Pandas</h3><p>pandas读入的是DataFrame结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">train_df = pd.read_csv(&apos;data\\train.csv&apos;) # path from windows</span><br><span class="line">test_df = pd.read_csv(&apos;data\\test.csv&apos;)</span><br><span class="line">combine = [train_df, test_df] # list</span><br></pre></td></tr></table></figure><p>可以直接对其操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">train_df.head()</span><br><span class="line">train_df.tail()</span><br><span class="line">train_df.info()</span><br><span class="line">train_df.describe()</span><br><span class="line">train_df.describe(include=[&apos;O&apos;]) # object</span><br></pre></td></tr></table></figure></p><h3 id="feature-select"><a href="#feature-select" class="headerlink" title="feature select"></a>feature select</h3><p>使用matplotlib和seaborn进行visualized analyze，包括：</p>]]></content>
      
      <categories>
          
          <category> Kaggle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MachineLearning </tag>
            
            <tag> XGBoost </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python爬虫总结（附拉勾网多进程代理池爬虫）</title>
      <link href="/posts/28976/"/>
      <url>/posts/28976/</url>
      <content type="html"><![CDATA[<p>一直秉承增量学习的策略，写了一些爬虫，还没有到需要scrapy的地步，爬取拉勾网遇到了瓶颈，因为反爬策略比较强，在此总结。</p><a id="more"></a><hr><h3 id="写过的东西"><a href="#写过的东西" class="headerlink" title="写过的东西"></a>写过的东西</h3><p>最近写的都放在了gayhub上：</p><div class="github-widget" data-repo="cloisonne/Show-me-the-code_Python"></div><p>包括有：<code>获取代理池</code>、<code>爬取bing图片</code>等等。</p><h3 id="拉勾网爬虫"><a href="#拉勾网爬虫" class="headerlink" title="拉勾网爬虫"></a>拉勾网爬虫</h3><p>分为以下步骤：</p><ul><li>获取所有板块url，存入mongoDB</li><li>在所需的url中，爬取所有的工作链接url，存入mongoDB</li><li>断点续传，多进程爬取所有储存的url中的信息，存入mongoDB</li><li>数据分析（待完成）</li></ul><p>其中</p><h4 id="断点续传的实现方式："><a href="#断点续传的实现方式：" class="headerlink" title="断点续传的实现方式："></a>断点续传的实现方式：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db_url = [i[<span class="string">'url'</span>] <span class="keyword">for</span> i <span class="keyword">in</span> url_list.find()]</span><br><span class="line">recent_url = [j[<span class="string">'url'</span>] <span class="keyword">for</span> j <span class="keyword">in</span> job_info.find()]</span><br><span class="line">x = set(db_url)</span><br><span class="line">y = set(recent_url)</span><br><span class="line">rest_of_urls = x-y</span><br></pre></td></tr></table></figure><h4 id="多进程使用Pool进程池："><a href="#多进程使用Pool进程池：" class="headerlink" title="多进程使用Pool进程池："></a>多进程使用Pool进程池：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cookies = login_lagou()</span><br><span class="line">pool = Pool(processes=<span class="number">4</span>)</span><br><span class="line">pool.apply_async(get_all_job_info(rest_of_urls,cookies))</span><br><span class="line">print(len(rest_of_urls))</span><br><span class="line"><span class="comment"># pool.apply_async(get_all_links_from(channel,cookies))</span></span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br></pre></td></tr></table></figure><h4 id="代理测试使用telnet方法："><a href="#代理测试使用telnet方法：" class="headerlink" title="代理测试使用telnet方法："></a>代理测试使用telnet方法：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_link</span><span class="params">(ip,_port)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        telnetlib.Telnet(ip, port=_port, timeout=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'connect failed'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'success'</span>)</span><br></pre></td></tr></table></figure><h4 id="数据库计数器实时监测："><a href="#数据库计数器实时监测：" class="headerlink" title="数据库计数器实时监测："></a>数据库计数器实时监测：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(job_info.find().count())</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="高级爬虫技术总结"><a href="#高级爬虫技术总结" class="headerlink" title="高级爬虫技术总结"></a>高级爬虫技术总结</h3><p><strong>高端反爬技巧</strong>：</p><ul><li>校验 User-Agent（没用）</li><li>图片假链（人点不到，爬虫必中）</li><li>阶梯访问量控制</li></ul><blockquote><p>基于访问数量，人类的访问一般集中在短时间内大部分网页，爬虫是线性增长，可设置短期策略和长期策略识别非人类。</p></blockquote><p><strong>常见的反反爬技巧</strong>：</p><ul><li>User-Agent池</li><li>Referer保持</li><li>代理池</li><li>图像识别验证码</li><li>登陆状态cookies保持</li><li>多账号反爬</li><li>分布式爬虫</li><li>selenium</li></ul><hr><h3 id="未来工作"><a href="#未来工作" class="headerlink" title="未来工作"></a>未来工作</h3><p>重心主要在数据分析和机器学习上，爬虫如果再有接触的话，应当写一个自己的fetcher类，糅合代理、多线程、异步IO、断点续传等功能。</p><p>参考<a href="http://outofmemory.cn/code-snippet/1653/python-pachong-zhua-wangye-summary" target="_blank" rel="noopener">python爬虫抓网页的总结</a></p>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/3/"/>
      <url>/posts/3/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>python爬虫第二课-BeautifulSoup</title>
      <link href="/posts/44202/"/>
      <url>/posts/44202/</url>
      <content type="html"><![CDATA[<p>主要包括对Beautiful Soup的学习和理解，及一个提取大学排名的实例。</p><a id="more"></a><hr><h2 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h2><h3 id="BeautifulSoup的对象"><a href="#BeautifulSoup的对象" class="headerlink" title="BeautifulSoup的对象"></a>BeautifulSoup的对象</h3><p>Tag</p><pre><code>soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;)tag = soup.btype(tag)# &lt;class &apos;bs4.element.Tag&apos;&gt;</code></pre><p>Name</p><pre><code>tag.name# u&apos;b&apos;</code></pre><p>Attributes</p><pre><code>tag[&apos;class&apos;]tag.attrs</code></pre><p>NavigableString</p><pre><code>tag.string</code></pre><p>prettify()方法</p><pre><code>soup.prettify()soup.a.prettify()</code></pre><h3 id="BS的遍历"><a href="#BS的遍历" class="headerlink" title="BS的遍历"></a>BS的遍历</h3><p>标签树的下行遍历</p><ul><li>.contents 子节点的列表，将<tag>所有儿子节点存入列表 </tag></li><li>.children子节点的迭代类型，与.contents类似，用于循环遍历儿子节点</li><li>.descendants子孙节点的迭代类型，包含所有子孙节点，用于循环遍历</li></ul><p>标签树的上行遍历</p><ul><li>.parent 节点的父亲标签 </li><li>.parents 节点先辈标签的迭代类型，用于循环遍历先辈节点</li></ul><p>标签树的平行遍历</p><ul><li>.next_sibling 返回按照HTML文本顺序的下一个平行节点标签</li><li>.previous_sibling 返回按照HTML文本顺序的上一个平行节点标签 </li><li>.next_siblings 迭代类型，返回按照HTML文本顺序的后续所有平行节点标签</li><li>.previous_siblings 迭代类型，返回按照HTML文本顺序的前续所有平行节点标签</li></ul><hr><h2 id="信息标记方式和提取"><a href="#信息标记方式和提取" class="headerlink" title="信息标记方式和提取"></a>信息标记方式和提取</h2><h3 id="三种信息标记方式"><a href="#三种信息标记方式" class="headerlink" title="三种信息标记方式"></a>三种信息标记方式</h3><ol><li><p>XML eXtensible Markup Lauguage</p><pre><code>&lt;img src=“china.jpg” size=“10”&gt; … &lt;/img&gt;</code></pre></li><li><p>JSON JavaScript Object Notation</p><p> 有类型的键值对key:value</p></li><li><p>YAML YAML Ain’t Markup Language</p><p> 无类型键值对key:value</p></li></ol><h3 id="HTML提取方式"><a href="#HTML提取方式" class="headerlink" title="HTML提取方式"></a>HTML提取方式</h3><p><strong>例：</strong></p><pre><code>from bs4 import BeautifulSoupsoup = BeautifulSoup(demo,&quot;lxml&quot;)for link in soup.find_all(&apos;a&apos;):    print(link.get(&apos;href&apos;))</code></pre><p><strong>find_all</strong>(name, attrs, recursive, string, **kwargs)</p><ul><li>name : 对标签名称的检索字符串</li><li>attrs: 对标签属性值的检索字符串，可标注属性检索</li><li>recursive: 是否对子孙全部检索，默认True</li><li>string: &lt;&gt;…&lt;/&gt;中字符串区域的检索字符串</li></ul><p><strong>扩展方法：</strong></p><ul><li>&lt;&gt;.find() 搜索且只返回一个结果，同.find_all()参数 </li><li>&lt;&gt;.find_parents() 在先辈节点中搜索，返回列表类型，同.find_all()参数 </li><li>&lt;&gt;.find_parent() 在先辈节点中返回一个结果，同.find()参数 </li><li>&lt;&gt;.find_next_siblings() 在后续平行节点中搜索，返回列表类型，同.find_all()参数 </li><li>&lt;&gt;.find_next_sibling() 在后续平行节点中返回一个结果，同.find()参数 </li><li>&lt;&gt;.find_previous_siblings() 在前序平行节点中搜索，返回列表类型，同.find_all()参数 </li><li>&lt;&gt;.find_previous_sibling() 在前序平行节点中返回一个结果，同.find()参数</li></ul><hr><h2 id="提取大学排名的例子"><a href="#提取大学排名的例子" class="headerlink" title="提取大学排名的例子"></a>提取大学排名的例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url,timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fillUnvList</span><span class="params">(ulist,html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'lxml'</span>)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> soup.find(<span class="string">'tbody'</span>).children:</span><br><span class="line">        <span class="keyword">if</span> isinstance(tr,bs4.element.Tag):</span><br><span class="line">            tds = tr(<span class="string">'td'</span>) <span class="comment">#tds = tr.find_all('td')</span></span><br><span class="line">            ulist.append([tds[<span class="number">0</span>].string,tds[<span class="number">1</span>].string,tds[<span class="number">3</span>].string])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printUnvList</span><span class="params">(ulist,num)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;:^10&#125;\t&#123;:^6&#125;\t&#123;:^10&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">'排名'</span>,<span class="string">'学校'</span>,<span class="string">'总分'</span>,chr(<span class="number">12288</span>))) <span class="comment"># 中文对齐  pycharm失败</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        u = ulist[i]</span><br><span class="line">        print(tplt.format(u[<span class="number">0</span>],u[<span class="number">1</span>],u[<span class="number">2</span>],chr(<span class="number">12288</span>)))</span><br><span class="line">    <span class="comment">#print('Suc' + str(num))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    uinfo = []</span><br><span class="line">    url = <span class="string">'http://www.zuihaodaxue.cn/zuihaodaxuepaiming2017.html'</span></span><br><span class="line">    html = getHTMLText(url)</span><br><span class="line">    fillUnvList(uinfo,html)</span><br><span class="line">    printUnvList(uinfo,<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/2/"/>
      <url>/posts/2/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>一个简单的makefile</title>
      <link href="/posts/30483/"/>
      <url>/posts/30483/</url>
      <content type="html"><![CDATA[<p>学习了一下makefile的写法，写了一个比较简单的makefile。</p><a id="more"></a><hr><p>学习参考<a href="http://www.cnblogs.com/OpenShiFt/p/4313351.html/" target="_blank" rel="noopener">http://www.cnblogs.com/OpenShiFt/p/4313351.html/</a></p><p><code>makefile</code></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">CC = gcc</span><br><span class="line">CFLAGS +=</span><br><span class="line">LDFLAGS +=</span><br><span class="line">EXEC = main</span><br><span class="line">OBJS = main.c function.c</span><br><span class="line"></span><br><span class="line"><span class="section">all: <span class="variable">$(EXEC)</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: all</span></span><br><span class="line"></span><br><span class="line"><span class="section">main: <span class="variable">$(OBJS)</span></span></span><br><span class="line"><span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> <span class="variable">$(LDFLAGS)</span> <span class="variable">$^</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">-rm -f <span class="variable">$(EXEC)</span> *.elf *.gdb *.o *.a</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: clean</span></span><br></pre></td></tr></table></figure><p><code>function.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[MAX] = &#123;<span class="number">2</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;MAX;i++)</span><br><span class="line">n+=<span class="built_in">array</span>[i];</span><br><span class="line"><span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> max;</span><br><span class="line"></span><br><span class="line">max=<span class="built_in">array</span>[i];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;MAX;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">array</span>[i] &gt; max)</span><br><span class="line">max = <span class="built_in">array</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>include.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> len 5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"array[%d] : %d\n"</span>,i,<span class="built_in">array</span>[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>main.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"include.h"</span></span></span><br><span class="line"><span class="comment">//#include "function.c"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="built_in">array</span>[];</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum_m,max_m;</span><br><span class="line">sum_m = sum();</span><br><span class="line">max_m = max();</span><br><span class="line"><span class="comment">//int len = sizeof(array);</span></span><br><span class="line">print(<span class="built_in">array</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"sum: %d , max: %d\n"</span>,sum_m,max_m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Makefile </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于git命令和博客迁移同步方案</title>
      <link href="/posts/54406/"/>
      <url>/posts/54406/</url>
      <content type="html"><![CDATA[<p>Hexo的blog使用自带的deploy插件上传时只会上传网页内容，导致在更换设备时十分麻烦，可以新建repo选择性的备份source或config等。</p><a id="more"></a><hr><p><a href="/2017/01/16/about-git/#设备间同步和迁移方案">我是直接看同步方案的传送门</a></p><h2 id="git常用命令总结"><a href="#git常用命令总结" class="headerlink" title="git常用命令总结"></a>git常用命令总结</h2><p>转载自<a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" title="阮一峰的网络日志" target="_blank" rel="noopener">常用 Git 命令清单</a></p><h3 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure><hr><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">$ git config [--global] user.name <span class="string">"[name]"</span></span><br><span class="line">$ git config [--global] user.email <span class="string">"[email address]"</span></span><br></pre></td></tr></table></figure><hr><h3 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">$ git add [dir]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="comment"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">$ git add -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><hr><h3 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><hr><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">$ git branch --<span class="built_in">set</span>-upstream [branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><hr><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">$ git tag [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">$ git show [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag</span></span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><hr><h3 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">$ git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --pretty=format:%s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件</span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --grep feature</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">$ git <span class="built_in">log</span> --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">$ git <span class="built_in">log</span> -p [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">$ git shortlog -sn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">$ git blame [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">$ git diff HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">$ git diff --shortstat <span class="string">"@&#123;0 day ago&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">$ git show [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><hr><h3 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><hr><h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">$ git reset [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">$ git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">$ git reset [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">$ git revert [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line">$ git stash</span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><hr><h2 id="设备间同步和迁移方案"><a href="#设备间同步和迁移方案" class="headerlink" title="设备间同步和迁移方案"></a>设备间同步和迁移方案</h2><blockquote><p>　如果不需要修改主题，只是写博客的话，那么需要备份的无非就是<code>source</code>和<code>config</code></p></blockquote><p>方法很简单，在github上新建一个repo备份source即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">source</span></span><br><span class="line">git init</span><br><span class="line">git remote add backup git@github.com:cloisonne/Markdown_Backup.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"information"</span></span><br><span class="line">git pull backup master</span><br><span class="line">git push -u backup master --force</span><br></pre></td></tr></table></figure><p>更换电脑设备时首先pull下source，在写好新的文章后deploy后记得push一下source即可。<br>git作为优秀的版本控制工具，命令实在太多太杂，还是需要长期的使用才能掌握。</p>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/4/"/>
      <url>/posts/4/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>利用socket实现路由表和二层帧转发</title>
      <link href="/posts/33500/"/>
      <url>/posts/33500/</url>
      <content type="html"><![CDATA[<p>最近研究LInux下的socket编程，这里做一个基础总结和对两份代码的分析。一个是路由表转发，一个是二层帧转发。</p><a id="more"></a><hr><p><a href="/posts/33500/#路由表MAC转发代码分析">太长不看，直接看代码的传送门</a></p><h3 id="一些基础知识"><a href="#一些基础知识" class="headerlink" title="一些基础知识"></a>一些基础知识</h3><p><img src="http://o7myibfc7.bkt.clouddn.com/0_1301456076yzy7.gif.jpeg?imageView2/2/h/400/" alt="封装过程"></p><p>常用的头结构，这里没包括ICMP头。</p><p><strong>MAC头结构</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*位于/usr/include/net/ethernet.h</span></span><br><span class="line"><span class="comment">数据帧定义，头14个字节，尾4个字节*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">MAC_FRAME_HEADER</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">char</span> m_cDstMacAddress[<span class="number">6</span>];    <span class="comment">//目的mac地址</span></span><br><span class="line"> <span class="keyword">char</span> m_cSrcMacAddress[<span class="number">6</span>];    <span class="comment">//源mac地址</span></span><br><span class="line"> <span class="keyword">short</span> m_cType;       　　　　　<span class="comment">//上一层协议类型，如0x0800代表上一层是IP协议，0x0806为arp</span></span><br><span class="line">&#125;__attribute__((packed))MAC_FRAME_HEADER,*PMAC_FRAME_HEADER;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">MAC_FRAME_TAIL</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> m_sCheckSum;    <span class="comment">//数据帧尾校验和</span></span><br><span class="line">&#125;__attribute__((packed))MAC_FRAME_TAIL, *PMAC_FRAME_TAIL;</span><br></pre></td></tr></table></figure><p><strong>IP头结构</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义 /netinet/ip.h</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">IP_HEADER</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">char</span> m_cVersionAndHeaderLen;     　　<span class="comment">//版本信息(前4位)，头长度(后4位)</span></span><br><span class="line"> <span class="keyword">char</span> m_cTypeOfService;      　　　　　 <span class="comment">// 服务类型8位</span></span><br><span class="line"> <span class="keyword">short</span> m_sTotalLenOfPacket;    　　　　<span class="comment">//数据包长度</span></span><br><span class="line"> <span class="keyword">short</span> m_sPacketID;      　　　　　　　 <span class="comment">//数据包标识</span></span><br><span class="line"> <span class="keyword">short</span> m_sSliceinfo;      　　　　　　　  <span class="comment">//分片使用</span></span><br><span class="line"> <span class="keyword">char</span> m_cTTL;        　　　　　　　　　　<span class="comment">//存活时间</span></span><br><span class="line"> <span class="keyword">char</span> m_cTypeOfProtocol;    　　　　　 <span class="comment">//协议类型</span></span><br><span class="line"> <span class="keyword">short</span> m_sCheckSum;      　　　　　　 <span class="comment">//校验和</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> m_uiSourIp;     　　　　　<span class="comment">//源ip</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> m_uiDestIp;     　　　　　<span class="comment">//目的ip</span></span><br><span class="line">&#125; __attribute__((packed))IP_HEADER, *PIP_HEADER ;</span><br></pre></td></tr></table></figure></p><p><img src="http://o7myibfc7.bkt.clouddn.com/IPheader.jpg" alt="IP头结构"></p><p><strong>tcp头结构</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">TCP_HEADER</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">short</span> m_sSourPort;        　　　　　　<span class="comment">// 源端口号16bit</span></span><br><span class="line"> <span class="keyword">short</span> m_sDestPort;       　　　　　　 <span class="comment">// 目的端口号16bit</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> m_uiSequNum;       　　<span class="comment">// 序列号32bit</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> m_uiAcknowledgeNum;  <span class="comment">// 确认号32bit</span></span><br><span class="line"> <span class="keyword">short</span> m_sHeaderLenAndFlag;      　　<span class="comment">// 前4位：TCP头长度；中6位：保留；后6位：标志位</span></span><br><span class="line"> <span class="keyword">short</span> m_sWindowSize;       　　　　　<span class="comment">// 窗口大小16bit</span></span><br><span class="line"> <span class="keyword">short</span> m_sCheckSum;        　　　　　 <span class="comment">// 检验和16bit</span></span><br><span class="line"> <span class="keyword">short</span> m_surgentPointer;      　　　　 <span class="comment">// 紧急数据偏移量16bit</span></span><br><span class="line">&#125;__attribute__((packed))TCP_HEADER, *PTCP_HEADER;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">TCP_OPTIONS</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">char</span> m_ckind;</span><br><span class="line"> <span class="keyword">char</span> m_cLength;</span><br><span class="line"> <span class="keyword">char</span> m_cContext[<span class="number">32</span>];</span><br><span class="line">&#125;__attribute__((packed))TCP_OPTIONS, *PTCP_OPTIONS;</span><br></pre></td></tr></table></figure><p><img src="http://o7myibfc7.bkt.clouddn.com/TCPheader.jpg" alt="TCP头"></p><p><strong>UDP头结构</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">UDP_HEADER</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> m_usSourPort;    　　　<span class="comment">// 源端口号16bit</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> m_usDestPort;    　　　<span class="comment">// 目的端口号16bit</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> m_usLength;    　　　　<span class="comment">// 数据包长度16bit</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> m_usCheckSum;    　　<span class="comment">// 校验和16bit</span></span><br><span class="line">&#125;__attribute__((packed))UDP_HEADER, *PUDP_HEADER;</span><br></pre></td></tr></table></figure><p><img src="http://o7myibfc7.bkt.clouddn.com/UDPheader.jpg" alt="UDP头"></p><p><strong>原始套接字编程</strong></p><p>原始套接字编程主要是涉及到packet，这里给出packet的man文件：</p><p><a href="http://man7.org/linux/man-pages/man7/packet.7.html" target="_blank" rel="noopener">PACKET</a></p><hr><h3 id="路由表MAC转发代码分析"><a href="#路由表MAC转发代码分析" class="headerlink" title="路由表MAC转发代码分析"></a>路由表MAC转发代码分析</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/if_ether.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netpacket/packet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;net/ethernet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"define.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;net/if.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;arpa/inet.h&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;linux/in.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//extern int errno;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>errno</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> errno;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sockfd;</span><br><span class="line"><span class="keyword">char</span> recvbuf[<span class="number">2048</span>];</span><br><span class="line"><span class="keyword">int</span> R_table_id =<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> R_table_sum=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">RTable</span> <span class="title">mytable</span>[10];</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadFile</span><span class="params">()</span></span>; <span class="comment">// 读取配置文件</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindMe</span><span class="params">()</span></span>; <span class="comment">// 查找IP对应的MAC地址</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sends</span><span class="params">()</span></span>; <span class="comment">// 发送给MAC地址</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getvol</span><span class="params">(<span class="keyword">char</span> g)</span></span>; <span class="comment">// 返回ASCII码</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">ReadFile();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((sockfd=socket(PF_PACKET,SOCK_RAW,htons(ETH_P_IP)))&lt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Can Not Create Raw Socket\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> n_read=recvfrom(sockfd,recvbuf,<span class="number">2048</span>,<span class="number">0</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span>(n_read&lt;<span class="number">42</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Error When Receive Message\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span>*p =recvbuf;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0xff</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"MAC address:%.2x:%02x:%02x:%02x:%02x:%02x====&gt;%.2x:%02x:%02x:%02x:%02x:%02x\n"</span>,p[<span class="number">6</span>]&amp;n,p[<span class="number">7</span>]&amp;n,p[<span class="number">8</span>]&amp;n,p[<span class="number">9</span>]&amp;n,p[<span class="number">10</span>]&amp;n,p[<span class="number">11</span>]&amp;n,p[<span class="number">0</span>]&amp;n,p[<span class="number">1</span>]&amp;n,p[<span class="number">2</span>]&amp;n,p[<span class="number">3</span>]&amp;n,p[<span class="number">4</span>]&amp;n,p[<span class="number">5</span>]&amp;n);</span><br><span class="line">p=recvbuf+<span class="number">26</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"IP:%d.%d.%d.%d  ===&gt;%d.%d.%d.%d\n"</span>,p[<span class="number">0</span>]&amp;n,p[<span class="number">1</span>]&amp;n,p[<span class="number">2</span>]&amp;n,p[<span class="number">3</span>]&amp;n,p[<span class="number">4</span>]&amp;n,p[<span class="number">5</span>]&amp;n,p[<span class="number">6</span>]&amp;n,p[<span class="number">7</span>]&amp;n);</span><br><span class="line">R_table_id = FindMe(p+<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(R_table_id == <span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Not Find In Route\n"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Find In Route %s\n"</span>,mytable[R_table_id].eth);</span><br><span class="line">sends();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadFile</span><span class="params">()</span></span>&#123; <span class="comment">// 读取本地配置文件</span></span><br><span class="line">FILE *fp = fopen(<span class="string">"conf.file"</span>,<span class="string">"r"</span>);</span><br><span class="line"><span class="keyword">if</span>(fp == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"ERROR WHNE READING!\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> *p;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,i=<span class="number">0</span>,Rt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0xff</span>;</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">2048</span>];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> t[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NOW READING!\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(!feof(fp))&#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">"%s %s %d.%d.%d.%d\n"</span>,mytable[Rt].eth,temp,&amp;t[<span class="number">0</span>],&amp;t[<span class="number">1</span>],&amp;t[<span class="number">2</span>],&amp;t[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>,k=<span class="number">0</span>;i&lt;<span class="number">17</span>;i+=<span class="number">3</span>)</span><br><span class="line">   mytable[Rt].mac[k++] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)(<span class="number">16</span>*getvol(temp[i]) + getvol(temp[i+<span class="number">1</span>]));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line"><span class="built_in">memcpy</span>(mytable[Rt].ip+i,&amp;t[i],<span class="number">1</span>);</span><br><span class="line">p = mytable[Rt].mac;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d DST %s MAC: %.2x:%02x:%02x:%02x:%02x:%02x "</span>,R_table_sum,mytable[Rt].eth,p[<span class="number">0</span>]&amp;n,p[<span class="number">1</span>]&amp;n,p[<span class="number">2</span>]&amp;n,p[<span class="number">3</span>]&amp;n,p[<span class="number">4</span>]&amp;n,p[<span class="number">5</span>]&amp;n);</span><br><span class="line">p = mytable[Rt].ip;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"IP: %d.%d.%d.%d\n"</span>,p[<span class="number">0</span>]&amp;n,p[<span class="number">1</span>]&amp;n,p[<span class="number">2</span>]&amp;n,p[<span class="number">3</span>]&amp;n);</span><br><span class="line">R_table_sum++;</span><br><span class="line">Rt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d READING END!\n"</span>,R_table_sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindMe</span><span class="params">(<span class="keyword">char</span> *mp)</span></span>&#123;<span class="comment">//get the index in router table</span></span><br><span class="line">   <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;R_table_sum;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="built_in">memcmp</span>(mp,mytable[i].ip,<span class="number">3</span>) == <span class="number">0</span>)</span><br><span class="line">       <span class="keyword">return</span> i;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sends</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//int i=0,n=0xff,</span></span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_ll</span> <span class="title">sa</span>;</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;sa,<span class="number">0</span>,<span class="keyword">sizeof</span>(struct sockaddr_ll));</span><br><span class="line">sa.sll_family = AF_PACKET;</span><br><span class="line">sa.sll_halen = <span class="number">6</span>;</span><br><span class="line">sa.sll_ifindex = if_nametoindex(mytable[R_table_id].eth);</span><br><span class="line">sa.sll_protocol = <span class="number">0x0800</span>;</span><br><span class="line"><span class="built_in">memcpy</span>(&amp;sa.sll_addr,mytable[R_table_id].mac,<span class="number">6</span>);</span><br><span class="line"><span class="built_in">memcpy</span>(recvbuf,mytable[R_table_id].mac,<span class="number">6</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">iphead</span> *<span class="title">iph</span> = (<span class="title">struct</span> <span class="title">iphead</span> *)(<span class="title">recvbuf</span>+14);</span> <span class="comment">// 去掉MAC头 得到IP头</span></span><br><span class="line">len = <span class="number">16</span>*iph-&gt;ip_len[<span class="number">0</span>] + iph-&gt;ip_len[<span class="number">1</span>]; <span class="comment">// 数据报长度</span></span><br><span class="line"><span class="keyword">int</span> retval = sendto(sockfd, recvbuf, <span class="number">14</span>+len, <span class="number">0</span>, (struct sockaddr*)&amp;sa, <span class="keyword">sizeof</span>(struct sockaddr_ll));</span><br><span class="line"><span class="keyword">if</span>(retval == <span class="number">-1</span>)&#123;</span><br><span class="line">perror(<span class="string">"Sends Error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getvol</span><span class="params">(<span class="keyword">char</span> g)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isalpha</span>(g))</span><br><span class="line"><span class="keyword">return</span> (<span class="number">10</span>+g-<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> (g-<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的IP头结构为自定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">iphead</span>&#123;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ip_hl:<span class="number">4</span>,ip_v:<span class="number">4</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ip_tos;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ip_len[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_id;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_off;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ip_ttl;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> ip_p;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_sum;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> ip_src;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> ip_dst;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>程序接收完整的一个socket packet，进行包头的分解，然后根据配置文件的IP和MAC对应关系进行转发。</p><hr><h3 id="socket二层帧转发代码分析"><a href="#socket二层帧转发代码分析" class="headerlink" title="socket二层帧转发代码分析"></a>socket二层帧转发代码分析</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/if_packet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/if_ether.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;//for netdevice</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/if_arp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/select.h&gt;//for select()</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b)) </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ETH_FRAME_LEN  500</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NICNUM 2<span class="comment">//要接收的网卡数量为2，默认为eth0和eth1</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RECVDEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SENDDEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">EthernetInfo</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> dev;<span class="comment">//是否存在？</span></span><br><span class="line"><span class="keyword">int</span> active;<span class="comment">//是否被激活；</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> mac_local[<span class="number">8</span>];<span class="comment">//本地网卡的MAC地址</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> mac_next[<span class="number">8</span>];<span class="comment">//下一跳的MAC地址</span></span><br><span class="line">&#125; EthernetInfo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ipheader</span> &#123;</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> ip_hl:<span class="number">4</span>, ip_v:<span class="number">4</span>; <span class="comment">/* this means that each member is 4 bits */</span></span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> ip_tos;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_len;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_id;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_off;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> ip_ttl;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> ip_p;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> ip_sum;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> ip_src;</span><br><span class="line"> <span class="keyword">unsigned</span> <span class="keyword">int</span> ip_dst;</span><br><span class="line">&#125;; <span class="comment">/* total ip header length: 20 bytes (=160 bits) */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">itimerval</span> <span class="title">monitor_interval</span>;</span> <span class="comment">//系统定时器连续时间间隔</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">monitor_timer</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lookupethdev</span><span class="params">(EthernetInfo *eif)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, m, n, cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_ll</span> <span class="title">sockadr</span>[2], <span class="title">adrfrom</span>;</span> <span class="comment">//数据链路层使用的网络参数结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ifreq</span> <span class="title">ifst</span>[2];</span></span><br><span class="line"><span class="keyword">int</span> sock[<span class="number">2</span>];<span class="comment">//两个网卡上接收，这几个参数也得增加</span></span><br><span class="line"><span class="keyword">char</span> *devname[] = &#123;<span class="string">"eth0"</span>,<span class="string">"eth1"</span>&#125;;</span><br><span class="line">EthernetInfo ethinfo[NICNUM];<span class="comment">//存放本地网卡硬件地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>  *buffer;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ipheader</span> *<span class="title">iphdr</span>;</span></span><br><span class="line"></span><br><span class="line">fd_set rset; <span class="comment">//for select()</span></span><br><span class="line"><span class="keyword">int</span> maxfd;</span><br><span class="line"></span><br><span class="line">lookupethdev(&amp;ethinfo);</span><br><span class="line">m = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"In Main ---\n Eth%d's MAC  %x:%x:%x:%x:%x:%x\n"</span>, m, ethinfo[m].mac_local[<span class="number">0</span>], ethinfo[m].mac_local[<span class="number">1</span>], ethinfo[m].mac_local[<span class="number">2</span>], ethinfo[m].mac_local[<span class="number">3</span>], ethinfo[m].mac_local[<span class="number">4</span>], ethinfo[m].mac_local[<span class="number">5</span>]);</span><br><span class="line">buffer = (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)<span class="built_in">malloc</span>(ETH_FRAME_LEN); <span class="comment">//mem for buffer</span></span><br><span class="line">data = buffer + <span class="number">14</span>; <span class="comment">//data in the frame</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>; n&lt;NICNUM; n++)&#123; <span class="comment">// 两个网卡分别socket和bind</span></span><br><span class="line"><span class="keyword">if</span> ((sock[n]=socket(AF_PACKET,SOCK_RAW,htons(ETH_P_ALL)))==<span class="number">-1</span>)&#123;</span><br><span class="line">perror(<span class="string">"When creat raw socket: "</span>);</span><br><span class="line"><span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(ifst[n].ifr_name,devname[n]);</span><br><span class="line">ioctl(sock[n],SIOCGIFINDEX,&amp;ifst[n]);   <span class="comment">//根据名字获取网卡的index号码</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" Eth%d--&gt; ifst.ifr_ifindex = %d \n"</span>,n,ifst[n].ifr_ifindex);</span><br><span class="line"></span><br><span class="line">sockadr[n].sll_family   = AF_PACKET;</span><br><span class="line">sockadr[n].sll_protocol = htons(ETH_P_ALL);</span><br><span class="line">sockadr[n].sll_ifindex  = ifst[n].ifr_ifindex;</span><br><span class="line"></span><br><span class="line"><span class="comment">// socket bind</span></span><br><span class="line">i = bind(sock[n], &amp;(sockadr[n]), <span class="keyword">sizeof</span>(struct sockaddr_ll));</span><br><span class="line"><span class="keyword">if</span>(i != <span class="number">0</span>)&#123;</span><br><span class="line">perror(<span class="string">"Binding False: "</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Binding Sock[%d] successfully\n"</span>, n);</span><br><span class="line">&#125;<span class="comment">//--for--</span></span><br><span class="line"></span><br><span class="line">monitor_interval.it_interval.tv_sec = <span class="number">0</span>;</span><br><span class="line">monitor_interval.it_interval.tv_usec = <span class="number">0</span>;</span><br><span class="line">monitor_interval.it_value.tv_sec = <span class="number">2</span>;</span><br><span class="line">monitor_interval.it_value.tv_usec = <span class="number">0</span>; <span class="comment">//定时器周期</span></span><br><span class="line">signal(SIGALRM,monitor_timer); <span class="comment">//将定时器到达信号连接到monitor_timer子程序</span></span><br><span class="line">setitimer(ITIMER_REAL,&amp;monitor_interval,<span class="literal">NULL</span>); <span class="comment">//启动连续的定时器中断</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"---------------cnt = %d------------\n"</span>, cnt);</span><br><span class="line">FD_ZERO(&amp;rset);</span><br><span class="line">maxfd = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>; n&lt;NICNUM; n++)&#123;</span><br><span class="line">FD_SET(sock[n], &amp;rset);</span><br><span class="line">maxfd = max(sock[n], maxfd);</span><br><span class="line">&#125;</span><br><span class="line">maxfd = maxfd + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(select(maxfd, &amp;rset, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>)  &lt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//没有期望的接收事件发生，继续等待</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (n = <span class="number">0</span>; n &lt;NICNUM; n++)&#123;</span><br><span class="line"><span class="keyword">if</span> (FD_ISSET(sock[n], &amp;rset) == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//判断哪个套接字上发生了事件，没有，继续判断下一个</span></span><br><span class="line"></span><br><span class="line">recvfrom(sock[n], buffer, ETH_FRAME_LEN, <span class="number">0</span>, (struct sockaddr*)&amp;adrfrom, <span class="keyword">sizeof</span>(struct sockaddr_ll));</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> RECVDEBUG</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Eth%d-----ProtocAtFrom ＝ %d DestMac: "</span>, n, adrfrom.sll_protocol);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%2x-"</span>, buffer[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"   SourceMac: "</span>, adrfrom.sll_protocol);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">6</span>; i&lt;<span class="number">12</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%2x-"</span>, buffer[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  FrameType = %2x-%2x\n"</span>,  buffer[<span class="number">12</span>],  buffer[<span class="number">13</span>]);</span><br><span class="line"><span class="keyword">if</span>(buffer[<span class="number">12</span>] != <span class="number">0x08</span> || buffer[<span class="number">13</span>] != <span class="number">0x00</span>)</span><br><span class="line"><span class="keyword">continue</span>; <span class="comment">//不是IP帧，不再往下执行，跳回接收</span></span><br><span class="line">iphdr =  (struct ipheader *)  (&amp;buffer[<span class="number">14</span>]);<span class="comment">//确定IP首部地址</span></span><br><span class="line">data = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)&amp;(iphdr-&gt;ip_dst);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"S_IP = %8x  %d.%d.%d.%d\n"</span>, iphdr-&gt;ip_dst, data[<span class="number">0</span>], data[<span class="number">1</span>], data[<span class="number">2</span>], data[<span class="number">3</span>]);</span><br><span class="line"><span class="comment">//注意：网络字节顺序（int==0x0b00a8c0 －&gt; 192.168.0.11）</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> RECVDEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开始转发－－目的MAC暂且全1－－&gt;数据链路层广播方式－－仅仅对于双网卡方式！</span></span><br><span class="line">m = (n + <span class="number">1</span>) % <span class="number">1</span>; <span class="comment">// m=2？？？？？</span></span><br><span class="line">sockadr[m].sll_family   = AF_PACKET;</span><br><span class="line">sockadr[m].sll_protocol = htons(ETH_P_IP);</span><br><span class="line">sockadr[m].sll_ifindex  = ifst[m].ifr_ifindex;</span><br><span class="line">sockadr[m].sll_hatype   = ARPHRD_ETHER;</span><br><span class="line">sockadr[m].sll_pkttype  = PACKET_OTHERHOST;</span><br><span class="line">sockadr[m].sll_halen    = ETH_ALEN;</span><br><span class="line"><span class="built_in">memcpy</span>(sockadr[m].sll_addr, ethinfo[m].mac_local, ETH_ALEN);</span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0xff</span>, ETH_ALEN); <span class="comment">// Mac全1</span></span><br><span class="line"><span class="built_in">memcpy</span>(buffer+ETH_ALEN,  ethinfo[m].mac_local, ETH_ALEN);</span><br><span class="line">buffer[<span class="number">12</span>] = <span class="number">0x08</span>;</span><br><span class="line">buffer[<span class="number">13</span>] = <span class="number">0x00</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> SENDDEBUG</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Sendto  Eth%d-----ProtocAtFrom ＝ %d DestMac: "</span>, n, adrfrom.sll_protocol);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%2x-"</span>, buffer[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"   SourceMac: "</span>, adrfrom.sll_protocol);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">6</span>; i&lt;<span class="number">12</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%2x-"</span>, buffer[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  FrameType = %2x-%2x IPSize = 0x%x\n"</span>,  buffer[<span class="number">12</span>],  buffer[<span class="number">13</span>], iphdr-&gt;ip_len);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> SENDDEBUG</span></span><br><span class="line"></span><br><span class="line">i = sendto(sock[m],buffer,iphdr-&gt;ip_len + <span class="number">14</span>,<span class="number">0</span>,(struct sockaddr*)&amp;sockadr[m],<span class="keyword">sizeof</span>(struct sockaddr_ll));</span><br><span class="line"><span class="keyword">if</span>(i ==<span class="number">-1</span>)&#123;</span><br><span class="line">perror(<span class="string">"Error --&gt; When sendto: "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Sendto Success eth%d --&gt; eth%d Size = %d\n"</span>, n, m, iphdr-&gt;ip_len);</span><br><span class="line">&#125; <span class="comment">//---for---end---</span></span><br><span class="line">&#125;<span class="comment">//--while--</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询系统配置文件以获得网卡MAC地址 不适合Ubuntu 用ioctl重写</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lookupethdev</span><span class="params">(EthernetInfo *eif)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//----------------------------------定时器------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">monitor_timer</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k,l,m,n;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> timer_counter;</span><br><span class="line">monitor_interval.it_interval.tv_sec = <span class="number">0</span>;</span><br><span class="line">monitor_interval.it_interval.tv_usec = <span class="number">0</span>;</span><br><span class="line">monitor_interval.it_value.tv_sec = <span class="number">2</span>;</span><br><span class="line">monitor_interval.it_value.tv_usec = <span class="number">0</span>; <span class="comment">//定时器周期:100ms</span></span><br><span class="line">setitimer(ITIMER_REAL,&amp;monitor_interval,<span class="literal">NULL</span>); </span><br><span class="line">timer_counter++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Socket </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式和一些常用文本处理命令</title>
      <link href="/posts/61374/"/>
      <url>/posts/61374/</url>
      <content type="html"><![CDATA[<p>一直懒于整理基础的一些东西，比如grep会用就好了，regex写不出可以查一下嘛，前些日子被问到如何在20万数据找到符合要求的数据，sed？egrep？原来我的基础命令水平这么差。</p><a id="more"></a><hr><p>先给出一条有意思的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span> |awk <span class="string">'&#123;print $2&#125;'</span> |sort|uniq -c|sort -rn|head -10</span><br></pre></td></tr></table></figure><p>可以看出最近你在忙什么，这是我的结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">219 sudo</span><br><span class="line">151 <span class="built_in">cd</span></span><br><span class="line">113 hexo</span><br><span class="line">100 ls</span><br><span class="line"> 34 cat</span><br><span class="line"> 24 gcc</span><br><span class="line"> 21 man</span><br><span class="line"> 18 whereis</span><br><span class="line"> 14 ping</span><br><span class="line"> 14 ./clock</span><br></pre></td></tr></table></figure><p>所以我还是一个权限控，每天sudo输这么多遍也是挺累的。</p><p>还有个命令总是记不住：<code>nautilus</code> ，用来直接打开文件管理器，真想写个alias，还是记单词吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nautilus - Bing dictionary</span><br><span class="line">UK[&apos;nɔːtɪləs]</span><br><span class="line"></span><br><span class="line">    n.鹦鹉螺</span><br><span class="line">    鹦鹉螺号；鹦鹉螺属；文件管理器</span><br></pre></td></tr></table></figure><hr><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>一张图总结正则表达式，图太大，请点击：</p><p><a href="http://o7myibfc7.bkt.clouddn.com/034d5a7e-058f-328c-b5f4-dfad3725027e.jpg" target="_blank" rel="noopener">正则表达式</a></p><p>正则表达式30分钟入门教程（常用正则表达式）：</p><p><a href="http://www.jb51.net/tools/zhengze.html/" target="_blank" rel="noopener">外链到jb51网</a></p><hr><h3 id="grep-gawk-sed"><a href="#grep-gawk-sed" class="headerlink" title="grep gawk sed"></a>grep gawk sed</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br></pre></td><td class="code"><pre><span class="line">GREP(1)                     General Commands Manual                    GREP(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       grep, egrep, fgrep, rgrep - print lines matching a pattern</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       grep [OPTIONS] PATTERN [FILE...]</span><br><span class="line">       grep [OPTIONS] [-e PATTERN]...  [-f FILE]...  [FILE...]</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       grep searches the named input FILEs for lines containing a match to the</span><br><span class="line">       given PATTERN.  If no files are specified, or if the file “-” is given,</span><br><span class="line">       grep  searches  standard  input.   By default, grep prints the matching</span><br><span class="line">       lines.</span><br><span class="line"></span><br><span class="line">       In addition, the variant programs egrep, fgrep and rgrep are  the  same</span><br><span class="line">       as  grep -E,  grep -F,  and  grep -r, respectively.  These variants are</span><br><span class="line">       deprecated, but are provided for backward compatibility.</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">   Generic Program Information</span><br><span class="line">       --help Output a usage message and exit.</span><br><span class="line"></span><br><span class="line">       -V, --version</span><br><span class="line">              Output the version number of grep and exit.</span><br><span class="line"></span><br><span class="line">   Matcher Selection</span><br><span class="line">       -E, --extended-regexp  // 元字符拓展集 egrep</span><br><span class="line">              Interpret PATTERN as an extended regular  expression  (ERE,  see</span><br><span class="line">              below).</span><br><span class="line"></span><br><span class="line">       -F, --fixed-strings // 速度更快 简单字符串</span><br><span class="line">              Interpret PATTERN as a list of fixed strings (instead of regular</span><br><span class="line">              expressions), separated by newlines,  any  of  which  is  to  be</span><br><span class="line">              matched.</span><br><span class="line"></span><br><span class="line">       -G, --basic-regexp</span><br><span class="line">              Interpret  PATTERN  as  a  basic  regular  expression  (BRE, see</span><br><span class="line">              below).  This is the default.</span><br><span class="line"></span><br><span class="line">       -P, --perl-regexp</span><br><span class="line">              Interpret the pattern as a  Perl-compatible  regular  expression</span><br><span class="line">              (PCRE).   This  is  highly  experimental and grep -P may warn of</span><br><span class="line">              unimplemented features.</span><br><span class="line"></span><br><span class="line">   Matching Control</span><br><span class="line">       -e PATTERN, --regexp=PATTERN</span><br><span class="line">              Use PATTERN as the pattern.  If this  option  is  used  multiple</span><br><span class="line">              times or is combined with the -f (--file) option, search for all</span><br><span class="line">              patterns given.  This option can be used to  protect  a  pattern</span><br><span class="line">              beginning with “-”.</span><br><span class="line"></span><br><span class="line">       -f FILE, --file=FILE</span><br><span class="line">              Obtain patterns from FILE, one per line.  If this option is used</span><br><span class="line">              multiple times or is combined with  the  -e  (--regexp)  option,</span><br><span class="line">              search  for  all  patterns  given.  The empty file contains zero</span><br><span class="line">              patterns, and therefore matches nothing.</span><br><span class="line"></span><br><span class="line">       -i, --ignore-case // 忽略大小写</span><br><span class="line">              Ignore case distinctions in  both  the  PATTERN  and  the  input</span><br><span class="line">              files.</span><br><span class="line"></span><br><span class="line">       -v, --invert-match // 反检索</span><br><span class="line">              Invert the sense of matching, to select non-matching lines.</span><br><span class="line"></span><br><span class="line">       -w, --word-regexp</span><br><span class="line">              Select  only  those  lines  containing  matches  that form whole</span><br><span class="line">              words.  The test is that the matching substring must  either  be</span><br><span class="line">              at  the  beginning  of  the  line,  or  preceded  by  a non-word</span><br><span class="line">              constituent character.  Similarly, it must be either at the  end</span><br><span class="line">              of  the  line  or  followed by a non-word constituent character.</span><br><span class="line">              Word-constituent  characters  are  letters,  digits,   and   the</span><br><span class="line">              underscore.</span><br><span class="line"></span><br><span class="line">       -x, --line-regexp</span><br><span class="line">              Select  only  those  matches  that exactly match the whole line.</span><br><span class="line">              For a regular expression pattern, this  is  like  parenthesizing</span><br><span class="line">              the pattern and then surrounding it with ^ and $.</span><br><span class="line"></span><br><span class="line">       -y     Obsolete synonym for -i.</span><br><span class="line"></span><br><span class="line">   General Output Control</span><br><span class="line">       -c, --count</span><br><span class="line">              Suppress  normal output; instead print a count of matching lines</span><br><span class="line">              for each input file.  With the -v,  --invert-match  option  (see</span><br><span class="line">              below), count non-matching lines.</span><br><span class="line"></span><br><span class="line">       --color[=WHEN], --colour[=WHEN]</span><br><span class="line">              Surround   the  matched  (non-empty)  strings,  matching  lines,</span><br><span class="line">              context lines, file  names,  line  numbers,  byte  offsets,  and</span><br><span class="line">              separators  (for fields and groups of context lines) with escape</span><br><span class="line">              sequences to display them in color on the terminal.  The  colors</span><br><span class="line">              are  defined  by  the  environment  variable  GREP_COLORS.   The</span><br><span class="line">              deprecated environment variable GREP_COLOR is  still  supported,</span><br><span class="line">              but  its setting does not have priority.  WHEN is never, always,</span><br><span class="line">              or auto.</span><br><span class="line"></span><br><span class="line">       -L, --files-without-match</span><br><span class="line">              Suppress normal output; instead print the  name  of  each  input</span><br><span class="line">              file from which no output would normally have been printed.  The</span><br><span class="line">              scanning will stop on the first match.</span><br><span class="line"></span><br><span class="line">       -l, --files-with-matches</span><br><span class="line">              Suppress normal output; instead print the  name  of  each  input</span><br><span class="line">              file  from  which  output would normally have been printed.  The</span><br><span class="line">              scanning will stop on the first match.</span><br><span class="line"></span><br><span class="line">       -m NUM, --max-count=NUM</span><br><span class="line">              Stop reading a file after NUM matching lines.  If the  input  is</span><br><span class="line">              standard  input  from a regular file, and NUM matching lines are</span><br><span class="line">              output, grep ensures that the standard input  is  positioned  to</span><br><span class="line">              just  after the last matching line before exiting, regardless of</span><br><span class="line">              the presence of trailing context lines.  This enables a  calling</span><br><span class="line">              process  to resume a search.  When grep stops after NUM matching</span><br><span class="line">              lines, it outputs any trailing context lines.  When  the  -c  or</span><br><span class="line">              --count  option  is  also  used,  grep  does  not output a count</span><br><span class="line">              greater than NUM.  When the -v or --invert-match option is  also</span><br><span class="line">              used, grep stops after outputting NUM non-matching lines.</span><br><span class="line"></span><br><span class="line">       -o, --only-matching</span><br><span class="line">              Print  only  the  matched  (non-empty) parts of a matching line,</span><br><span class="line">              with each such part on a separate output line.</span><br><span class="line"></span><br><span class="line">       -q, --quiet, --silent</span><br><span class="line">              Quiet;  do  not  write  anything  to  standard   output.    Exit</span><br><span class="line">              immediately  with  zero status if any match is found, even if an</span><br><span class="line">              error was detected.  Also see the -s or --no-messages option.</span><br><span class="line"></span><br><span class="line">       -s, --no-messages</span><br><span class="line">              Suppress error messages about nonexistent or unreadable files.</span><br><span class="line"></span><br><span class="line">   Output Line Prefix Control</span><br><span class="line">       -b, --byte-offset</span><br><span class="line">              Print the 0-based byte offset within the input file before  each</span><br><span class="line">              line of output.  If -o (--only-matching) is specified, print the</span><br><span class="line">              offset of the matching part itself.</span><br><span class="line"></span><br><span class="line">       -H, --with-filename</span><br><span class="line">              Print the file name for each match.  This is  the  default  when</span><br><span class="line">              there is more than one file to search.</span><br><span class="line"></span><br><span class="line">       -h, --no-filename</span><br><span class="line">              Suppress  the  prefixing  of  file names on output.  This is the</span><br><span class="line">              default when there is only one file (or only standard input)  to</span><br><span class="line">              search.</span><br><span class="line"></span><br><span class="line">       --label=LABEL</span><br><span class="line">              Display  input  actually  coming  from  standard  input as input</span><br><span class="line">              coming  from  file  LABEL.   This  is  especially  useful   when</span><br><span class="line">              implementing  tools  like  zgrep,  e.g.,  gzip -cd foo.gz | grep</span><br><span class="line">              --label=foo -H something.  See also the -H option.</span><br><span class="line"></span><br><span class="line">       -n, --line-number</span><br><span class="line">              Prefix each line of output with the 1-based line  number  within</span><br><span class="line">              its input file.</span><br><span class="line"></span><br><span class="line">       -T, --initial-tab</span><br><span class="line">              Make  sure  that the first character of actual line content lies</span><br><span class="line">              on a tab stop, so that the alignment of tabs looks normal.  This</span><br><span class="line">              is  useful  with  options that prefix their output to the actual</span><br><span class="line">              content: -H,-n, and -b.  In order  to  improve  the  probability</span><br><span class="line">              that lines from a single file will all start at the same column,</span><br><span class="line">              this also causes the line number and byte offset (if present) to</span><br><span class="line">              be printed in a minimum size field width.</span><br><span class="line"></span><br><span class="line">       -u, --unix-byte-offsets</span><br><span class="line">              Report  Unix-style  byte  offsets.   This  switch causes grep to</span><br><span class="line">              report byte offsets as if the file were a Unix-style text  file,</span><br><span class="line">              i.e.,  with  CR  characters  stripped  off.   This  will produce</span><br><span class="line">              results identical to running  grep  on  a  Unix  machine.   This</span><br><span class="line">              option  has  no  effect unless -b option is also used; it has no</span><br><span class="line">              effect on platforms other than MS-DOS and MS-Windows.</span><br><span class="line"></span><br><span class="line">       -Z, --null</span><br><span class="line">              Output a zero byte (the ASCII  NUL  character)  instead  of  the</span><br><span class="line">              character  that normally follows a file name.  For example, grep</span><br><span class="line">              -lZ outputs a zero byte after each  file  name  instead  of  the</span><br><span class="line">              usual  newline.   This option makes the output unambiguous, even</span><br><span class="line">              in the presence of file names containing unusual characters like</span><br><span class="line">              newlines.   This  option  can  be  used  with commands like find</span><br><span class="line">              -print0, perl -0, sort -z, and xargs  -0  to  process  arbitrary</span><br><span class="line">              file names, even those that contain newline characters.</span><br><span class="line"></span><br><span class="line">   Context Line Control</span><br><span class="line">       -A NUM, --after-context=NUM</span><br><span class="line">              Print  NUM  lines  of  trailing  context  after  matching lines.</span><br><span class="line">              Places  a  line  containing  a  group  separator  (--)   between</span><br><span class="line">              contiguous  groups  of  matches.  With the -o or --only-matching</span><br><span class="line">              option, this has no effect and a warning is given.</span><br><span class="line"></span><br><span class="line">       -B NUM, --before-context=NUM</span><br><span class="line">              Print NUM  lines  of  leading  context  before  matching  lines.</span><br><span class="line">              Places   a  line  containing  a  group  separator  (--)  between</span><br><span class="line">              contiguous groups of matches.  With the  -o  or  --only-matching</span><br><span class="line">              option, this has no effect and a warning is given.</span><br><span class="line"></span><br><span class="line">       -C NUM, -NUM, --context=NUM</span><br><span class="line">              Print  NUM  lines of output context.  Places a line containing a</span><br><span class="line">              group separator (--) between contiguous groups of matches.  With</span><br><span class="line">              the  -o  or  --only-matching  option,  this  has no effect and a</span><br><span class="line">              warning is given.</span><br><span class="line"></span><br><span class="line">   File and Directory Selection</span><br><span class="line">       -a, --text</span><br><span class="line">              Process a binary file as if it were text; this is equivalent  to</span><br><span class="line">              the --binary-files=text option.</span><br><span class="line"></span><br><span class="line">       --binary-files=TYPE</span><br><span class="line">              If the first few bytes of a file indicate that the file contains</span><br><span class="line">              binary data, assume that the file is of type TYPE.  By  default,</span><br><span class="line">              TYPE  is  binary,  and  grep  normally outputs either a one-line</span><br><span class="line">              message saying that a binary file  matches,  or  no  message  if</span><br><span class="line">              there  is no match.  If TYPE is without-match, grep assumes that</span><br><span class="line">              a binary file does not match;  this  is  equivalent  to  the  -I</span><br><span class="line">              option.   If TYPE is text, grep processes a binary file as if it</span><br><span class="line">              were text; this is equivalent to the -a option.  When processing</span><br><span class="line">              binary  data, grep may treat non-text bytes as line terminators;</span><br><span class="line">              for example, the pattern &apos;.&apos; (period) might  not  match  a  null</span><br><span class="line">              byte,  as  the  null byte might be treated as a line terminator.</span><br><span class="line">              Warning: grep --binary-files=text might output  binary  garbage,</span><br><span class="line">              which  can  have  nasty side effects if the output is a terminal</span><br><span class="line">              and if the terminal driver interprets some of it as commands.</span><br><span class="line"></span><br><span class="line">       -D ACTION, --devices=ACTION</span><br><span class="line">              If an input file is a device, FIFO  or  socket,  use  ACTION  to</span><br><span class="line">              process  it.   By  default,  ACTION  is  read,  which means that</span><br><span class="line">              devices are read just as if they were ordinary files.  If ACTION</span><br><span class="line">              is skip, devices are silently skipped.</span><br><span class="line"></span><br><span class="line">       -d ACTION, --directories=ACTION</span><br><span class="line">              If  an  input file is a directory, use ACTION to process it.  By</span><br><span class="line">              default, ACTION is read, i.e., read directories just as if  they</span><br><span class="line">              were   ordinary   files.   If  ACTION  is  skip,  silently  skip</span><br><span class="line">              directories.  If ACTION is recurse, read all  files  under  each</span><br><span class="line">              directory,  recursively,  following  symbolic links only if they</span><br><span class="line">              are on the command line.  This is equivalent to the -r option.</span><br><span class="line"></span><br><span class="line">       --exclude=GLOB</span><br><span class="line">              Skip  files  whose  base  name  matches  GLOB  (using   wildcard</span><br><span class="line">              matching).   A  file-name  glob  can  use  *,  ?,  and [...]  as</span><br><span class="line">              wildcards, and \ to quote  a  wildcard  or  backslash  character</span><br><span class="line">              literally.</span><br><span class="line"></span><br><span class="line">       --exclude-from=FILE</span><br><span class="line">              Skip  files  whose  base name matches any of the file-name globs</span><br><span class="line">              read from FILE  (using  wildcard  matching  as  described  under</span><br><span class="line">              --exclude).</span><br><span class="line"></span><br><span class="line">       --exclude-dir=DIR</span><br><span class="line">              Exclude  directories  matching  the  pattern  DIR from recursive</span><br><span class="line">              searches.</span><br><span class="line"></span><br><span class="line">       -I     Process a binary file as if it did not  contain  matching  data;</span><br><span class="line">              this is equivalent to the --binary-files=without-match option.</span><br><span class="line"></span><br><span class="line">       --include=GLOB</span><br><span class="line">              Search  only  files whose base name matches GLOB (using wildcard</span><br><span class="line">              matching as described under --exclude).</span><br><span class="line"></span><br><span class="line">       -r, --recursive</span><br><span class="line">              Read all files  under  each  directory,  recursively,  following</span><br><span class="line">              symbolic  links only if they are on the command line.  Note that</span><br><span class="line">              if  no  file  operand  is  given,  grep  searches  the   working</span><br><span class="line">              directory.  This is equivalent to the -d recurse option.</span><br><span class="line"></span><br><span class="line">       -R, --dereference-recursive</span><br><span class="line">              Read  all  files  under each directory, recursively.  Follow all</span><br><span class="line">              symbolic links, unlike -r.</span><br><span class="line"></span><br><span class="line">   Other Options</span><br><span class="line">       --line-buffered</span><br><span class="line">              Use line buffering on output.   This  can  cause  a  performance</span><br><span class="line">              penalty.</span><br><span class="line"></span><br><span class="line">       -U, --binary</span><br><span class="line">              Treat  the  file(s) as binary.  By default, under MS-DOS and MS-</span><br><span class="line">              Windows, grep guesses the file type by looking at  the  contents</span><br><span class="line">              of  the first 32KB read from the file.  If grep decides the file</span><br><span class="line">              is a text file, it strips the CR characters  from  the  original</span><br><span class="line">              file  contents  (to  make  regular expressions with ^ and $ work</span><br><span class="line">              correctly).  Specifying -U overrules this guesswork, causing all</span><br><span class="line">              files  to be read and passed to the matching mechanism verbatim;</span><br><span class="line">              if the file is a text file with CR/LF pairs at the end  of  each</span><br><span class="line">              line,  this  will  cause some regular expressions to fail.  This</span><br><span class="line">              option has no effect on platforms  other  than  MS-DOS  and  MS-</span><br><span class="line">              Windows.</span><br><span class="line"></span><br><span class="line">       -z, --null-data</span><br><span class="line">              Treat  the  input  as  a set of lines, each terminated by a zero</span><br><span class="line">              byte (the ASCII NUL character) instead of a newline.   Like  the</span><br><span class="line">              -Z  or --null option, this option can be used with commands like</span><br><span class="line">              sort -z to process arbitrary file names.</span><br><span class="line"></span><br><span class="line">REGULAR EXPRESSIONS</span><br><span class="line">       A regular expression is a pattern that  describes  a  set  of  strings.</span><br><span class="line">       Regular   expressions   are   constructed   analogously  to  arithmetic</span><br><span class="line">       expressions, by using various operators to combine smaller expressions.</span><br><span class="line"></span><br><span class="line">       grep understands three different versions of regular expression syntax:</span><br><span class="line">       “basic”  (BRE), “extended” (ERE) and “perl” (PCRE).  In GNU grep, there</span><br><span class="line">       is no difference in available functionality between basic and  extended</span><br><span class="line">       syntaxes.  In other implementations, basic regular expressions are less</span><br><span class="line">       powerful.   The  following  description  applies  to  extended  regular</span><br><span class="line">       expressions;  differences  for basic regular expressions are summarized</span><br><span class="line">       afterwards.   Perl-compatible  regular  expressions   give   additional</span><br><span class="line">       functionality,  and are documented in pcresyntax(3) and pcrepattern(3),</span><br><span class="line">       but work only if PCRE is available in the system.</span><br><span class="line"></span><br><span class="line">       The fundamental building blocks are the regular expressions that  match</span><br><span class="line">       a single character.  Most characters, including all letters and digits,</span><br><span class="line">       are regular expressions that match themselves.  Any meta-character with</span><br><span class="line">       special meaning may be quoted by preceding it with a backslash.</span><br><span class="line"></span><br><span class="line">       The period . matches any single character.</span><br><span class="line"></span><br><span class="line">   Character Classes and Bracket Expressions</span><br><span class="line">       A  bracket  expression is a list of characters enclosed by [ and ].  It</span><br><span class="line">       matches any single character in that list; if the  first  character  of</span><br><span class="line">       the  list is the caret ^ then it matches any character not in the list.</span><br><span class="line">       For example, the regular expression  [0123456789]  matches  any  single</span><br><span class="line">       digit.</span><br><span class="line"></span><br><span class="line">       Within  a  bracket  expression,  a  range  expression  consists  of two</span><br><span class="line">       characters separated by a hyphen.  It matches any single character that</span><br><span class="line">       sorts  between  the  two  characters,  inclusive,  using  the  locale&apos;s</span><br><span class="line">       collating sequence and character set.  For example, in  the  default  C</span><br><span class="line">       locale, [a-d] is equivalent to [abcd].  Many locales sort characters in</span><br><span class="line">       dictionary  order,  and  in  these  locales  [a-d]  is  typically   not</span><br><span class="line">       equivalent to [abcd]; it might be equivalent to [aBbCcDd], for example.</span><br><span class="line">       To obtain the traditional interpretation of  bracket  expressions,  you</span><br><span class="line">       can  use the C locale by setting the LC_ALL environment variable to the</span><br><span class="line">       value C.</span><br><span class="line"></span><br><span class="line">       Finally, certain named classes  of  characters  are  predefined  within</span><br><span class="line">       bracket expressions, as follows.  Their names are self explanatory, and</span><br><span class="line">       they  are  [:alnum:],  [:alpha:],  [:cntrl:],   [:digit:],   [:graph:],</span><br><span class="line">       [:lower:],  [:print:], [:punct:], [:space:], [:upper:], and [:xdigit:].</span><br><span class="line">       For example, [[:alnum:]] means  the  character  class  of  numbers  and</span><br><span class="line">       letters  in the current locale. In the C locale and ASCII character set</span><br><span class="line">       encoding, this is the same as [0-9A-Za-z].  (Note that the brackets  in</span><br><span class="line">       these  class names are part of the symbolic names, and must be included</span><br><span class="line">       in addition to the brackets delimiting the bracket  expression.)   Most</span><br><span class="line">       meta-characters  lose their special meaning inside bracket expressions.</span><br><span class="line">       To include a literal ] place it  first  in  the  list.   Similarly,  to</span><br><span class="line">       include a literal ^ place it anywhere but first.  Finally, to include a</span><br><span class="line">       literal - place it last.</span><br><span class="line"></span><br><span class="line">   Anchoring</span><br><span class="line">       The caret ^ and the dollar sign $ are meta-characters that respectively</span><br><span class="line">       match the empty string at the beginning and end of a line.</span><br><span class="line"></span><br><span class="line">   The Backslash Character and Special Expressions</span><br><span class="line">       The  symbols  \&lt;  and  \&gt;  respectively  match  the empty string at the</span><br><span class="line">       beginning and end of a word.  The symbol \b matches the empty string at</span><br><span class="line">       the  edge  of a word, and \B matches the empty string provided it&apos;s not</span><br><span class="line">       at the edge of a word.  The symbol \w is a synonym for [_[:alnum:]] and</span><br><span class="line">       \W is a synonym for [^_[:alnum:]].</span><br><span class="line"></span><br><span class="line">   Repetition</span><br><span class="line">       A  regular  expression  may  be  followed  by one of several repetition</span><br><span class="line">       operators:</span><br><span class="line">       ?      The preceding item is optional and matched at most once.</span><br><span class="line">       *      The preceding item will be matched zero or more times.</span><br><span class="line">       +      The preceding item will be matched one or more times.</span><br><span class="line">       &#123;n&#125;    The preceding item is matched exactly n times.</span><br><span class="line">       &#123;n,&#125;   The preceding item is matched n or more times.</span><br><span class="line">       &#123;,m&#125;   The preceding item is matched at most m times.  This  is  a  GNU</span><br><span class="line">              extension.</span><br><span class="line">       &#123;n,m&#125;  The  preceding  item  is  matched at least n times, but not more</span><br><span class="line">              than m times.</span><br><span class="line"></span><br><span class="line">   Concatenation</span><br><span class="line">       Two regular expressions may  be  concatenated;  the  resulting  regular</span><br><span class="line">       expression  matches  any  string formed by concatenating two substrings</span><br><span class="line">       that respectively match the concatenated expressions.</span><br><span class="line"></span><br><span class="line">   Alternation</span><br><span class="line">       Two regular expressions may be joined by  the  infix  operator  |;  the</span><br><span class="line">       resulting   regular  expression  matches  any  string  matching  either</span><br><span class="line">       alternate expression.</span><br><span class="line"></span><br><span class="line">   Precedence</span><br><span class="line">       Repetition takes precedence over concatenation,  which  in  turn  takes</span><br><span class="line">       precedence  over  alternation.   A  whole expression may be enclosed in</span><br><span class="line">       parentheses  to  override   these   precedence   rules   and   form   a</span><br><span class="line">       subexpression.</span><br><span class="line"></span><br><span class="line">   Back References and Subexpressions</span><br><span class="line">       The back-reference \n, where n is a single digit, matches the substring</span><br><span class="line">       previously matched  by  the  nth  parenthesized  subexpression  of  the</span><br><span class="line">       regular expression.</span><br><span class="line"></span><br><span class="line">   Basic vs Extended Regular Expressions</span><br><span class="line">       In  basic  regular expressions the meta-characters ?, +, &#123;, |, (, and )</span><br><span class="line">       lose their special meaning; instead use the  backslashed  versions  \?,</span><br><span class="line">       \+, \&#123;, \|, \(, and \).</span><br><span class="line"></span><br><span class="line">ENVIRONMENT VARIABLES</span><br><span class="line">       The   behavior  of  grep  is  affected  by  the  following  environment</span><br><span class="line">       variables.</span><br><span class="line"></span><br><span class="line">       The locale for category LC_foo is  specified  by  examining  the  three</span><br><span class="line">       environment  variables  LC_ALL, LC_foo, LANG, in that order.  The first</span><br><span class="line">       of these variables that is set specifies the locale.  For  example,  if</span><br><span class="line">       LC_ALL  is not set, but LC_MESSAGES is set to pt_BR, then the Brazilian</span><br><span class="line">       Portuguese locale is used for the LC_MESSAGES category.  The  C  locale</span><br><span class="line">       is  used  if none of these environment variables are set, if the locale</span><br><span class="line">       catalog is not installed, or if grep was  not  compiled  with  national</span><br><span class="line">       language support (NLS).</span><br><span class="line"></span><br><span class="line">       GREP_OPTIONS</span><br><span class="line">              This variable specifies default options to be placed in front of</span><br><span class="line">              any explicit options.  As  this  causes  problems  when  writing</span><br><span class="line">              portable  scripts,  this  feature  will  be  removed in a future</span><br><span class="line">              release of grep, and grep warns if it is used.   Please  use  an</span><br><span class="line">              alias or script instead.</span><br><span class="line"></span><br><span class="line">       GREP_COLOR</span><br><span class="line">              This  variable  specifies  the  color  used to highlight matched</span><br><span class="line">              (non-empty) text.  It is deprecated in favor of GREP_COLORS, but</span><br><span class="line">              still supported.  The mt, ms, and mc capabilities of GREP_COLORS</span><br><span class="line">              have priority over it.  It can only specify the  color  used  to</span><br><span class="line">              highlight  the  matching  non-empty text in any matching line (a</span><br><span class="line">              selected line when the -v command-line option is omitted,  or  a</span><br><span class="line">              context line when -v is specified).  The default is 01;31, which</span><br><span class="line">              means a bold red  foreground  text  on  the  terminal&apos;s  default</span><br><span class="line">              background.</span><br><span class="line"></span><br><span class="line">       GREP_COLORS</span><br><span class="line">              Specifies  the  colors  and  other  attributes used to highlight</span><br><span class="line">              various parts of the output.  Its  value  is  a  colon-separated</span><br><span class="line">              list       of       capabilities      that      defaults      to</span><br><span class="line">              ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36  with  the  rv</span><br><span class="line">              and  ne  boolean  capabilities omitted (i.e., false).  Supported</span><br><span class="line">              capabilities are as follows.</span><br><span class="line"></span><br><span class="line">              sl=    SGR substring for whole selected  lines  (i.e.,  matching</span><br><span class="line">                     lines when the -v command-line option is omitted, or non-</span><br><span class="line">                     matching lines when -v is  specified).   If  however  the</span><br><span class="line">                     boolean  rv capability and the -v command-line option are</span><br><span class="line">                     both specified, it  applies  to  context  matching  lines</span><br><span class="line">                     instead.   The  default  is  empty  (i.e., the terminal&apos;s</span><br><span class="line">                     default color pair).</span><br><span class="line"></span><br><span class="line">              cx=    SGR substring for whole context lines (i.e., non-matching</span><br><span class="line">                     lines  when  the  -v  command-line  option is omitted, or</span><br><span class="line">                     matching lines when -v is  specified).   If  however  the</span><br><span class="line">                     boolean  rv capability and the -v command-line option are</span><br><span class="line">                     both specified, it applies to selected non-matching lines</span><br><span class="line">                     instead.   The  default  is  empty  (i.e., the terminal&apos;s</span><br><span class="line">                     default color pair).</span><br><span class="line"></span><br><span class="line">              rv     Boolean value that reverses (swaps) the meanings  of  the</span><br><span class="line">                     sl=  and cx= capabilities when the -v command-line option</span><br><span class="line">                     is specified.  The default is false (i.e., the capability</span><br><span class="line">                     is omitted).</span><br><span class="line"></span><br><span class="line">              mt=01;31</span><br><span class="line">                     SGR substring for matching non-empty text in any matching</span><br><span class="line">                     line (i.e., a selected  line  when  the  -v  command-line</span><br><span class="line">                     option   is  omitted,  or  a  context  line  when  -v  is</span><br><span class="line">                     specified).  Setting this is equivalent to  setting  both</span><br><span class="line">                     ms=  and mc= at once to the same value.  The default is a</span><br><span class="line">                     bold  red  text  foreground   over   the   current   line</span><br><span class="line">                     background.</span><br><span class="line"></span><br><span class="line">              ms=01;31</span><br><span class="line">                     SGR  substring  for matching non-empty text in a selected</span><br><span class="line">                     line.  (This is only used when the -v command-line option</span><br><span class="line">                     is  omitted.)   The  effect  of  the  sl=  (or cx= if rv)</span><br><span class="line">                     capability  remains  active  when  this  kicks  in.   The</span><br><span class="line">                     default  is  a  bold red text foreground over the current</span><br><span class="line">                     line background.</span><br><span class="line"></span><br><span class="line">              mc=01;31</span><br><span class="line">                     SGR substring for matching non-empty text  in  a  context</span><br><span class="line">                     line.  (This is only used when the -v command-line option</span><br><span class="line">                     is specified.)  The effect of the  cx=  (or  sl=  if  rv)</span><br><span class="line">                     capability  remains  active  when  this  kicks  in.   The</span><br><span class="line">                     default is a bold red text foreground  over  the  current</span><br><span class="line">                     line background.</span><br><span class="line"></span><br><span class="line">              fn=35  SGR  substring for file names prefixing any content line.</span><br><span class="line">                     The  default  is  a  magenta  text  foreground  over  the</span><br><span class="line">                     terminal&apos;s default background.</span><br><span class="line"></span><br><span class="line">              ln=32  SGR  substring  for  line  numbers  prefixing any content</span><br><span class="line">                     line.  The default is a green text  foreground  over  the</span><br><span class="line">                     terminal&apos;s default background.</span><br><span class="line"></span><br><span class="line">              bn=32  SGR  substring  for  byte  offsets  prefixing any content</span><br><span class="line">                     line.  The default is a green text  foreground  over  the</span><br><span class="line">                     terminal&apos;s default background.</span><br><span class="line"></span><br><span class="line">              se=36  SGR  substring  for  separators that are inserted between</span><br><span class="line">                     selected line fields (:), between  context  line  fields,</span><br><span class="line">                     (-),  and  between  groups of adjacent lines when nonzero</span><br><span class="line">                     context is specified (--).  The default is  a  cyan  text</span><br><span class="line">                     foreground over the terminal&apos;s default background.</span><br><span class="line"></span><br><span class="line">              ne     Boolean  value  that prevents clearing to the end of line</span><br><span class="line">                     using Erase in Line (EL) to Right  (\33[K)  each  time  a</span><br><span class="line">                     colorized  item  ends.   This  is  needed on terminals on</span><br><span class="line">                     which EL is not supported.  It  is  otherwise  useful  on</span><br><span class="line">                     terminals  for  which  the back_color_erase (bce) boolean</span><br><span class="line">                     terminfo capability  does  not  apply,  when  the  chosen</span><br><span class="line">                     highlight colors do not affect the background, or when EL</span><br><span class="line">                     is too slow or causes too much flicker.  The  default  is</span><br><span class="line">                     false (i.e., the capability is omitted).</span><br><span class="line"></span><br><span class="line">              Note  that  boolean  capabilities  have no =...  part.  They are</span><br><span class="line">              omitted (i.e., false) by default and become true when specified.</span><br><span class="line"></span><br><span class="line">              See  the  Select  Graphic  Rendition  (SGR)   section   in   the</span><br><span class="line">              documentation  of  the  text terminal that is used for permitted</span><br><span class="line">              values  and  their  meaning  as  character  attributes.    These</span><br><span class="line">              substring  values are integers in decimal representation and can</span><br><span class="line">              be concatenated with semicolons.  grep takes care of  assembling</span><br><span class="line">              the  result  into  a  complete  SGR sequence (\33[...m).  Common</span><br><span class="line">              values to concatenate include 1 for bold, 4 for underline, 5 for</span><br><span class="line">              blink,  7 for inverse, 39 for default foreground color, 30 to 37</span><br><span class="line">              for foreground colors, 90 to 97  for  16-color  mode  foreground</span><br><span class="line">              colors,  38;5;0  to  38;5;255  for  88-color and 256-color modes</span><br><span class="line">              foreground colors, 49 for default background color, 40 to 47 for</span><br><span class="line">              background  colors,  100  to  107  for  16-color mode background</span><br><span class="line">              colors, and 48;5;0 to 48;5;255 for 88-color and 256-color  modes</span><br><span class="line">              background colors.</span><br><span class="line"></span><br><span class="line">       LC_ALL, LC_COLLATE, LANG</span><br><span class="line">              These  variables specify the locale for the LC_COLLATE category,</span><br><span class="line">              which determines the collating sequence used to interpret  range</span><br><span class="line">              expressions like [a-z].</span><br><span class="line"></span><br><span class="line">       LC_ALL, LC_CTYPE, LANG</span><br><span class="line">              These  variables  specify  the locale for the LC_CTYPE category,</span><br><span class="line">              which determines the type of characters, e.g., which  characters</span><br><span class="line">              are whitespace.</span><br><span class="line"></span><br><span class="line">       LC_ALL, LC_MESSAGES, LANG</span><br><span class="line">              These variables specify the locale for the LC_MESSAGES category,</span><br><span class="line">              which determines the language that grep uses for messages.   The</span><br><span class="line">              default C locale uses American English messages.</span><br><span class="line"></span><br><span class="line">       POSIXLY_CORRECT</span><br><span class="line">              If  set, grep behaves as POSIX requires; otherwise, grep behaves</span><br><span class="line">              more like other GNU programs.  POSIX requires that options  that</span><br><span class="line">              follow  file  names  must  be treated as file names; by default,</span><br><span class="line">              such options are permuted to the front of the operand  list  and</span><br><span class="line">              are  treated as options.  Also, POSIX requires that unrecognized</span><br><span class="line">              options be diagnosed as “illegal”, but since they are not really</span><br><span class="line">              against  the  law  the default is to diagnose them as “invalid”.</span><br><span class="line">              POSIXLY_CORRECT  also   disables   _N_GNU_nonoption_argv_flags_,</span><br><span class="line">              described below.</span><br><span class="line"></span><br><span class="line">       _N_GNU_nonoption_argv_flags_</span><br><span class="line">              (Here  N is grep&apos;s numeric process ID.)  If the ith character of</span><br><span class="line">              this environment variable&apos;s value is 1, do not consider the  ith</span><br><span class="line">              operand  of  grep to be an option, even if it appears to be one.</span><br><span class="line">              A shell can put  this  variable  in  the  environment  for  each</span><br><span class="line">              command  it  runs,  specifying which operands are the results of</span><br><span class="line">              file name wildcard expansion and therefore should not be treated</span><br><span class="line">              as  options.   This  behavior  is  available only with the GNU C</span><br><span class="line">              library, and only when POSIXLY_CORRECT is not set.</span><br><span class="line"></span><br><span class="line">EXIT STATUS</span><br><span class="line">       Normally the exit status is 0 if a line is selected, 1 if no lines were</span><br><span class="line">       selected, and 2 if an error occurred.  However, if the -q or --quiet or</span><br><span class="line">       --silent is used and a line is selected, the exit status is 0  even  if</span><br><span class="line">       an error occurred.</span><br><span class="line"></span><br><span class="line">COPYRIGHT</span><br><span class="line">       Copyright 1998-2000, 2002, 2005-2016 Free Software Foundation, Inc.</span><br><span class="line"></span><br><span class="line">       This is free software; see the source for copying conditions.  There is</span><br><span class="line">       NO warranty; not even for MERCHANTABILITY or FITNESS FOR  A  PARTICULAR</span><br><span class="line">       PURPOSE.</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">   Reporting Bugs</span><br><span class="line">       Email bug reports to the bug-reporting address ⟨bug-grep@gnu.org⟩.  An</span><br><span class="line">       email archive ⟨http://lists.gnu.org/mailman/listinfo/bug-grep⟩ and a</span><br><span class="line">       bug tracker ⟨http://debbugs.gnu.org/cgi/pkgreport.cgi?package=grep⟩ are</span><br><span class="line">       available.</span><br><span class="line"></span><br><span class="line">   Known Bugs</span><br><span class="line">       Large repetition counts in the &#123;n,m&#125; construct may cause  grep  to  use</span><br><span class="line">       lots of memory.  In addition, certain other obscure regular expressions</span><br><span class="line">       require exponential time and space, and may cause grep to  run  out  of</span><br><span class="line">       memory.</span><br><span class="line"></span><br><span class="line">       Back-references are very slow, and may require exponential time.</span><br><span class="line"></span><br><span class="line">SEE ALSO</span><br><span class="line">   Regular Manual Pages</span><br><span class="line">       awk(1),  cmp(1),  diff(1),  find(1), gzip(1), perl(1), sed(1), sort(1),</span><br><span class="line">       xargs(1), zgrep(1), read(2),  pcre(3),  pcresyntax(3),  pcrepattern(3),</span><br><span class="line">       terminfo(5), glob(7), regex(7).</span><br><span class="line"></span><br><span class="line">   POSIX Programmer&apos;s Manual Page</span><br><span class="line">       grep(1p).</span><br><span class="line"></span><br><span class="line">   Full Documentation</span><br><span class="line">       A   complete   manual   ⟨http://www.gnu.org/software/grep/manual/⟩   is</span><br><span class="line">       available.  If the info and grep programs  are  properly  installed  at</span><br><span class="line">       your site, the command</span><br><span class="line"></span><br><span class="line">              info grep</span><br><span class="line"></span><br><span class="line">       should give you access to the complete manual.</span><br><span class="line"></span><br><span class="line">NOTES</span><br><span class="line">       This  man  page  is maintained only fitfully; the full documentation is</span><br><span class="line">       often more up-to-date.</span><br><span class="line"></span><br><span class="line">User Commands                    GNU grep 2.25                         GREP(1)</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br></pre></td><td class="code"><pre><span class="line">GAWK(1)                        Utility Commands                        GAWK(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       gawk - pattern scanning and processing language</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       gawk [ POSIX or GNU style options ] -f program-file [ -- ] file ...</span><br><span class="line">       gawk [ POSIX or GNU style options ] [ -- ] program-text file ...</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Gawk  is  the  GNU Project&apos;s implementation of the AWK programming lan‐</span><br><span class="line">       guage.  It conforms to the definition of  the  language  in  the  POSIX</span><br><span class="line">       1003.1  Standard.   This version in turn is based on the description in</span><br><span class="line">       The AWK Programming Language, by Aho, Kernighan, and Weinberger.   Gawk</span><br><span class="line">       provides  the additional features found in the current version of Brian</span><br><span class="line">       Kernighan&apos;s awk and a number of GNU-specific extensions.</span><br><span class="line"></span><br><span class="line">       The command line consists of options to gawk itself,  the  AWK  program</span><br><span class="line">       text  (if  not supplied via the -f or --file options), and values to be</span><br><span class="line">       made available in the ARGC and ARGV pre-defined AWK variables.</span><br><span class="line"></span><br><span class="line">       When gawk is invoked with the --profile  option,  it  starts  gathering</span><br><span class="line">       profiling statistics from the execution of the program.  Gawk runs more</span><br><span class="line">       slowly in this mode, and automatically produces an execution profile in</span><br><span class="line">       the file awkprof.out when done.  See the --profile option, below.</span><br><span class="line"></span><br><span class="line">       Gawk  also has an integrated debugger. An interactive debugging session</span><br><span class="line">       can be started by supplying the --debug option to the command line.  In</span><br><span class="line">       this mode of execution, gawk loads the AWK source code and then prompts</span><br><span class="line">       for debugging commands.  Gawk can only debug AWK  program  source  pro‐</span><br><span class="line">       vided  with  the -f option.  The debugger is documented in GAWK: Effec‐</span><br><span class="line">       tive AWK Programming.</span><br><span class="line"></span><br><span class="line">OPTION FORMAT</span><br><span class="line">       Gawk options may be either traditional POSIX-style one letter  options,</span><br><span class="line">       or  GNU-style  long  options.   POSIX  options start with a single “-”,</span><br><span class="line">       while long options start with “--”.  Long options are provided for both</span><br><span class="line">       GNU-specific features and for POSIX-mandated features.</span><br><span class="line"></span><br><span class="line">       Gawk-specific  options  are  typically used in long-option form.  Argu‐</span><br><span class="line">       ments to long options are either joined with the option by an  =  sign,</span><br><span class="line">       with no intervening spaces, or they may be provided in the next command</span><br><span class="line">       line argument.  Long options may be abbreviated, as long as the  abbre‐</span><br><span class="line">       viation remains unique.</span><br><span class="line"></span><br><span class="line">       Additionally,  every  long  option has a corresponding short option, so</span><br><span class="line">       that the option&apos;s functionality may be used from within #!   executable</span><br><span class="line">       scripts.</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">       Gawk accepts the following options.  Standard options are listed first,</span><br><span class="line">       followed by options for gawk extensions, listed alphabetically by short</span><br><span class="line">       option.</span><br><span class="line"></span><br><span class="line">       -f program-file</span><br><span class="line">       --file program-file</span><br><span class="line">              Read  the AWK program source from the file program-file, instead</span><br><span class="line">              of from the  first  command  line  argument.   Multiple  -f  (or</span><br><span class="line">              --file) options may be used.</span><br><span class="line"></span><br><span class="line">       -F fs</span><br><span class="line">       --field-separator fs</span><br><span class="line">              Use fs for the input field separator (the value of the FS prede‐</span><br><span class="line">              fined variable).</span><br><span class="line"></span><br><span class="line">       -v var=val</span><br><span class="line">       --assign var=val</span><br><span class="line">              Assign the value val to the variable var,  before  execution  of</span><br><span class="line">              the  program  begins.  Such variable values are available to the</span><br><span class="line">              BEGIN rule of an AWK program.</span><br><span class="line"></span><br><span class="line">       -b</span><br><span class="line">       --characters-as-bytes</span><br><span class="line">              Treat all input data as single-byte characters. In other  words,</span><br><span class="line">              don&apos;t  pay any attention to the locale information when attempt‐</span><br><span class="line">              ing to process strings as  multibyte  characters.   The  --posix</span><br><span class="line">              option overrides this one.</span><br><span class="line"></span><br><span class="line">       -c</span><br><span class="line">       --traditional</span><br><span class="line">              Run  in compatibility mode.  In compatibility mode, gawk behaves</span><br><span class="line">              identically to Brian Kernighan&apos;s awk; none of  the  GNU-specific</span><br><span class="line">              extensions  are recognized.  See GNU EXTENSIONS, below, for more</span><br><span class="line">              information.</span><br><span class="line"></span><br><span class="line">       -C</span><br><span class="line">       --copyright</span><br><span class="line">              Print the short version of the GNU copyright information message</span><br><span class="line">              on the standard output and exit successfully.</span><br><span class="line"></span><br><span class="line">       -d[file]</span><br><span class="line">       --dump-variables[=file]</span><br><span class="line">              Print  a  sorted list of global variables, their types and final</span><br><span class="line">              values to file.  If no file is provided, gawk uses a file  named</span><br><span class="line">              awkvars.out in the current directory.</span><br><span class="line">              Having  a list of all the global variables is a good way to look</span><br><span class="line">              for typographical errors in your programs.  You would  also  use</span><br><span class="line">              this option if you have a large program with a lot of functions,</span><br><span class="line">              and you want to be sure that your functions don&apos;t  inadvertently</span><br><span class="line">              use  global  variables  that  you meant to be local.  (This is a</span><br><span class="line">              particularly easy mistake to make  with  simple  variable  names</span><br><span class="line">              like i, j, and so on.)</span><br><span class="line"></span><br><span class="line">       -D[file]</span><br><span class="line">       --debug[=file]</span><br><span class="line">              Enable  debugging  of  AWK  programs.   By default, the debugger</span><br><span class="line">              reads commands interactively from the keyboard (standard input).</span><br><span class="line">              The  optional file argument specifies a file with a list of com‐</span><br><span class="line">              mands for the debugger to execute non-interactively.</span><br><span class="line"></span><br><span class="line">       -e program-text</span><br><span class="line">       --source program-text</span><br><span class="line">              Use program-text as AWK program source code.  This option allows</span><br><span class="line">              the  easy  intermixing of library functions (used via the -f and</span><br><span class="line">              --file options) with source code entered on  the  command  line.</span><br><span class="line">              It  is  intended primarily for medium to large AWK programs used</span><br><span class="line">              in shell scripts.</span><br><span class="line"></span><br><span class="line">       -E file</span><br><span class="line">       --exec file</span><br><span class="line">              Similar to -f, however, this is option  is  the  last  one  pro‐</span><br><span class="line">              cessed.   This should be used with #!  scripts, particularly for</span><br><span class="line">              CGI applications, to avoid passing in options or source code (!)</span><br><span class="line">              on  the  command line from a URL.  This option disables command-</span><br><span class="line">              line variable assignments.</span><br><span class="line"></span><br><span class="line">       -g</span><br><span class="line">       --gen-pot</span><br><span class="line">              Scan and parse the AWK program, and generate a GNU .pot  (Porta‐</span><br><span class="line">              ble Object Template) format file on standard output with entries</span><br><span class="line">              for all localizable strings in the program.  The program  itself</span><br><span class="line">              is  not  executed.   See  the  GNU gettext distribution for more</span><br><span class="line">              information on .pot files.</span><br><span class="line"></span><br><span class="line">       -h</span><br><span class="line">       --help Print a relatively short summary of the available options on the</span><br><span class="line">              standard  output.   (Per the GNU Coding Standards, these options</span><br><span class="line">              cause an immediate, successful exit.)</span><br><span class="line"></span><br><span class="line">       -i include-file</span><br><span class="line">       --include include-file</span><br><span class="line">              Load an awk source library.  This searches for the library using</span><br><span class="line">              the  AWKPATH environment variable.  If the initial search fails,</span><br><span class="line">              another attempt will be made after appending  the  .awk  suffix.</span><br><span class="line">              The  file  will be loaded only once (i.e., duplicates are elimi‐</span><br><span class="line">              nated), and the  code  does  not  constitute  the  main  program</span><br><span class="line">              source.</span><br><span class="line"></span><br><span class="line">       -l lib</span><br><span class="line">       --load lib</span><br><span class="line">              Load  a shared library lib.  This searches for the library using</span><br><span class="line">              the AWKLIBPATH environment  variable.   If  the  initial  search</span><br><span class="line">              fails,  another attempt will be made after appending the default</span><br><span class="line">              shared library suffix for the platform.  The library initializa‐</span><br><span class="line">              tion routine is expected to be named dl_load().</span><br><span class="line"></span><br><span class="line">       -L [value]</span><br><span class="line">       --lint[=value]</span><br><span class="line">              Provide warnings about constructs that are dubious or non-porta‐</span><br><span class="line">              ble to other AWK implementations.  With an optional argument  of</span><br><span class="line">              fatal,  lint warnings become fatal errors.  This may be drastic,</span><br><span class="line">              but its use will certainly encourage the development of  cleaner</span><br><span class="line">              AWK  programs.  With an optional argument of invalid, only warn‐</span><br><span class="line">              ings about things that are actually invalid are issued. (This is</span><br><span class="line">              not fully implemented yet.)</span><br><span class="line"></span><br><span class="line">       -M</span><br><span class="line">       --bignum</span><br><span class="line">              Force arbitrary precision arithmetic on numbers. This option has</span><br><span class="line">              no effect if gawk is not compiled to use the  GNU  MPFR  and  MP</span><br><span class="line">              libraries.</span><br><span class="line"></span><br><span class="line">       -n</span><br><span class="line">       --non-decimal-data</span><br><span class="line">              Recognize  octal and hexadecimal values in input data.  Use this</span><br><span class="line">              option with great caution!</span><br><span class="line"></span><br><span class="line">       -N</span><br><span class="line">       --use-lc-numeric</span><br><span class="line">              This forces gawk to use the  locale&apos;s  decimal  point  character</span><br><span class="line">              when  parsing  input data.  Although the POSIX standard requires</span><br><span class="line">              this behavior, and gawk does so when --posix is in  effect,  the</span><br><span class="line">              default  is  to  follow traditional behavior and use a period as</span><br><span class="line">              the decimal point, even in locales where the period is  not  the</span><br><span class="line">              decimal  point  character.   This  option  overrides the default</span><br><span class="line">              behavior, without the full draconian strictness of  the  --posix</span><br><span class="line">              option.</span><br><span class="line"></span><br><span class="line">       -o[file]</span><br><span class="line">       --pretty-print[=file]</span><br><span class="line">              Output  a  pretty printed version of the program to file.  If no</span><br><span class="line">              file is provided, gawk uses a file named awkprof.out in the cur‐</span><br><span class="line">              rent directory.</span><br><span class="line"></span><br><span class="line">       -O</span><br><span class="line">       --optimize</span><br><span class="line">              Enable  optimizations  upon  the  internal representation of the</span><br><span class="line">              program.  Currently, this includes simple constant-folding,  and</span><br><span class="line">              tail  call  elimination  for recursive functions. The gawk main‐</span><br><span class="line">              tainer hopes to add additional optimizations over time.</span><br><span class="line"></span><br><span class="line">       -p[prof-file]</span><br><span class="line">       --profile[=prof-file]</span><br><span class="line">              Start a profiling session, and send the profiling data to  prof-</span><br><span class="line">              file.   The default is awkprof.out.  The profile contains execu‐</span><br><span class="line">              tion counts of each statement in the program in the left  margin</span><br><span class="line">              and function call counts for each user-defined function.</span><br><span class="line"></span><br><span class="line">       -P</span><br><span class="line">       --posix</span><br><span class="line">              This  turns on compatibility mode, with the following additional</span><br><span class="line">              restrictions:</span><br><span class="line"></span><br><span class="line">              · \x escape sequences are not recognized.</span><br><span class="line"></span><br><span class="line">              · Only space and tab act as field separators when FS is set to a</span><br><span class="line">                single space, newline does not.</span><br><span class="line"></span><br><span class="line">              · You cannot continue lines after ?  and :.</span><br><span class="line"></span><br><span class="line">              · The synonym func for the keyword function is not recognized.</span><br><span class="line"></span><br><span class="line">              · The operators ** and **= cannot be used in place of ^ and ^=.</span><br><span class="line"></span><br><span class="line">       -r</span><br><span class="line">       --re-interval</span><br><span class="line">              Enable  the  use  of  interval expressions in regular expression</span><br><span class="line">              matching (see Regular Expressions, below).  Interval expressions</span><br><span class="line">              were not traditionally available in the AWK language.  The POSIX</span><br><span class="line">              standard added them, to make awk and egrep consistent with  each</span><br><span class="line">              other.  They are enabled by default, but this option remains for</span><br><span class="line">              use with --traditional.</span><br><span class="line"></span><br><span class="line">       -S</span><br><span class="line">       --sandbox</span><br><span class="line">              Runs gawk in sandbox  mode,  disabling  the  system()  function,</span><br><span class="line">              input  redirection  with  getline, output redirection with print</span><br><span class="line">              and printf, and loading dynamic extensions.   Command  execution</span><br><span class="line">              (through pipelines) is also disabled.  This effectively blocks a</span><br><span class="line">              script from accessing local  resources  (except  for  the  files</span><br><span class="line">              specified on the command line).</span><br><span class="line"></span><br><span class="line">       -t</span><br><span class="line">       --lint-old</span><br><span class="line">              Provide  warnings  about constructs that are not portable to the</span><br><span class="line">              original version of UNIX awk.</span><br><span class="line"></span><br><span class="line">       -V</span><br><span class="line">       --version</span><br><span class="line">              Print version information for this particular copy  of  gawk  on</span><br><span class="line">              the  standard  output.  This is useful mainly for knowing if the</span><br><span class="line">              current copy of gawk on your system is up to date  with  respect</span><br><span class="line">              to  whatever the Free Software Foundation is distributing.  This</span><br><span class="line">              is also useful when reporting bugs.  (Per the GNU  Coding  Stan‐</span><br><span class="line">              dards, these options cause an immediate, successful exit.)</span><br><span class="line"></span><br><span class="line">       --     Signal the end of options. This is useful to allow further argu‐</span><br><span class="line">              ments to the AWK program itself to start with a “-”.  This  pro‐</span><br><span class="line">              vides  consistency  with the argument parsing convention used by</span><br><span class="line">              most other POSIX programs.</span><br><span class="line"></span><br><span class="line">       In compatibility mode, any other options are flagged  as  invalid,  but</span><br><span class="line">       are  otherwise  ignored.   In normal operation, as long as program text</span><br><span class="line">       has been supplied, unknown options are passed on to the AWK program  in</span><br><span class="line">       the ARGV array for processing.  This is particularly useful for running</span><br><span class="line">       AWK programs via the “#!” executable interpreter mechanism.</span><br><span class="line"></span><br><span class="line">       For POSIX compatibility, the -W option may be  used,  followed  by  the</span><br><span class="line">       name of a long option.</span><br><span class="line"></span><br><span class="line">AWK PROGRAM EXECUTION</span><br><span class="line">       An  AWK program consists of a sequence of pattern-action statements and</span><br><span class="line">       optional function definitions.</span><br><span class="line"></span><br><span class="line">              @include &quot;filename&quot;</span><br><span class="line">              @load &quot;filename&quot;</span><br><span class="line">              pattern   &#123; action statements &#125;</span><br><span class="line">              function name(parameter list) &#123; statements &#125;</span><br><span class="line"></span><br><span class="line">       Gawk first reads the program source from the program-file(s) if  speci‐</span><br><span class="line">       fied, from arguments to --source, or from the first non-option argument</span><br><span class="line">       on the command line.  The -f and --source options may be used  multiple</span><br><span class="line">       times  on  the command line.  Gawk reads the program text as if all the</span><br><span class="line">       program-files and command  line  source  texts  had  been  concatenated</span><br><span class="line">       together.   This  is  useful  for  building libraries of AWK functions,</span><br><span class="line">       without having to include them in each new AWK program that uses  them.</span><br><span class="line">       It also provides the ability to mix library functions with command line</span><br><span class="line">       programs.</span><br><span class="line"></span><br><span class="line">       In addition, lines beginning with @include may be used to include other</span><br><span class="line">       source  files  into your program, making library use even easier.  This</span><br><span class="line">       is equivalent to using the -i option.</span><br><span class="line"></span><br><span class="line">       Lines beginning with @load may be used to load  shared  libraries  into</span><br><span class="line">       your program.  This is equivalent to using the -l option.</span><br><span class="line"></span><br><span class="line">       The  environment  variable  AWKPATH specifies a search path to use when</span><br><span class="line">       finding source files named with the -f and -i options.  If  this  vari‐</span><br><span class="line">       able  does  not  exist,  the  default path is &quot;.:/usr/local/share/awk&quot;.</span><br><span class="line">       (The actual directory may vary, depending upon how gawk was  built  and</span><br><span class="line">       installed.)  If a file name given to the -f option contains a “/” char‐</span><br><span class="line">       acter, no path search is performed.</span><br><span class="line"></span><br><span class="line">       The environment variable AWKLIBPATH specifies a search path to use when</span><br><span class="line">       finding  source  files named with the -l option.  If this variable does</span><br><span class="line">       not exist, the default  path  is  &quot;/usr/local/lib/gawk&quot;.   (The  actual</span><br><span class="line">       directory may vary, depending upon how gawk was built and installed.)</span><br><span class="line"></span><br><span class="line">       Gawk executes AWK programs in the following order.  First, all variable</span><br><span class="line">       assignments specified via the -v option are performed.  Next, gawk com‐</span><br><span class="line">       piles  the program into an internal form.  Then, gawk executes the code</span><br><span class="line">       in the BEGIN rule(s) (if any), and then  proceeds  to  read  each  file</span><br><span class="line">       named  in  the  ARGV  array  (up to ARGV[ARGC]).  If there are no files</span><br><span class="line">       named on the command line, gawk reads the standard input.</span><br><span class="line"></span><br><span class="line">       If a filename on the command line has the form var=val it is treated as</span><br><span class="line">       a  variable  assignment.   The  variable var will be assigned the value</span><br><span class="line">       val.  (This happens after any BEGIN rule(s) have  been  run.)   Command</span><br><span class="line">       line  variable assignment is most useful for dynamically assigning val‐</span><br><span class="line">       ues to the variables AWK uses to  control  how  input  is  broken  into</span><br><span class="line">       fields  and records.  It is also useful for controlling state if multi‐</span><br><span class="line">       ple passes are needed over a single data file.</span><br><span class="line"></span><br><span class="line">       If the value of a particular element of ARGV is empty (&quot;&quot;), gawk  skips</span><br><span class="line">       over it.</span><br><span class="line"></span><br><span class="line">       For  each  input  file,  if  a BEGINFILE rule exists, gawk executes the</span><br><span class="line">       associated code before processing the contents of the file.  Similarly,</span><br><span class="line">       gawk  executes  the  code  associated with ENDFILE after processing the</span><br><span class="line">       file.</span><br><span class="line"></span><br><span class="line">       For each record in the input, gawk tests to see if it matches any  pat‐</span><br><span class="line">       tern  in  the  AWK  program.  For each pattern that the record matches,</span><br><span class="line">       gawk executes the associated action.  The patterns are  tested  in  the</span><br><span class="line">       order they occur in the program.</span><br><span class="line"></span><br><span class="line">       Finally,  after  all  the input is exhausted, gawk executes the code in</span><br><span class="line">       the END rule(s) (if any).</span><br><span class="line"></span><br><span class="line">   Command Line Directories</span><br><span class="line">       According to POSIX, files named on the awk command line  must  be  text</span><br><span class="line">       files.   The  behavior is ``undefined&apos;&apos; if they are not.  Most versions</span><br><span class="line">       of awk treat a directory on the command line as a fatal error.</span><br><span class="line"></span><br><span class="line">       Starting with version 4.0 of gawk, a directory on the command line pro‐</span><br><span class="line">       duces a warning, but is otherwise skipped.  If either of the --posix or</span><br><span class="line">       --traditional options is given, then gawk reverts to treating  directo‐</span><br><span class="line">       ries on the command line as a fatal error.</span><br><span class="line"></span><br><span class="line">VARIABLES, RECORDS AND FIELDS</span><br><span class="line">       AWK variables are dynamic; they come into existence when they are first</span><br><span class="line">       used.  Their values are either floating-point numbers  or  strings,  or</span><br><span class="line">       both,  depending  upon how they are used.  AWK also has one dimensional</span><br><span class="line">       arrays; arrays with multiple dimensions may be  simulated.   Gawk  pro‐</span><br><span class="line">       vides  true  arrays  of arrays; see Arrays, below.  Several pre-defined</span><br><span class="line">       variables are set as a program runs; these are described as needed  and</span><br><span class="line">       summarized below.</span><br><span class="line"></span><br><span class="line">   Records</span><br><span class="line">       Normally, records are separated by newline characters.  You can control</span><br><span class="line">       how records are separated by assigning values to the built-in  variable</span><br><span class="line">       RS.   If  RS is any single character, that character separates records.</span><br><span class="line">       Otherwise, RS is a regular expression.  Text in the input that  matches</span><br><span class="line">       this  regular expression separates the record.  However, in compatibil‐</span><br><span class="line">       ity mode, only the first character of its string value is used for sep‐</span><br><span class="line">       arating  records.   If  RS  is set to the null string, then records are</span><br><span class="line">       separated by blank lines.  When RS is set to the null string, the  new‐</span><br><span class="line">       line  character  always acts as a field separator, in addition to what‐</span><br><span class="line">       ever value FS may have.</span><br><span class="line"></span><br><span class="line">   Fields</span><br><span class="line">       As each input record is read, gawk splits the record into fields, using</span><br><span class="line">       the value of the FS variable as the field separator.  If FS is a single</span><br><span class="line">       character, fields are separated by that character.  If FS is  the  null</span><br><span class="line">       string,  then each individual character becomes a separate field.  Oth‐</span><br><span class="line">       erwise, FS is expected to be a full regular expression.  In the special</span><br><span class="line">       case  that FS is a single space, fields are separated by runs of spaces</span><br><span class="line">       and/or tabs and/or newlines.  (But see the section POSIX COMPATIBILITY,</span><br><span class="line">       below).   NOTE:  The  value  of IGNORECASE (see below) also affects how</span><br><span class="line">       fields are split when FS is a regular expression, and how  records  are</span><br><span class="line">       separated when RS is a regular expression.</span><br><span class="line"></span><br><span class="line">       If  the  FIELDWIDTHS  variable is set to a space separated list of num‐</span><br><span class="line">       bers, each field is expected to have fixed width, and  gawk  splits  up</span><br><span class="line">       the  record  using  the  specified widths.  The value of FS is ignored.</span><br><span class="line">       Assigning a new value to FS or FPAT overrides the use of FIELDWIDTHS.</span><br><span class="line"></span><br><span class="line">       Similarly, if the FPAT variable is set to a string representing a regu‐</span><br><span class="line">       lar expression, each field is made up of text that matches that regular</span><br><span class="line">       expression. In this case, the regular expression describes  the  fields</span><br><span class="line">       themselves, instead of the text that separates the fields.  Assigning a</span><br><span class="line">       new value to FS or FIELDWIDTHS overrides the use of FPAT.</span><br><span class="line"></span><br><span class="line">       Each field in the input record may be referenced by its  position:  $1,</span><br><span class="line">       $2,  and so on.  $0 is the whole record.  Fields need not be referenced</span><br><span class="line">       by constants:</span><br><span class="line"></span><br><span class="line">              n = 5</span><br><span class="line">              print $n</span><br><span class="line"></span><br><span class="line">       prints the fifth field in the input record.</span><br><span class="line"></span><br><span class="line">       The variable NF is set to the total  number  of  fields  in  the  input</span><br><span class="line">       record.</span><br><span class="line"></span><br><span class="line">       References  to non-existent fields (i.e., fields after $NF) produce the</span><br><span class="line">       null-string.  However, assigning to a non-existent field (e.g., $(NF+2)</span><br><span class="line">       = 5) increases the value of NF, creates any intervening fields with the</span><br><span class="line">       null string as their values, and causes the value of $0  to  be  recom‐</span><br><span class="line">       puted, with the fields being separated by the value of OFS.  References</span><br><span class="line">       to negative numbered fields  cause  a  fatal  error.   Decrementing  NF</span><br><span class="line">       causes  the  values  of  fields  past the new value to be lost, and the</span><br><span class="line">       value of $0 to be recomputed, with the fields being  separated  by  the</span><br><span class="line">       value of OFS.</span><br><span class="line"></span><br><span class="line">       Assigning  a  value  to an existing field causes the whole record to be</span><br><span class="line">       rebuilt when $0 is referenced.  Similarly,  assigning  a  value  to  $0</span><br><span class="line">       causes the record to be resplit, creating new values for the fields.</span><br><span class="line"></span><br><span class="line">   Built-in Variables</span><br><span class="line">       Gawk&apos;s built-in variables are:</span><br><span class="line"></span><br><span class="line">       ARGC        The  number  of  command  line  arguments (does not include</span><br><span class="line">                   options to gawk, or the program source).</span><br><span class="line"></span><br><span class="line">       ARGIND      The index in ARGV of the current file being processed.</span><br><span class="line"></span><br><span class="line">       ARGV        Array of command line arguments.  The array is indexed from</span><br><span class="line">                   0  to  ARGC - 1.  Dynamically changing the contents of ARGV</span><br><span class="line">                   can control the files used for data.</span><br><span class="line"></span><br><span class="line">       BINMODE     On non-POSIX systems, specifies use of  “binary”  mode  for</span><br><span class="line">                   all  file  I/O.  Numeric values of 1, 2, or 3, specify that</span><br><span class="line">                   input files, output  files,  or  all  files,  respectively,</span><br><span class="line">                   should  use binary I/O.  String values of &quot;r&quot;, or &quot;w&quot; spec‐</span><br><span class="line">                   ify that input files, or output files, respectively, should</span><br><span class="line">                   use binary I/O.  String values of &quot;rw&quot; or &quot;wr&quot; specify that</span><br><span class="line">                   all files should use binary I/O.  Any other string value is</span><br><span class="line">                   treated as &quot;rw&quot;, but generates a warning message.</span><br><span class="line"></span><br><span class="line">       CONVFMT     The conversion format for numbers, &quot;%.6g&quot;, by default.</span><br><span class="line"></span><br><span class="line">       ENVIRON     An  array containing the values of the current environment.</span><br><span class="line">                   The array is indexed by  the  environment  variables,  each</span><br><span class="line">                   element  being  the  value  of  that  variable (e.g., ENVI‐</span><br><span class="line">                   RON[&quot;HOME&quot;] might be &quot;/home/arnold&quot;).  Changing this  array</span><br><span class="line">                   does not affect the environment seen by programs which gawk</span><br><span class="line">                   spawns via redirection or the system() function.</span><br><span class="line"></span><br><span class="line">       ERRNO       If a system error occurs either  doing  a  redirection  for</span><br><span class="line">                   getline,  during  a  read for getline, or during a close(),</span><br><span class="line">                   then ERRNO will contain a string describing the error.  The</span><br><span class="line">                   value is subject to translation in non-English locales.</span><br><span class="line"></span><br><span class="line">       FIELDWIDTHS A  whitespace  separated  list  of field widths.  When set,</span><br><span class="line">                   gawk parses the input into fields of fixed  width,  instead</span><br><span class="line">                   of  using the value of the FS variable as the field separa‐</span><br><span class="line">                   tor.  See Fields, above.</span><br><span class="line"></span><br><span class="line">       FILENAME    The name of the current input file.  If no files are speci‐</span><br><span class="line">                   fied  on  the  command  line, the value of FILENAME is “-”.</span><br><span class="line">                   However,  FILENAME  is  undefined  inside  the  BEGIN  rule</span><br><span class="line">                   (unless set by getline).</span><br><span class="line"></span><br><span class="line">       FNR         The input record number in the current input file.</span><br><span class="line"></span><br><span class="line">       FPAT        A  regular expression describing the contents of the fields</span><br><span class="line">                   in a record.  When set, gawk parses the input into  fields,</span><br><span class="line">                   where  the  fields match the regular expression, instead of</span><br><span class="line">                   using the value of the FS variable as the field  separator.</span><br><span class="line">                   See Fields, above.</span><br><span class="line"></span><br><span class="line">       FS          The input field separator, a space by default.  See Fields,</span><br><span class="line">                   above.</span><br><span class="line"></span><br><span class="line">       FUNCTAB     An array whose indices and  corresponding  values  are  the</span><br><span class="line">                   names of all the user-defined or extension functions in the</span><br><span class="line">                   program.  NOTE: You may not use the delete  statement  with</span><br><span class="line">                   the FUNCTAB array.</span><br><span class="line"></span><br><span class="line">       IGNORECASE  Controls the case-sensitivity of all regular expression and</span><br><span class="line">                   string operations.  If IGNORECASE  has  a  non-zero  value,</span><br><span class="line">                   then  string  comparisons  and  pattern  matching in rules,</span><br><span class="line">                   field splitting with FS and FPAT,  record  separating  with</span><br><span class="line">                   RS, regular expression matching with ~ and !~, and the gen‐</span><br><span class="line">                   sub(), gsub(), index(), match(), patsplit(),  split(),  and</span><br><span class="line">                   sub() built-in functions all ignore case when doing regular</span><br><span class="line">                   expression operations.  NOTE:  Array  subscripting  is  not</span><br><span class="line">                   affected.   However, the asort() and asorti() functions are</span><br><span class="line">                   affected.</span><br><span class="line">                   Thus, if IGNORECASE is not equal to zero, /aB/ matches  all</span><br><span class="line">                   of the strings &quot;ab&quot;, &quot;aB&quot;, &quot;Ab&quot;, and &quot;AB&quot;.  As with all AWK</span><br><span class="line">                   variables, the initial value of IGNORECASE is zero, so  all</span><br><span class="line">                   regular expression and string operations are normally case-</span><br><span class="line">                   sensitive.</span><br><span class="line"></span><br><span class="line">       LINT        Provides dynamic control of the --lint option  from  within</span><br><span class="line">                   an AWK program.  When true, gawk prints lint warnings. When</span><br><span class="line">                   false,  it  does  not.   When  assigned  the  string  value</span><br><span class="line">                   &quot;fatal&quot;,  lint  warnings  become fatal errors, exactly like</span><br><span class="line">                   --lint=fatal.  Any other true value just prints warnings.</span><br><span class="line"></span><br><span class="line">       NF          The number of fields in the current input record.</span><br><span class="line"></span><br><span class="line">       NR          The total number of input records seen so far.</span><br><span class="line"></span><br><span class="line">       OFMT        The output format for numbers, &quot;%.6g&quot;, by default.</span><br><span class="line"></span><br><span class="line">       OFS         The output field separator, a space by default.</span><br><span class="line"></span><br><span class="line">       ORS         The output record separator, by default a newline.</span><br><span class="line"></span><br><span class="line">       PREC        The working precision of arbitrary precision floating-point</span><br><span class="line">                   numbers, 53 by default.</span><br><span class="line"></span><br><span class="line">       PROCINFO    The  elements  of  this array provide access to information</span><br><span class="line">                   about the running AWK program.  On some systems, there  may</span><br><span class="line">                   be  elements  in  the  array, &quot;group1&quot; through &quot;groupn&quot; for</span><br><span class="line">                   some n, which is the number of  supplementary  groups  that</span><br><span class="line">                   the  process  has.   Use  the in operator to test for these</span><br><span class="line">                   elements.  The following  elements  are  guaranteed  to  be</span><br><span class="line">                   available:</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;egid&quot;]    The  value  of  the  getegid(2)  system</span><br><span class="line">                                       call.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;strftime&quot;]</span><br><span class="line">                                       The  default  time  format  string  for</span><br><span class="line">                                       strftime().</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;euid&quot;]    The  value  of  the  geteuid(2)  system</span><br><span class="line">                                       call.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;FS&quot;]      &quot;FS&quot; if field splitting with FS  is  in</span><br><span class="line">                                       effect,  &quot;FPAT&quot; if field splitting with</span><br><span class="line">                                       FPAT is in effect, or &quot;FIELDWIDTHS&quot;  if</span><br><span class="line">                                       field  splitting with FIELDWIDTHS is in</span><br><span class="line">                                       effect.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;identifiers&quot;]</span><br><span class="line">                                       A subarray, indexed by the names of all</span><br><span class="line">                                       identifiers used in the text of the AWK</span><br><span class="line">                                       program.  The values indicate what gawk</span><br><span class="line">                                       knows  about  the  identifiers after it</span><br><span class="line">                                       has finished parsing the program;  they</span><br><span class="line">                                       are not updated while the program runs.</span><br><span class="line">                                       For each identifier, the value  of  the</span><br><span class="line">                                       element is one of the following:</span><br><span class="line"></span><br><span class="line">                                       &quot;array&quot;</span><br><span class="line">                                              The identifier is an array.</span><br><span class="line"></span><br><span class="line">                                       &quot;builtin&quot;</span><br><span class="line">                                              The  identifier  is  a  built-in</span><br><span class="line">                                              function.</span><br><span class="line"></span><br><span class="line">                                       &quot;extension&quot;</span><br><span class="line">                                              The identifier is  an  extension</span><br><span class="line">                                              function loaded via @load or -l.</span><br><span class="line"></span><br><span class="line">                                       &quot;scalar&quot;</span><br><span class="line">                                              The identifier is a scalar.</span><br><span class="line"></span><br><span class="line">                                       &quot;untyped&quot;</span><br><span class="line">                                              The identifier is untyped (could</span><br><span class="line">                                              be used as a  scalar  or  array,</span><br><span class="line">                                              gawk doesn&apos;t know yet).</span><br><span class="line"></span><br><span class="line">                                       &quot;user&quot; The identifier is a user-defined</span><br><span class="line">                                              function.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;gid&quot;]     The value of the getgid(2) system call.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;pgrpid&quot;]  The process group  ID  of  the  current</span><br><span class="line">                                       process.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;pid&quot;]     The process ID of the current process.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;ppid&quot;]    The  parent  process  ID of the current</span><br><span class="line">                                       process.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;uid&quot;]     The value of the getuid(2) system call.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;sorted_in&quot;]</span><br><span class="line">                                       If this  element  exists  in  PROCINFO,</span><br><span class="line">                                       then  its  value  controls the order in</span><br><span class="line">                                       which array elements are  traversed  in</span><br><span class="line">                                       for   loops.    Supported   values  are</span><br><span class="line">                                       &quot;@ind_str_asc&quot;,         &quot;@ind_num_asc&quot;,</span><br><span class="line">                                       &quot;@val_type_asc&quot;,        &quot;@val_str_asc&quot;,</span><br><span class="line">                                       &quot;@val_num_asc&quot;,        &quot;@ind_str_desc&quot;,</span><br><span class="line">                                       &quot;@ind_num_desc&quot;,      &quot;@val_type_desc&quot;,</span><br><span class="line">                                       &quot;@val_str_desc&quot;,  &quot;@val_num_desc&quot;,  and</span><br><span class="line">                                       &quot;@unsorted&quot;.  The value can also be the</span><br><span class="line">                                       name of any comparison function defined</span><br><span class="line">                                       as follows:</span><br><span class="line"></span><br><span class="line">                                            function cmp_func(i1, v1, i2, v2)</span><br><span class="line"></span><br><span class="line">                                       where i1 and i2 are the indices, and v1</span><br><span class="line">                                       and v2 are the corresponding values  of</span><br><span class="line">                                       the  two  elements  being compared.  It</span><br><span class="line">                                       should return a number less than, equal</span><br><span class="line">                                       to, or greater than 0, depending on how</span><br><span class="line">                                       the elements of the  array  are  to  be</span><br><span class="line">                                       ordered.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;input&quot;, &quot;READ_TIMEOUT&quot;]</span><br><span class="line">                                       The timeout in milliseconds for reading</span><br><span class="line">                                       data from input, where input is a redi‐</span><br><span class="line">                                       rection  string  or a filename. A value</span><br><span class="line">                                       of zero or  less  than  zero  means  no</span><br><span class="line">                                       timeout.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;mpfr_version&quot;]</span><br><span class="line">                                       The  version  of  the  GNU MPFR library</span><br><span class="line">                                       used  for  arbitrary  precision  number</span><br><span class="line">                                       support  in  gawk.   This  entry is not</span><br><span class="line">                                       present if MPFR support is not compiled</span><br><span class="line">                                       into gawk.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;gmp_version&quot;]</span><br><span class="line">                                       The  version of the GNU MP library used</span><br><span class="line">                                       for arbitrary precision number  support</span><br><span class="line">                                       in  gawk.  This entry is not present if</span><br><span class="line">                                       MPFR support is not compiled into gawk.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;prec_max&quot;]</span><br><span class="line">                                       The maximum precision supported by  the</span><br><span class="line">                                       GNU  MPFR  library for arbitrary preci‐</span><br><span class="line">                                       sion  floating-point   numbers.    This</span><br><span class="line">                                       entry is not present if MPFR support is</span><br><span class="line">                                       not compiled into gawk.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;prec_min&quot;]</span><br><span class="line">                                       The minimum precision  allowed  by  the</span><br><span class="line">                                       GNU  MPFR  library for arbitrary preci‐</span><br><span class="line">                                       sion  floating-point   numbers.    This</span><br><span class="line">                                       entry is not present if MPFR support is</span><br><span class="line">                                       not compiled into gawk.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;api_major&quot;]</span><br><span class="line">                                       The major version of the extension API.</span><br><span class="line">                                       This  entry  is  not present if loading</span><br><span class="line">                                       dynamic extensions is not available.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;api_minor&quot;]</span><br><span class="line">                                       The minor version of the extension API.</span><br><span class="line">                                       This  entry  is  not present if loading</span><br><span class="line">                                       dynamic extensions is not available.</span><br><span class="line"></span><br><span class="line">                   PROCINFO[&quot;version&quot;] the version of gawk.</span><br><span class="line"></span><br><span class="line">       ROUNDMODE   The rounding mode to use for arbitrary precision arithmetic</span><br><span class="line">                   on numbers, by default &quot;N&quot; (IEEE-754 roundTiesToEven mode).</span><br><span class="line">                   The accepted values are &quot;N&quot; or &quot;n&quot; for roundTiesToEven, &quot;U&quot;</span><br><span class="line">                   or &quot;u&quot; for roundTowardPositive, &quot;D&quot; or &quot;d&quot; for roundToward‐</span><br><span class="line">                   Negative, &quot;Z&quot; or &quot;z&quot; for roundTowardZero, and if your  ver‐</span><br><span class="line">                   sion  of  GNU  MPFR  library  supports  it,  &quot;A&quot; or &quot;a&quot; for</span><br><span class="line">                   roundTiesToAway.</span><br><span class="line"></span><br><span class="line">       RS          The input record separator, by default a newline.</span><br><span class="line"></span><br><span class="line">       RT          The record terminator.  Gawk sets RT to the input text that</span><br><span class="line">                   matched  the  character  or regular expression specified by</span><br><span class="line">                   RS.</span><br><span class="line"></span><br><span class="line">       RSTART      The index of the first character matched by match();  0  if</span><br><span class="line">                   no  match.   (This  implies that character indices start at</span><br><span class="line">                   one.)</span><br><span class="line"></span><br><span class="line">       RLENGTH     The length of the string  matched  by  match();  -1  if  no</span><br><span class="line">                   match.</span><br><span class="line"></span><br><span class="line">       SUBSEP      The character used to separate multiple subscripts in array</span><br><span class="line">                   elements, by default &quot;\034&quot;.</span><br><span class="line"></span><br><span class="line">       SYMTAB      An array whose indices  are  the  names  of  all  currently</span><br><span class="line">                   defined  global  variables  and arrays in the program.  The</span><br><span class="line">                   array may be used for indirect access to read or write  the</span><br><span class="line">                   value of a variable:</span><br><span class="line"></span><br><span class="line">                        foo = 5</span><br><span class="line">                        SYMTAB[&quot;foo&quot;] = 4</span><br><span class="line">                        print foo    # prints 4</span><br><span class="line"></span><br><span class="line">                   The isarray() function may be used to test if an element in</span><br><span class="line">                   SYMTAB is an array.  You may not use the  delete  statement</span><br><span class="line">                   with the SYMTAB array.</span><br><span class="line"></span><br><span class="line">       TEXTDOMAIN  The text domain of the AWK program; used to find the local‐</span><br><span class="line">                   ized translations for the program&apos;s strings.</span><br><span class="line"></span><br><span class="line">   Arrays</span><br><span class="line">       Arrays are subscripted with an expression between  square  brackets  ([</span><br><span class="line">       and ]).  If the expression is an expression list (expr, expr ...)  then</span><br><span class="line">       the array subscript is a string consisting of the concatenation of  the</span><br><span class="line">       (string) value of each expression, separated by the value of the SUBSEP</span><br><span class="line">       variable.  This facility  is  used  to  simulate  multiply  dimensioned</span><br><span class="line">       arrays.  For example:</span><br><span class="line"></span><br><span class="line">              i = &quot;A&quot;; j = &quot;B&quot;; k = &quot;C&quot;</span><br><span class="line">              x[i, j, k] = &quot;hello, world\n&quot;</span><br><span class="line"></span><br><span class="line">       assigns the string &quot;hello, world\n&quot; to the element of the array x which</span><br><span class="line">       is indexed by the string &quot;A\034B\034C&quot;.  All arrays in AWK are associa‐</span><br><span class="line">       tive, i.e., indexed by string values.</span><br><span class="line"></span><br><span class="line">       The  special  operator  in may be used to test if an array has an index</span><br><span class="line">       consisting of a particular value:</span><br><span class="line"></span><br><span class="line">              if (val in array)</span><br><span class="line">                   print array[val]</span><br><span class="line"></span><br><span class="line">       If the array has multiple subscripts, use (i, j) in array.</span><br><span class="line"></span><br><span class="line">       The in construct may also be used in a for loop to iterate over all the</span><br><span class="line">       elements  of  an  array.   However,  the (i, j) in array construct only</span><br><span class="line">       works in tests, not in for loops.</span><br><span class="line"></span><br><span class="line">       An element may be deleted from an array  using  the  delete  statement.</span><br><span class="line">       The  delete statement may also be used to delete the entire contents of</span><br><span class="line">       an array, just by specifying the array name without a subscript.</span><br><span class="line"></span><br><span class="line">       gawk supports true multidimensional arrays. It does  not  require  that</span><br><span class="line">       such arrays be ``rectangular&apos;&apos; as in C or C++.  For example:</span><br><span class="line"></span><br><span class="line">              a[1] = 5</span><br><span class="line">              a[2][1] = 6</span><br><span class="line">              a[2][2] = 7</span><br><span class="line"></span><br><span class="line">       NOTE:  You may need to tell gawk that an array element is really a sub‐</span><br><span class="line">       array in order to use it where gawk expects an array (such  as  in  the</span><br><span class="line">       second argument to split()).  You can do this by creating an element in</span><br><span class="line">       the subarray and then deleting it with the delete statement.</span><br><span class="line"></span><br><span class="line">   Variable Typing And Conversion</span><br><span class="line">       Variables and fields may be (floating point) numbers,  or  strings,  or</span><br><span class="line">       both.  How the value of a variable is interpreted depends upon its con‐</span><br><span class="line">       text.  If used in a numeric expression, it will be treated as a number;</span><br><span class="line">       if used as a string it will be treated as a string.</span><br><span class="line"></span><br><span class="line">       To force a variable to be treated as a number, add 0 to it; to force it</span><br><span class="line">       to be treated as a string, concatenate it with the null string.</span><br><span class="line"></span><br><span class="line">       Uninitialized variables have the numeric value 0 and the  string  value</span><br><span class="line">       &quot;&quot; (the null, or empty, string).</span><br><span class="line"></span><br><span class="line">       When  a  string must be converted to a number, the conversion is accom‐</span><br><span class="line">       plished using strtod(3).  A number is converted to a  string  by  using</span><br><span class="line">       the  value  of  CONVFMT  as  a  format  string for sprintf(3), with the</span><br><span class="line">       numeric value of the variable as the argument.   However,  even  though</span><br><span class="line">       all  numbers in AWK are floating-point, integral values are always con‐</span><br><span class="line">       verted as integers.  Thus, given</span><br><span class="line"></span><br><span class="line">              CONVFMT = &quot;%2.2f&quot;</span><br><span class="line">              a = 12</span><br><span class="line">              b = a &quot;&quot;</span><br><span class="line"></span><br><span class="line">       the variable b has a string value of &quot;12&quot; and not &quot;12.00&quot;.</span><br><span class="line"></span><br><span class="line">       NOTE: When operating in POSIX mode (such as with the  --posix  option),</span><br><span class="line">       beware  that locale settings may interfere with the way decimal numbers</span><br><span class="line">       are treated: the decimal separator of the numbers you  are  feeding  to</span><br><span class="line">       gawk  must  conform to what your locale would expect, be it a comma (,)</span><br><span class="line">       or a period (.).</span><br><span class="line"></span><br><span class="line">       Gawk performs comparisons as follows: If  two  variables  are  numeric,</span><br><span class="line">       they  are  compared numerically.  If one value is numeric and the other</span><br><span class="line">       has a string value that is a “numeric  string,”  then  comparisons  are</span><br><span class="line">       also  done numerically.  Otherwise, the numeric value is converted to a</span><br><span class="line">       string and a string comparison is performed.  Two strings are compared,</span><br><span class="line">       of course, as strings.</span><br><span class="line"></span><br><span class="line">       Note that string constants, such as &quot;57&quot;, are not numeric strings, they</span><br><span class="line">       are string constants.  The idea of “numeric  string”  only  applies  to</span><br><span class="line">       fields,  getline  input,  FILENAME, ARGV elements, ENVIRON elements and</span><br><span class="line">       the elements of an array created by  split()  or  patsplit()  that  are</span><br><span class="line">       numeric  strings.   The  basic  idea  is that user input, and only user</span><br><span class="line">       input, that looks numeric, should be treated that way.</span><br><span class="line"></span><br><span class="line">   Octal and Hexadecimal Constants</span><br><span class="line">       You may use C-style octal and hexadecimal constants in your AWK program</span><br><span class="line">       source  code.   For example, the octal value 011 is equal to decimal 9,</span><br><span class="line">       and the hexadecimal value 0x11 is equal to decimal 17.</span><br><span class="line"></span><br><span class="line">   String Constants</span><br><span class="line">       String constants in AWK are sequences of  characters  enclosed  between</span><br><span class="line">       double quotes (like &quot;value&quot;).  Within strings, certain escape sequences</span><br><span class="line">       are recognized, as in C.  These are:</span><br><span class="line"></span><br><span class="line">       \\   A literal backslash.</span><br><span class="line"></span><br><span class="line">       \a   The “alert” character; usually the ASCII BEL character.</span><br><span class="line"></span><br><span class="line">       \b   Backspace.</span><br><span class="line"></span><br><span class="line">       \f   Form-feed.</span><br><span class="line"></span><br><span class="line">       \n   Newline.</span><br><span class="line"></span><br><span class="line">       \r   Carriage return.</span><br><span class="line"></span><br><span class="line">       \t   Horizontal tab.</span><br><span class="line"></span><br><span class="line">       \v   Vertical tab.</span><br><span class="line"></span><br><span class="line">       \xhex digits</span><br><span class="line">            The character represented by the string of hexadecimal digits fol‐</span><br><span class="line">            lowing  the \x.  As in ISO C, all following hexadecimal digits are</span><br><span class="line">            considered part of the escape sequence.  (This feature should tell</span><br><span class="line">            us something about language design by committee.)  E.g., &quot;\x1B&quot; is</span><br><span class="line">            the ASCII ESC (escape) character.</span><br><span class="line"></span><br><span class="line">       \ddd The character represented by the 1-, 2-, or  3-digit  sequence  of</span><br><span class="line">            octal digits.  E.g., &quot;\033&quot; is the ASCII ESC (escape) character.</span><br><span class="line"></span><br><span class="line">       \c   The literal character c.</span><br><span class="line"></span><br><span class="line">       The  escape  sequences may also be used inside constant regular expres‐</span><br><span class="line">       sions (e.g., /[ \t\f\n\r\v]/ matches whitespace characters).</span><br><span class="line"></span><br><span class="line">       In compatibility mode, the characters represented by octal and hexadec‐</span><br><span class="line">       imal  escape  sequences  are  treated  literally  when  used in regular</span><br><span class="line">       expression constants.  Thus, /a\52b/ is equivalent to /a\*b/.</span><br><span class="line"></span><br><span class="line">PATTERNS AND ACTIONS</span><br><span class="line">       AWK is a line-oriented language.  The pattern comes first, and then the</span><br><span class="line">       action.  Action statements are enclosed in &#123; and &#125;.  Either the pattern</span><br><span class="line">       may be missing, or the action may be missing, but, of course, not both.</span><br><span class="line">       If  the  pattern  is  missing,  the action is executed for every single</span><br><span class="line">       record of input.  A missing action is equivalent to</span><br><span class="line"></span><br><span class="line">              &#123; print &#125;</span><br><span class="line"></span><br><span class="line">       which prints the entire record.</span><br><span class="line"></span><br><span class="line">       Comments begin with the # character, and continue until the end of  the</span><br><span class="line">       line.   Blank  lines  may  be used to separate statements.  Normally, a</span><br><span class="line">       statement ends with a newline, however, this is not the case for  lines</span><br><span class="line">       ending in a comma, &#123;, ?, :, &amp;&amp;, or ||.  Lines ending in do or else also</span><br><span class="line">       have their statements automatically continued on  the  following  line.</span><br><span class="line">       In  other  cases,  a  line can be continued by ending it with a “\”, in</span><br><span class="line">       which case the newline is ignored.</span><br><span class="line"></span><br><span class="line">       Multiple statements may be put on one line by separating  them  with  a</span><br><span class="line">       “;”.   This  applies to both the statements within the action part of a</span><br><span class="line">       pattern-action pair (the usual case), and to the pattern-action  state‐</span><br><span class="line">       ments themselves.</span><br><span class="line"></span><br><span class="line">   Patterns</span><br><span class="line">       AWK patterns may be one of the following:</span><br><span class="line"></span><br><span class="line">              BEGIN</span><br><span class="line">              END</span><br><span class="line">              BEGINFILE</span><br><span class="line">              ENDFILE</span><br><span class="line">              /regular expression/</span><br><span class="line">              relational expression</span><br><span class="line">              pattern &amp;&amp; pattern</span><br><span class="line">              pattern || pattern</span><br><span class="line">              pattern ? pattern : pattern</span><br><span class="line">              (pattern)</span><br><span class="line">              ! pattern</span><br><span class="line">              pattern1, pattern2</span><br><span class="line"></span><br><span class="line">       BEGIN  and  END  are two special kinds of patterns which are not tested</span><br><span class="line">       against the input.  The action parts of all BEGIN patterns  are  merged</span><br><span class="line">       as if all the statements had been written in a single BEGIN rule.  They</span><br><span class="line">       are executed before any of the input is read.  Similarly, all  the  END</span><br><span class="line">       rules are merged, and executed when all the input is exhausted (or when</span><br><span class="line">       an exit statement is executed).  BEGIN and END patterns cannot be  com‐</span><br><span class="line">       bined  with  other patterns in pattern expressions.  BEGIN and END pat‐</span><br><span class="line">       terns cannot have missing action parts.</span><br><span class="line"></span><br><span class="line">       BEGINFILE and ENDFILE are additional special patterns whose bodies  are</span><br><span class="line">       executed  before  reading  the  first record of each command line input</span><br><span class="line">       file and after reading the last record of each file.  Inside the BEGIN‐</span><br><span class="line">       FILE  rule, the value of ERRNO will be the empty string if the file was</span><br><span class="line">       opened successfully.  Otherwise, there is some problem  with  the  file</span><br><span class="line">       and  the code should use nextfile to skip it. If that is not done, gawk</span><br><span class="line">       produces its usual fatal error for files that cannot be opened.</span><br><span class="line"></span><br><span class="line">       For /regular expression/ patterns, the associated statement is executed</span><br><span class="line">       for  each  input  record  that matches the regular expression.  Regular</span><br><span class="line">       expressions are the same as  those  in  egrep(1),  and  are  summarized</span><br><span class="line">       below.</span><br><span class="line"></span><br><span class="line">       A  relational  expression may use any of the operators defined below in</span><br><span class="line">       the section on actions.  These generally test  whether  certain  fields</span><br><span class="line">       match certain regular expressions.</span><br><span class="line"></span><br><span class="line">       The  &amp;&amp;,  ||, and !  operators are logical AND, logical OR, and logical</span><br><span class="line">       NOT, respectively, as in C.  They do short-circuit evaluation, also  as</span><br><span class="line">       in  C,  and  are used for combining more primitive pattern expressions.</span><br><span class="line">       As in most languages, parentheses may be used to change  the  order  of</span><br><span class="line">       evaluation.</span><br><span class="line"></span><br><span class="line">       The  ?:  operator is like the same operator in C.  If the first pattern</span><br><span class="line">       is true then the pattern used for testing is the second pattern, other‐</span><br><span class="line">       wise  it  is  the  third.  Only one of the second and third patterns is</span><br><span class="line">       evaluated.</span><br><span class="line"></span><br><span class="line">       The pattern1, pattern2 form of an expression is called a range pattern.</span><br><span class="line">       It  matches  all input records starting with a record that matches pat‐</span><br><span class="line">       tern1, and continuing until a record that matches pattern2,  inclusive.</span><br><span class="line">       It does not combine with any other sort of pattern expression.</span><br><span class="line"></span><br><span class="line">   Regular Expressions</span><br><span class="line">       Regular  expressions  are  the  extended kind found in egrep.  They are</span><br><span class="line">       composed of characters as follows:</span><br><span class="line"></span><br><span class="line">       c          Matches the non-metacharacter c.</span><br><span class="line"></span><br><span class="line">       \c         Matches the literal character c.</span><br><span class="line"></span><br><span class="line">       .          Matches any character including newline.</span><br><span class="line"></span><br><span class="line">       ^          Matches the beginning of a string.</span><br><span class="line"></span><br><span class="line">       $          Matches the end of a string.</span><br><span class="line"></span><br><span class="line">       [abc...]   A character list: matches any of the characters abc....  You</span><br><span class="line">                  may  include a range of characters by separating them with a</span><br><span class="line">                  dash.</span><br><span class="line"></span><br><span class="line">       [^abc...]  A negated  character  list:  matches  any  character  except</span><br><span class="line">                  abc....</span><br><span class="line"></span><br><span class="line">       r1|r2      Alternation: matches either r1 or r2.</span><br><span class="line"></span><br><span class="line">       r1r2       Concatenation: matches r1, and then r2.</span><br><span class="line"></span><br><span class="line">       r+         Matches one or more r&apos;s.</span><br><span class="line"></span><br><span class="line">       r*         Matches zero or more r&apos;s.</span><br><span class="line"></span><br><span class="line">       r?         Matches zero or one r&apos;s.</span><br><span class="line"></span><br><span class="line">       (r)        Grouping: matches r.</span><br><span class="line"></span><br><span class="line">       r&#123;n&#125;</span><br><span class="line">       r&#123;n,&#125;</span><br><span class="line">       r&#123;n,m&#125;     One  or two numbers inside braces denote an interval expres‐</span><br><span class="line">                  sion.  If there is one number in the braces,  the  preceding</span><br><span class="line">                  regular  expression r is repeated n times.  If there are two</span><br><span class="line">                  numbers separated by a comma, r is repeated n  to  m  times.</span><br><span class="line">                  If  there  is  one  number  followed  by  a comma, then r is</span><br><span class="line">                  repeated at least n times.</span><br><span class="line"></span><br><span class="line">       \y         Matches the empty string at either the beginning or the  end</span><br><span class="line">                  of a word.</span><br><span class="line"></span><br><span class="line">       \B         Matches the empty string within a word.</span><br><span class="line"></span><br><span class="line">       \&lt;         Matches the empty string at the beginning of a word.</span><br><span class="line"></span><br><span class="line">       \&gt;         Matches the empty string at the end of a word.</span><br><span class="line"></span><br><span class="line">       \s         Matches any whitespace character.</span><br><span class="line"></span><br><span class="line">       \S         Matches any nonwhitespace character.</span><br><span class="line"></span><br><span class="line">       \w         Matches  any  word-constituent  character (letter, digit, or</span><br><span class="line">                  underscore).</span><br><span class="line"></span><br><span class="line">       \W         Matches any character that is not word-constituent.</span><br><span class="line"></span><br><span class="line">       \`         Matches the empty  string  at  the  beginning  of  a  buffer</span><br><span class="line">                  (string).</span><br><span class="line"></span><br><span class="line">       \&apos;         Matches the empty string at the end of a buffer.</span><br><span class="line"></span><br><span class="line">       The  escape  sequences  that  are valid in string constants (see String</span><br><span class="line">       Constants) are also valid in regular expressions.</span><br><span class="line"></span><br><span class="line">       Character classes are a feature introduced in the  POSIX  standard.   A</span><br><span class="line">       character  class  is a special notation for describing lists of charac‐</span><br><span class="line">       ters that have a specific attribute, but where  the  actual  characters</span><br><span class="line">       themselves  can  vary from country to country and/or from character set</span><br><span class="line">       to character set.  For example, the notion of  what  is  an  alphabetic</span><br><span class="line">       character differs in the USA and in France.</span><br><span class="line"></span><br><span class="line">       A  character  class  is  only  valid in a regular expression inside the</span><br><span class="line">       brackets of a character list.  Character classes consist of [:, a  key‐</span><br><span class="line">       word  denoting the class, and :].  The character classes defined by the</span><br><span class="line">       POSIX standard are:</span><br><span class="line"></span><br><span class="line">       [:alnum:]  Alphanumeric characters.</span><br><span class="line"></span><br><span class="line">       [:alpha:]  Alphabetic characters.</span><br><span class="line"></span><br><span class="line">       [:blank:]  Space or tab characters.</span><br><span class="line"></span><br><span class="line">       [:cntrl:]  Control characters.</span><br><span class="line"></span><br><span class="line">       [:digit:]  Numeric characters.</span><br><span class="line"></span><br><span class="line">       [:graph:]  Characters that are both printable and visible.  (A space is</span><br><span class="line">                  printable, but not visible, while an a is both.)</span><br><span class="line"></span><br><span class="line">       [:lower:]  Lowercase alphabetic characters.</span><br><span class="line"></span><br><span class="line">       [:print:]  Printable  characters (characters that are not control char‐</span><br><span class="line">                  acters.)</span><br><span class="line"></span><br><span class="line">       [:punct:]  Punctuation characters (characters that are not letter, dig‐</span><br><span class="line">                  its, control characters, or space characters).</span><br><span class="line"></span><br><span class="line">       [:space:]  Space  characters (such as space, tab, and formfeed, to name</span><br><span class="line">                  a few).</span><br><span class="line"></span><br><span class="line">       [:upper:]  Uppercase alphabetic characters.</span><br><span class="line"></span><br><span class="line">       [:xdigit:] Characters that are hexadecimal digits.</span><br><span class="line"></span><br><span class="line">       For example, before the POSIX standard, to match  alphanumeric  charac‐</span><br><span class="line">       ters, you would have had to write /[A-Za-z0-9]/.  If your character set</span><br><span class="line">       had other alphabetic characters in it, this would not match  them,  and</span><br><span class="line">       if  your  character set collated differently from ASCII, this might not</span><br><span class="line">       even match the ASCII alphanumeric characters.  With the POSIX character</span><br><span class="line">       classes,  you  can write /[[:alnum:]]/, and this matches the alphabetic</span><br><span class="line">       and numeric characters in your character set, no matter what it is.</span><br><span class="line"></span><br><span class="line">       Two additional special sequences can appear in character lists.   These</span><br><span class="line">       apply  to  non-ASCII  character  sets,  which  can  have single symbols</span><br><span class="line">       (called collating elements) that are represented  with  more  than  one</span><br><span class="line">       character,  as  well as several characters that are equivalent for col‐</span><br><span class="line">       lating, or sorting, purposes.  (E.g., in French,  a  plain  “e”  and  a</span><br><span class="line">       grave-accented “`” are equivalent.)</span><br><span class="line"></span><br><span class="line">       Collating Symbols</span><br><span class="line">              A  collating  symbol  is  a  multi-character  collating  element</span><br><span class="line">              enclosed in [.  and .].  For example, if ch is a collating  ele‐</span><br><span class="line">              ment,  then  [[.ch.]]  is a regular expression that matches this</span><br><span class="line">              collating element, while  [ch]  is  a  regular  expression  that</span><br><span class="line">              matches either c or h.</span><br><span class="line"></span><br><span class="line">       Equivalence Classes</span><br><span class="line">              An  equivalence  class  is  a locale-specific name for a list of</span><br><span class="line">              characters that are equivalent.  The name is enclosed in [=  and</span><br><span class="line">              =].   For  example, the name e might be used to represent all of</span><br><span class="line">              “e,” “´,” and “`.”  In this case, [[=e=]] is a  regular  expres‐</span><br><span class="line">              sion that matches any of e, ´, or `.</span><br><span class="line"></span><br><span class="line">       These  features are very valuable in non-English speaking locales.  The</span><br><span class="line">       library functions that gawk uses for regular expression  matching  cur‐</span><br><span class="line">       rently  only  recognize  POSIX character classes; they do not recognize</span><br><span class="line">       collating symbols or equivalence classes.</span><br><span class="line"></span><br><span class="line">       The \y, \B, \&lt;, \&gt;, \s, \S, \w, \W, \`, and \&apos; operators  are  specific</span><br><span class="line">       to  gawk;  they  are  extensions based on facilities in the GNU regular</span><br><span class="line">       expression libraries.</span><br><span class="line"></span><br><span class="line">       The various command line options control how gawk interprets characters</span><br><span class="line">       in regular expressions.</span><br><span class="line"></span><br><span class="line">       No options</span><br><span class="line">              In  the  default case, gawk provides all the facilities of POSIX</span><br><span class="line">              regular expressions and the  GNU  regular  expression  operators</span><br><span class="line">              described above.</span><br><span class="line"></span><br><span class="line">       --posix</span><br><span class="line">              Only  POSIX regular expressions are supported, the GNU operators</span><br><span class="line">              are not special.  (E.g., \w matches a literal w).</span><br><span class="line"></span><br><span class="line">       --traditional</span><br><span class="line">              Traditional UNIX awk regular expressions are matched.   The  GNU</span><br><span class="line">              operators  are  not  special,  and  interval expressions are not</span><br><span class="line">              available.  Characters described by octal and hexadecimal escape</span><br><span class="line">              sequences  are treated literally, even if they represent regular</span><br><span class="line">              expression metacharacters.</span><br><span class="line"></span><br><span class="line">       --re-interval</span><br><span class="line">              Allow interval  expressions  in  regular  expressions,  even  if</span><br><span class="line">              --traditional has been provided.</span><br><span class="line"></span><br><span class="line">   Actions</span><br><span class="line">       Action  statements  are enclosed in braces, &#123; and &#125;.  Action statements</span><br><span class="line">       consist of the usual assignment, conditional,  and  looping  statements</span><br><span class="line">       found  in  most  languages.   The  operators,  control  statements, and</span><br><span class="line">       input/output statements available are patterned after those in C.</span><br><span class="line"></span><br><span class="line">   Operators</span><br><span class="line">       The operators in AWK, in order of decreasing precedence, are:</span><br><span class="line"></span><br><span class="line">       (...)       Grouping</span><br><span class="line"></span><br><span class="line">       $           Field reference.</span><br><span class="line"></span><br><span class="line">       ++ --       Increment and decrement, both prefix and postfix.</span><br><span class="line"></span><br><span class="line">       ^           Exponentiation (** may  also  be  used,  and  **=  for  the</span><br><span class="line">                   assignment operator).</span><br><span class="line"></span><br><span class="line">       + - !       Unary plus, unary minus, and logical negation.</span><br><span class="line"></span><br><span class="line">       * / %       Multiplication, division, and modulus.</span><br><span class="line"></span><br><span class="line">       + -         Addition and subtraction.</span><br><span class="line"></span><br><span class="line">       space       String concatenation.</span><br><span class="line"></span><br><span class="line">       |   |&amp;      Piped I/O for getline, print, and printf.</span><br><span class="line"></span><br><span class="line">       &lt; &gt; &lt;= &gt;= != ==</span><br><span class="line">                   The regular relational operators.</span><br><span class="line"></span><br><span class="line">       ~ !~        Regular  expression match, negated match.  NOTE: Do not use</span><br><span class="line">                   a constant regular expression (/foo/) on the left-hand side</span><br><span class="line">                   of  a  ~  or !~.  Only use one on the right-hand side.  The</span><br><span class="line">                   expression /foo/ ~ exp has  the  same  meaning  as  (($0  ~</span><br><span class="line">                   /foo/) ~ exp).  This is usually not what you want.</span><br><span class="line"></span><br><span class="line">       in          Array membership.</span><br><span class="line"></span><br><span class="line">       &amp;&amp;          Logical AND.</span><br><span class="line"></span><br><span class="line">       ||          Logical OR.</span><br><span class="line"></span><br><span class="line">       ?:          The  C  conditional  expression.  This has the form expr1 ?</span><br><span class="line">                   expr2 : expr3.  If expr1 is true, the value of the  expres‐</span><br><span class="line">                   sion  is  expr2,  otherwise it is expr3.  Only one of expr2</span><br><span class="line">                   and expr3 is evaluated.</span><br><span class="line"></span><br><span class="line">       = += -= *= /= %= ^=</span><br><span class="line">                   Assignment.  Both absolute assignment  (var  =  value)  and</span><br><span class="line">                   operator-assignment (the other forms) are supported.</span><br><span class="line"></span><br><span class="line">   Control Statements</span><br><span class="line">       The control statements are as follows:</span><br><span class="line"></span><br><span class="line">              if (condition) statement [ else statement ]</span><br><span class="line">              while (condition) statement</span><br><span class="line">              do statement while (condition)</span><br><span class="line">              for (expr1; expr2; expr3) statement</span><br><span class="line">              for (var in array) statement</span><br><span class="line">              break</span><br><span class="line">              continue</span><br><span class="line">              delete array[index]</span><br><span class="line">              delete array</span><br><span class="line">              exit [ expression ]</span><br><span class="line">              &#123; statements &#125;</span><br><span class="line">              switch (expression) &#123;</span><br><span class="line">              case value|regex : statement</span><br><span class="line">              ...</span><br><span class="line">              [ default: statement ]</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">   I/O Statements</span><br><span class="line">       The input/output statements are as follows:</span><br><span class="line"></span><br><span class="line">       close(file [, how])   Close file, pipe or co-process.  The optional how</span><br><span class="line">                             should only be used when closing  one  end  of  a</span><br><span class="line">                             two-way  pipe  to  a  co-process.   It  must be a</span><br><span class="line">                             string value, either &quot;to&quot; or &quot;from&quot;.</span><br><span class="line"></span><br><span class="line">       getline               Set $0 from next input record; set NF,  NR,  FNR,</span><br><span class="line">                             RT.</span><br><span class="line"></span><br><span class="line">       getline &lt;file         Set $0 from next record of file; set NF, RT.</span><br><span class="line"></span><br><span class="line">       getline var           Set var from next input record; set NR, FNR, RT.</span><br><span class="line"></span><br><span class="line">       getline var &lt;file     Set var from next record of file, RT.</span><br><span class="line"></span><br><span class="line">       command | getline [var]</span><br><span class="line">                             Run  command  piping the output either into $0 or</span><br><span class="line">                             var, as above, and RT.</span><br><span class="line"></span><br><span class="line">       command |&amp; getline [var]</span><br><span class="line">                             Run command as a  co-process  piping  the  output</span><br><span class="line">                             either into $0 or var, as above, and RT.  Co-pro‐</span><br><span class="line">                             cesses are a gawk extension.  (command  can  also</span><br><span class="line">                             be  a  socket.   See  the subsection Special File</span><br><span class="line">                             Names, below.)</span><br><span class="line"></span><br><span class="line">       next                  Stop processing the current  input  record.   The</span><br><span class="line">                             next  input  record is read and processing starts</span><br><span class="line">                             over with the first pattern in the  AWK  program.</span><br><span class="line">                             Upon  reaching  the  end  of the input data, gawk</span><br><span class="line">                             executes any END rule(s).</span><br><span class="line"></span><br><span class="line">       nextfile              Stop processing the current input file.  The next</span><br><span class="line">                             input record read comes from the next input file.</span><br><span class="line">                             FILENAME and ARGIND are updated, FNR is reset  to</span><br><span class="line">                             1, and processing starts over with the first pat‐</span><br><span class="line">                             tern in the AWK program.  Upon reaching  the  end</span><br><span class="line">                             of the input data, gawk executes any END rule(s).</span><br><span class="line"></span><br><span class="line">       print                 Print  the  current record.  The output record is</span><br><span class="line">                             terminated with the value of ORS.</span><br><span class="line"></span><br><span class="line">       print expr-list       Print expressions.  Each expression is  separated</span><br><span class="line">                             by the value of OFS.  The output record is termi‐</span><br><span class="line">                             nated with the value of ORS.</span><br><span class="line"></span><br><span class="line">       print expr-list &gt;file Print expressions on file.   Each  expression  is</span><br><span class="line">                             separated by the value of OFS.  The output record</span><br><span class="line">                             is terminated with the value of ORS.</span><br><span class="line"></span><br><span class="line">       printf fmt, expr-list Format and  print.   See  The  printf  Statement,</span><br><span class="line">                             below.</span><br><span class="line"></span><br><span class="line">       printf fmt, expr-list &gt;file</span><br><span class="line">                             Format and print on file.</span><br><span class="line"></span><br><span class="line">       system(cmd-line)      Execute the command cmd-line, and return the exit</span><br><span class="line">                             status.  (This may not be available on  non-POSIX</span><br><span class="line">                             systems.)</span><br><span class="line"></span><br><span class="line">       fflush([file])        Flush any buffers associated with the open output</span><br><span class="line">                             file or pipe file.  If file is missing or  if  it</span><br><span class="line">                             is  the  null  string, then flush all open output</span><br><span class="line">                             files and pipes.</span><br><span class="line"></span><br><span class="line">       Additional output redirections are allowed for print and printf.</span><br><span class="line"></span><br><span class="line">       print ... &gt;&gt; file</span><br><span class="line">              Appends output to the file.</span><br><span class="line"></span><br><span class="line">       print ... | command</span><br><span class="line">              Writes on a pipe.</span><br><span class="line"></span><br><span class="line">       print ... |&amp; command</span><br><span class="line">              Sends data to a co-process or socket.  (See also the  subsection</span><br><span class="line">              Special File Names, below.)</span><br><span class="line"></span><br><span class="line">       The  getline  command returns 1 on success, 0 on end of file, and -1 on</span><br><span class="line">       an error.  Upon an error, ERRNO is set to a string describing the prob‐</span><br><span class="line">       lem.</span><br><span class="line"></span><br><span class="line">       NOTE:  Failure in opening a two-way socket results in a non-fatal error</span><br><span class="line">       being returned to the calling function. If using a pipe, co-process, or</span><br><span class="line">       socket  to getline, or from print or printf within a loop, you must use</span><br><span class="line">       close() to create new instances of the command or socket.  AWK does not</span><br><span class="line">       automatically  close  pipes,  sockets, or co-processes when they return</span><br><span class="line">       EOF.</span><br><span class="line"></span><br><span class="line">   The printf Statement</span><br><span class="line">       The AWK versions of the printf statement and  sprintf()  function  (see</span><br><span class="line">       below) accept the following conversion specification formats:</span><br><span class="line"></span><br><span class="line">       %c      A single character.  If the argument used for %c is numeric, it</span><br><span class="line">               is treated as a character and printed.  Otherwise, the argument</span><br><span class="line">               is assumed to be a string, and the only first character of that</span><br><span class="line">               string is printed.</span><br><span class="line"></span><br><span class="line">       %d, %i  A decimal number (the integer part).</span><br><span class="line"></span><br><span class="line">       %e, %E  A floating point number of the form [-]d.dddddde[+-]dd.  The %E</span><br><span class="line">               format uses E instead of e.</span><br><span class="line"></span><br><span class="line">       %f, %F  A floating point number of the form [-]ddd.dddddd.  If the sys‐</span><br><span class="line">               tem library supports it, %F is available as well. This is  like</span><br><span class="line">               %f,  but  uses  capital  letters for special “not a number” and</span><br><span class="line">               “infinity” values. If %F is not available, gawk uses %f.</span><br><span class="line"></span><br><span class="line">       %g, %G  Use %e or %f conversion, whichever is shorter, with nonsignifi‐</span><br><span class="line">               cant zeros suppressed.  The %G format uses %E instead of %e.</span><br><span class="line"></span><br><span class="line">       %o      An unsigned octal number (also an integer).</span><br><span class="line"></span><br><span class="line">       %u      An unsigned decimal number (again, an integer).</span><br><span class="line"></span><br><span class="line">       %s      A character string.</span><br><span class="line"></span><br><span class="line">       %x, %X  An  unsigned  hexadecimal  number  (an integer).  The %X format</span><br><span class="line">               uses ABCDEF instead of abcdef.</span><br><span class="line"></span><br><span class="line">       %%      A single % character; no argument is converted.</span><br><span class="line"></span><br><span class="line">       Optional, additional parameters may lie between the % and  the  control</span><br><span class="line">       letter:</span><br><span class="line"></span><br><span class="line">       count$ Use the count&apos;th argument at this point in the formatting.  This</span><br><span class="line">              is called a positional specifier and is intended  primarily  for</span><br><span class="line">              use  in translated versions of format strings, not in the origi‐</span><br><span class="line">              nal text of an AWK program.  It is a gawk extension.</span><br><span class="line"></span><br><span class="line">       -      The expression should be left-justified within its field.</span><br><span class="line"></span><br><span class="line">       space  For numeric conversions, prefix positive values  with  a  space,</span><br><span class="line">              and negative values with a minus sign.</span><br><span class="line"></span><br><span class="line">       +      The  plus sign, used before the width modifier (see below), says</span><br><span class="line">              to always supply a sign for numeric  conversions,  even  if  the</span><br><span class="line">              data  to  be  formatted  is positive.  The + overrides the space</span><br><span class="line">              modifier.</span><br><span class="line"></span><br><span class="line">       #      Use an “alternate form” for certain control  letters.   For  %o,</span><br><span class="line">              supply  a  leading zero.  For %x, and %X, supply a leading 0x or</span><br><span class="line">              0X for a nonzero result.  For %e, %E,  %f  and  %F,  the  result</span><br><span class="line">              always contains a decimal point.  For %g, and %G, trailing zeros</span><br><span class="line">              are not removed from the result.</span><br><span class="line"></span><br><span class="line">       0      A leading 0 (zero) acts as a flag, that indicates output  should</span><br><span class="line">              be  padded  with zeroes instead of spaces.  This applies only to</span><br><span class="line">              the numeric output formats.  This flag only has an  effect  when</span><br><span class="line">              the field width is wider than the value to be printed.</span><br><span class="line"></span><br><span class="line">       &apos;      A  single  quote character instructs gawk to insert the locale&apos;s</span><br><span class="line">              thousands-separator character into decimal numbers, and to  also</span><br><span class="line">              use  the  locale&apos;s  decimal  point character with floating point</span><br><span class="line">              formats.  This requires correct locale support in the C  library</span><br><span class="line">              and in the definition of the current locale.</span><br><span class="line"></span><br><span class="line">       width  The field should be padded to this width.  The field is normally</span><br><span class="line">              padded with spaces.  With the 0 flag, it is padded with zeroes.</span><br><span class="line"></span><br><span class="line">       .prec  A number that specifies the precision to use when printing.  For</span><br><span class="line">              the  %e,  %E,  %f  and %F, formats, this specifies the number of</span><br><span class="line">              digits you want printed to the right of the decimal point.   For</span><br><span class="line">              the  %g, and %G formats, it specifies the maximum number of sig‐</span><br><span class="line">              nificant digits.  For the %d, %i, %o, %u, %x, and %X formats, it</span><br><span class="line">              specifies  the  minimum  number  of digits to print.  For %s, it</span><br><span class="line">              specifies the maximum number of characters from the string  that</span><br><span class="line">              should be printed.</span><br><span class="line"></span><br><span class="line">       The  dynamic width and prec capabilities of the ISO C printf() routines</span><br><span class="line">       are supported.  A * in place of either the width or prec specifications</span><br><span class="line">       causes  their  values  to  be taken from the argument list to printf or</span><br><span class="line">       sprintf().  To use a positional specifier with a dynamic width or  pre‐</span><br><span class="line">       cision,  supply the count$ after the * in the format string.  For exam‐</span><br><span class="line">       ple, &quot;%3$*2$.*1$s&quot;.</span><br><span class="line"></span><br><span class="line">   Special File Names</span><br><span class="line">       When doing I/O redirection from either print or printf into a file,  or</span><br><span class="line">       via  getline  from  a  file,  gawk recognizes certain special filenames</span><br><span class="line">       internally.  These filenames allow  access  to  open  file  descriptors</span><br><span class="line">       inherited  from  gawk&apos;s parent process (usually the shell).  These file</span><br><span class="line">       names may also be used on the command line to  name  data  files.   The</span><br><span class="line">       filenames are:</span><br><span class="line"></span><br><span class="line">       -           The standard input.</span><br><span class="line"></span><br><span class="line">       /dev/stdin  The standard input.</span><br><span class="line"></span><br><span class="line">       /dev/stdout The standard output.</span><br><span class="line"></span><br><span class="line">       /dev/stderr The standard error output.</span><br><span class="line"></span><br><span class="line">       /dev/fd/n   The file associated with the open file descriptor n.</span><br><span class="line"></span><br><span class="line">       These are particularly useful for error messages.  For example:</span><br><span class="line"></span><br><span class="line">              print &quot;You blew it!&quot; &gt; &quot;/dev/stderr&quot;</span><br><span class="line"></span><br><span class="line">       whereas you would otherwise have to use</span><br><span class="line"></span><br><span class="line">              print &quot;You blew it!&quot; | &quot;cat 1&gt;&amp;2&quot;</span><br><span class="line"></span><br><span class="line">       The  following  special  filenames  may  be used with the |&amp; co-process</span><br><span class="line">       operator for creating TCP/IP network connections:</span><br><span class="line"></span><br><span class="line">       /inet/tcp/lport/rhost/rport</span><br><span class="line">       /inet4/tcp/lport/rhost/rport</span><br><span class="line">       /inet6/tcp/lport/rhost/rport</span><br><span class="line">              Files for a TCP/IP connection on local port lport to remote host</span><br><span class="line">              rhost  on remote port rport.  Use a port of 0 to have the system</span><br><span class="line">              pick a port.  Use /inet4 to force an IPv4 connection, and /inet6</span><br><span class="line">              to  force  an  IPv6  connection.   Plain  /inet  uses the system</span><br><span class="line">              default (most likely IPv4).</span><br><span class="line"></span><br><span class="line">       /inet/udp/lport/rhost/rport</span><br><span class="line">       /inet4/udp/lport/rhost/rport</span><br><span class="line">       /inet6/udp/lport/rhost/rport</span><br><span class="line">              Similar, but use UDP/IP instead of TCP/IP.</span><br><span class="line"></span><br><span class="line">   Numeric Functions</span><br><span class="line">       AWK has the following built-in arithmetic functions:</span><br><span class="line"></span><br><span class="line">       atan2(y, x)   Return the arctangent of y/x in radians.</span><br><span class="line"></span><br><span class="line">       cos(expr)     Return the cosine of expr, which is in radians.</span><br><span class="line"></span><br><span class="line">       exp(expr)     The exponential function.</span><br><span class="line"></span><br><span class="line">       int(expr)     Truncate to integer.</span><br><span class="line"></span><br><span class="line">       log(expr)     The natural logarithm function.</span><br><span class="line"></span><br><span class="line">       rand()        Return a random number N, between 0 and 1, such that 0  ≤</span><br><span class="line">                     N &lt; 1.</span><br><span class="line"></span><br><span class="line">       sin(expr)     Return the sine of expr, which is in radians.</span><br><span class="line"></span><br><span class="line">       sqrt(expr)    Return the square root of expr.</span><br><span class="line"></span><br><span class="line">       srand([expr]) Use expr as the new seed for the random number generator.</span><br><span class="line">                     If no expr is provided, use the time of day.  Return  the</span><br><span class="line">                     previous seed for the random number generator.</span><br><span class="line"></span><br><span class="line">   String Functions</span><br><span class="line">       Gawk has the following built-in string functions:</span><br><span class="line"></span><br><span class="line">       asort(s [, d [, how] ]) Return  the  number  of  elements in the source</span><br><span class="line">                               array s.  Sort the contents of s  using  gawk&apos;s</span><br><span class="line">                               normal  rules for comparing values, and replace</span><br><span class="line">                               the indices of the sorted values s with sequen‐</span><br><span class="line">                               tial  integers starting with 1. If the optional</span><br><span class="line">                               destination array d is specified, first  dupli‐</span><br><span class="line">                               cate  s  into  d,  and then sort d, leaving the</span><br><span class="line">                               indices of the source array  s  unchanged.  The</span><br><span class="line">                               optional  string how controls the direction and</span><br><span class="line">                               the comparison mode.  Valid values for how  are</span><br><span class="line">                               any     of     the     strings     valid    for</span><br><span class="line">                               PROCINFO[&quot;sorted_in&quot;].  It can also be the name</span><br><span class="line">                               of   a   user-defined  comparison  function  as</span><br><span class="line">                               described in PROCINFO[&quot;sorted_in&quot;].</span><br><span class="line"></span><br><span class="line">       asorti(s [, d [, how] ])</span><br><span class="line">                               Return the number of  elements  in  the  source</span><br><span class="line">                               array  s.   The behavior is the same as that of</span><br><span class="line">                               asort(), except that the array indices are used</span><br><span class="line">                               for  sorting, not the array values.  When done,</span><br><span class="line">                               the array is indexed numerically, and the  val‐</span><br><span class="line">                               ues  are  those  of  the original indices.  The</span><br><span class="line">                               original values are lost; thus provide a second</span><br><span class="line">                               array  if  you  wish  to preserve the original.</span><br><span class="line">                               The purpose of the optional string how  is  the</span><br><span class="line">                               same as described in asort() above.</span><br><span class="line"></span><br><span class="line">       gensub(r, s, h [, t])   Search  the  target string t for matches of the</span><br><span class="line">                               regular expression r.  If h is a string  begin‐</span><br><span class="line">                               ning with g or G, then replace all matches of r</span><br><span class="line">                               with s.  Otherwise, h is  a  number  indicating</span><br><span class="line">                               which  match of r to replace.  If t is not sup‐</span><br><span class="line">                               plied, use $0 instead.  Within the  replacement</span><br><span class="line">                               text  s,  the  sequence  \n, where n is a digit</span><br><span class="line">                               from 1 to 9, may be used to indicate  just  the</span><br><span class="line">                               text that matched the n&apos;th parenthesized subex‐</span><br><span class="line">                               pression.   The  sequence  \0  represents   the</span><br><span class="line">                               entire  matched  text, as does the character &amp;.</span><br><span class="line">                               Unlike sub() and gsub(), the modified string is</span><br><span class="line">                               returned as the result of the function, and the</span><br><span class="line">                               original target string is not changed.</span><br><span class="line"></span><br><span class="line">       gsub(r, s [, t])        For each substring matching the regular expres‐</span><br><span class="line">                               sion  r  in the string t, substitute the string</span><br><span class="line">                               s, and return the number of substitutions.   If</span><br><span class="line">                               t  is  not  supplied,  use  $0.   An  &amp;  in the</span><br><span class="line">                               replacement text is replaced with the text that</span><br><span class="line">                               was  actually matched.  Use \&amp; to get a literal</span><br><span class="line">                               &amp;.  (This must be typed  as  &quot;\\&amp;&quot;;  see  GAWK:</span><br><span class="line">                               Effective  AWK Programming for a fuller discus‐</span><br><span class="line">                               sion of the rules for &amp;&apos;s  and  backslashes  in</span><br><span class="line">                               the replacement text of sub(), gsub(), and gen‐</span><br><span class="line">                               sub().)</span><br><span class="line"></span><br><span class="line">       index(s, t)             Return the index of the string t in the  string</span><br><span class="line">                               s,  or  0  if  t is not present.  (This implies</span><br><span class="line">                               that character indices start at one.)  It is  a</span><br><span class="line">                               fatal error to use a regexp constant for t.</span><br><span class="line"></span><br><span class="line">       length([s])             Return  the  length  of  the  string  s, or the</span><br><span class="line">                               length of $0 if s is not supplied.  As  a  non-</span><br><span class="line">                               standard  extension,  with  an  array argument,</span><br><span class="line">                               length() returns the number of elements in  the</span><br><span class="line">                               array.</span><br><span class="line"></span><br><span class="line">       match(s, r [, a])       Return  the  position  in  s  where the regular</span><br><span class="line">                               expression r occurs, or 0 if r is not  present,</span><br><span class="line">                               and set the values of RSTART and RLENGTH.  Note</span><br><span class="line">                               that the argument order is the same as for  the</span><br><span class="line">                               ~  operator: str ~ re.  If array a is provided,</span><br><span class="line">                               a is cleared and then elements 1 through n  are</span><br><span class="line">                               filled  with  the  portions of s that match the</span><br><span class="line">                               corresponding parenthesized subexpression in r.</span><br><span class="line">                               The 0&apos;th element of a contains the portion of s</span><br><span class="line">                               matched by the  entire  regular  expression  r.</span><br><span class="line">                               Subscripts  a[n,  &quot;start&quot;],  and a[n, &quot;length&quot;]</span><br><span class="line">                               provide the starting index in  the  string  and</span><br><span class="line">                               length  respectively,  of  each  matching  sub‐</span><br><span class="line">                               string.</span><br><span class="line"></span><br><span class="line">       patsplit(s, a [, r [, seps] ])</span><br><span class="line">                               Split the string s into the  array  a  and  the</span><br><span class="line">                               separators array seps on the regular expression</span><br><span class="line">                               r, and return the number  of  fields.   Element</span><br><span class="line">                               values  are  the  portions of s that matched r.</span><br><span class="line">                               The value of  seps[i]  is  the  separator  that</span><br><span class="line">                               appeared  in front of a[i+1].  If r is omitted,</span><br><span class="line">                               FPAT is used instead.  The arrays  a  and  seps</span><br><span class="line">                               are  cleared  first.  Splitting behaves identi‐</span><br><span class="line">                               cally to field splitting with  FPAT,  described</span><br><span class="line">                               above.</span><br><span class="line"></span><br><span class="line">       split(s, a [, r [, seps] ])</span><br><span class="line">                               Split  the  string  s  into the array a and the</span><br><span class="line">                               separators array seps on the regular expression</span><br><span class="line">                               r,  and  return  the number of fields.  If r is</span><br><span class="line">                               omitted, FS is used instead.  The arrays a  and</span><br><span class="line">                               seps  are  cleared first.  seps[i] is the field</span><br><span class="line">                               separator matched by r between a[i] and a[i+1].</span><br><span class="line">                               If r is a single space, then leading whitespace</span><br><span class="line">                               in s goes into the extra array element  seps[0]</span><br><span class="line">                               and  trailing  whitespace  goes  into the extra</span><br><span class="line">                               array element seps[n], where n  is  the  return</span><br><span class="line">                               value  of  split(s,  a,  r,  seps).   Splitting</span><br><span class="line">                               behaves   identically   to   field   splitting,</span><br><span class="line">                               described above.</span><br><span class="line"></span><br><span class="line">       sprintf(fmt, expr-list) Print  expr-list  according  to fmt, and return</span><br><span class="line">                               the resulting string.</span><br><span class="line"></span><br><span class="line">       strtonum(str)           Examine str, and return its numeric value.   If</span><br><span class="line">                               str  begins  with  a  leading 0, treat it as an</span><br><span class="line">                               octal number.  If str begins with a leading  0x</span><br><span class="line">                               or  0X, treat it as a hexadecimal number.  Oth‐</span><br><span class="line">                               erwise, assume it is a decimal number.</span><br><span class="line"></span><br><span class="line">       sub(r, s [, t])         Just like gsub(), but replace  only  the  first</span><br><span class="line">                               matching substring.</span><br><span class="line"></span><br><span class="line">       substr(s, i [, n])      Return  the  at most n-character substring of s</span><br><span class="line">                               starting at i.  If n is omitted, use  the  rest</span><br><span class="line">                               of s.</span><br><span class="line"></span><br><span class="line">       tolower(str)            Return  a  copy of the string str, with all the</span><br><span class="line">                               uppercase characters in str translated to their</span><br><span class="line">                               corresponding   lowercase  counterparts.   Non-</span><br><span class="line">                               alphabetic characters are left unchanged.</span><br><span class="line"></span><br><span class="line">       toupper(str)            Return a copy of the string str, with  all  the</span><br><span class="line">                               lowercase characters in str translated to their</span><br><span class="line">                               corresponding  uppercase  counterparts.    Non-</span><br><span class="line">                               alphabetic characters are left unchanged.</span><br><span class="line"></span><br><span class="line">       Gawk  is  multibyte aware.  This means that index(), length(), substr()</span><br><span class="line">       and match() all work in terms of characters, not bytes.</span><br><span class="line"></span><br><span class="line">   Time Functions</span><br><span class="line">       Since one of the primary uses of AWK programs is processing  log  files</span><br><span class="line">       that  contain time stamp information, gawk provides the following func‐</span><br><span class="line">       tions for obtaining time stamps and formatting them.</span><br><span class="line"></span><br><span class="line">       mktime(datespec)</span><br><span class="line">                 Turn datespec into a time stamp of the same form as  returned</span><br><span class="line">                 by  systime(),  and  return  the  result.   The datespec is a</span><br><span class="line">                 string of the form YYYY MM DD HH MM SS[ DST].   The  contents</span><br><span class="line">                 of  the  string are six or seven numbers representing respec‐</span><br><span class="line">                 tively the full year including century, the month from  1  to</span><br><span class="line">                 12,  the  day  of the month from 1 to 31, the hour of the day</span><br><span class="line">                 from 0 to 23, the minute from 0 to 59, the second from  0  to</span><br><span class="line">                 60,  and  an  optional  daylight  saving flag.  The values of</span><br><span class="line">                 these numbers need not be within the  ranges  specified;  for</span><br><span class="line">                 example,  an  hour  of  -1 means 1 hour before midnight.  The</span><br><span class="line">                 origin-zero Gregorian calendar is assumed, with year  0  pre‐</span><br><span class="line">                 ceding  year  1  and  year  -1 preceding year 0.  The time is</span><br><span class="line">                 assumed to be in the local timezone.  If the daylight  saving</span><br><span class="line">                 flag  is  positive, the time is assumed to be daylight saving</span><br><span class="line">                 time; if zero, the time is assumed to be standard  time;  and</span><br><span class="line">                 if  negative  (the  default),  mktime() attempts to determine</span><br><span class="line">                 whether daylight saving time is in effect for  the  specified</span><br><span class="line">                 time.  If datespec does not contain enough elements or if the</span><br><span class="line">                 resulting time is out of range, mktime() returns -1.</span><br><span class="line"></span><br><span class="line">       strftime([format [, timestamp[, utc-flag]]])</span><br><span class="line">                 Format timestamp according to the  specification  in  format.</span><br><span class="line">                 If  utc-flag  is  present  and  is  non-zero or non-null, the</span><br><span class="line">                 result is in UTC, otherwise the result is in local time.  The</span><br><span class="line">                 timestamp  should  be  of  the  same form as returned by sys‐</span><br><span class="line">                 time().  If timestamp is missing, the current time of day  is</span><br><span class="line">                 used.   If  format is missing, a default format equivalent to</span><br><span class="line">                 the output of date(1) is used.  The default format is  avail‐</span><br><span class="line">                 able  in PROCINFO[&quot;strftime&quot;].  See the specification for the</span><br><span class="line">                 strftime() function in ISO C for the format conversions  that</span><br><span class="line">                 are guaranteed to be available.</span><br><span class="line"></span><br><span class="line">       systime() Return the current time of day as the number of seconds since</span><br><span class="line">                 the Epoch (1970-01-01 00:00:00 UTC on POSIX systems).</span><br><span class="line"></span><br><span class="line">   Bit Manipulations Functions</span><br><span class="line">       Gawk supplies the following bit manipulation functions.  They  work  by</span><br><span class="line">       converting  double-precision  floating  point values to uintmax_t inte‐</span><br><span class="line">       gers, doing the operation, and  then  converting  the  result  back  to</span><br><span class="line">       floating point.  The functions are:</span><br><span class="line"></span><br><span class="line">       and(v1, v2 [, ...]) Return  the  bitwise  AND of the values provided in</span><br><span class="line">                           the argument list.  There must be at least two.</span><br><span class="line"></span><br><span class="line">       compl(val)          Return the bitwise complement of val.</span><br><span class="line"></span><br><span class="line">       lshift(val, count)  Return the value of  val,  shifted  left  by  count</span><br><span class="line">                           bits.</span><br><span class="line"></span><br><span class="line">       or(v1, v2 [, ...])  Return the bitwise OR of the values provided in the</span><br><span class="line">                           argument list.  There must be at least two.</span><br><span class="line"></span><br><span class="line">       rshift(val, count)  Return the value of val,  shifted  right  by  count</span><br><span class="line">                           bits.</span><br><span class="line"></span><br><span class="line">       xor(v1, v2 [, ...]) Return  the  bitwise  XOR of the values provided in</span><br><span class="line">                           the argument list.  There must be at least two.</span><br><span class="line"></span><br><span class="line">   Type Function</span><br><span class="line">       The following function is for use with multidimensional arrays.</span><br><span class="line"></span><br><span class="line">       isarray(x)</span><br><span class="line">              Return true if x is an array, false otherwise.</span><br><span class="line"></span><br><span class="line">   Internationalization Functions</span><br><span class="line">       The following functions may be used from within your  AWK  program  for</span><br><span class="line">       translating strings at run-time.  For full details, see GAWK: Effective</span><br><span class="line">       AWK Programming.</span><br><span class="line"></span><br><span class="line">       bindtextdomain(directory [, domain])</span><br><span class="line">              Specify the directory where gawk looks for the  .gmo  files,  in</span><br><span class="line">              case they will not or cannot be placed in the ``standard&apos;&apos; loca‐</span><br><span class="line">              tions (e.g., during testing).  It returns  the  directory  where</span><br><span class="line">              domain is ``bound.&apos;&apos;</span><br><span class="line">              The  default domain is the value of TEXTDOMAIN.  If directory is</span><br><span class="line">              the null string (&quot;&quot;), then bindtextdomain() returns the  current</span><br><span class="line">              binding for the given domain.</span><br><span class="line"></span><br><span class="line">       dcgettext(string [, domain [, category]])</span><br><span class="line">              Return  the  translation  of  string  in  text domain domain for</span><br><span class="line">              locale category category.  The default value for domain  is  the</span><br><span class="line">              current  value of TEXTDOMAIN.  The default value for category is</span><br><span class="line">              &quot;LC_MESSAGES&quot;.</span><br><span class="line">              If you supply a value for category, it must be a string equal to</span><br><span class="line">              one  of the known locale categories described in GAWK: Effective</span><br><span class="line">              AWK Programming.  You must  also  supply  a  text  domain.   Use</span><br><span class="line">              TEXTDOMAIN if you want to use the current domain.</span><br><span class="line"></span><br><span class="line">       dcngettext(string1, string2, number [, domain [, category]])</span><br><span class="line">              Return  the  plural  form  used for number of the translation of</span><br><span class="line">              string1 and string2 in text domain domain  for  locale  category</span><br><span class="line">              category.   The default value for domain is the current value of</span><br><span class="line">              TEXTDOMAIN.  The default value for category is &quot;LC_MESSAGES&quot;.</span><br><span class="line">              If you supply a value for category, it must be a string equal to</span><br><span class="line">              one  of the known locale categories described in GAWK: Effective</span><br><span class="line">              AWK Programming.  You must  also  supply  a  text  domain.   Use</span><br><span class="line">              TEXTDOMAIN if you want to use the current domain.</span><br><span class="line"></span><br><span class="line">USER-DEFINED FUNCTIONS</span><br><span class="line">       Functions in AWK are defined as follows:</span><br><span class="line"></span><br><span class="line">              function name(parameter list) &#123; statements &#125;</span><br><span class="line"></span><br><span class="line">       Functions  are executed when they are called from within expressions in</span><br><span class="line">       either patterns or actions.  Actual parameters supplied in the function</span><br><span class="line">       call  are  used  to  instantiate  the formal parameters declared in the</span><br><span class="line">       function.  Arrays are passed by reference, other variables  are  passed</span><br><span class="line">       by value.</span><br><span class="line"></span><br><span class="line">       Since  functions were not originally part of the AWK language, the pro‐</span><br><span class="line">       vision for local variables is rather clumsy: They are declared as extra</span><br><span class="line">       parameters  in the parameter list.  The convention is to separate local</span><br><span class="line">       variables from real parameters by extra spaces in the  parameter  list.</span><br><span class="line">       For example:</span><br><span class="line"></span><br><span class="line">              function  f(p, q,     a, b)   # a and b are local</span><br><span class="line">              &#123;</span><br><span class="line">                   ...</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              /abc/     &#123; ... ; f(1, 2) ; ... &#125;</span><br><span class="line"></span><br><span class="line">       The left parenthesis in a function call is required to immediately fol‐</span><br><span class="line">       low the function name, without any intervening whitespace.  This avoids</span><br><span class="line">       a  syntactic  ambiguity with the concatenation operator.  This restric‐</span><br><span class="line">       tion does not apply to the built-in functions listed above.</span><br><span class="line"></span><br><span class="line">       Functions may call each other and may be recursive.   Function  parame‐</span><br><span class="line">       ters used as local variables are initialized to the null string and the</span><br><span class="line">       number zero upon function invocation.</span><br><span class="line"></span><br><span class="line">       Use return expr to return a value from a function.  The return value is</span><br><span class="line">       undefined if no value is provided, or if the function returns by “fall‐</span><br><span class="line">       ing off” the end.</span><br><span class="line"></span><br><span class="line">       As a gawk extension, functions may be called indirectly.  To  do  this,</span><br><span class="line">       assign  the  name of the function to be called, as a string, to a vari‐</span><br><span class="line">       able.  Then use the variable as if it were the name of a function, pre‐</span><br><span class="line">       fixed with an @ sign, like so:</span><br><span class="line">              function myfunc()</span><br><span class="line">              &#123;</span><br><span class="line">                   print &quot;myfunc called&quot;</span><br><span class="line">                   ...</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              &#123;    ...</span><br><span class="line">                   the_func = &quot;myfunc&quot;</span><br><span class="line">                   @the_func()    # call through the_func to myfunc</span><br><span class="line">                   ...</span><br><span class="line">              &#125;</span><br><span class="line">       As  of  version 4.1.2, this works with user-defined functions, built-in</span><br><span class="line">       functions, and extension functions.</span><br><span class="line"></span><br><span class="line">       If --lint has been provided, gawk warns about calls to undefined  func‐</span><br><span class="line">       tions  at  parse  time,  instead  of at run time.  Calling an undefined</span><br><span class="line">       function at run time is a fatal error.</span><br><span class="line"></span><br><span class="line">       The word func may be used in place of function, although this is depre‐</span><br><span class="line">       cated.</span><br><span class="line"></span><br><span class="line">DYNAMICALLY LOADING NEW FUNCTIONS</span><br><span class="line">       You  can  dynamically  add  new  built-in functions to the running gawk</span><br><span class="line">       interpreter with the @load statement.  The full details are beyond  the</span><br><span class="line">       scope of this manual page; see GAWK: Effective AWK Programming.</span><br><span class="line"></span><br><span class="line">SIGNALS</span><br><span class="line">       The  gawk  profiler  accepts  two signals.  SIGUSR1 causes it to dump a</span><br><span class="line">       profile and function call stack to the profile file,  which  is  either</span><br><span class="line">       awkprof.out,  or whatever file was named with the --profile option.  It</span><br><span class="line">       then continues to run.  SIGHUP causes gawk  to  dump  the  profile  and</span><br><span class="line">       function call stack and then exit.</span><br><span class="line"></span><br><span class="line">INTERNATIONALIZATION</span><br><span class="line">       String constants are sequences of characters enclosed in double quotes.</span><br><span class="line">       In non-English speaking environments, it is possible to mark strings in</span><br><span class="line">       the AWK program as requiring translation to the local natural language.</span><br><span class="line">       Such strings are marked in the AWK program with  a  leading  underscore</span><br><span class="line">       (“_”).  For example,</span><br><span class="line"></span><br><span class="line">              gawk &apos;BEGIN &#123; print &quot;hello, world&quot; &#125;&apos;</span><br><span class="line"></span><br><span class="line">       always prints hello, world.  But,</span><br><span class="line"></span><br><span class="line">              gawk &apos;BEGIN &#123; print _&quot;hello, world&quot; &#125;&apos;</span><br><span class="line"></span><br><span class="line">       might print bonjour, monde in France.</span><br><span class="line"></span><br><span class="line">       There are several steps involved in producing and running a localizable</span><br><span class="line">       AWK program.</span><br><span class="line"></span><br><span class="line">       1.  Add a BEGIN action to assign a value to the TEXTDOMAIN variable  to</span><br><span class="line">           set the text domain to a name associated with your program:</span><br><span class="line"></span><br><span class="line">                BEGIN &#123; TEXTDOMAIN = &quot;myprog&quot; &#125;</span><br><span class="line"></span><br><span class="line">           This  allows  gawk  to find the .gmo file associated with your pro‐</span><br><span class="line">           gram.  Without this step, gawk uses the messages text domain, which</span><br><span class="line">           likely does not contain translations for your program.</span><br><span class="line"></span><br><span class="line">       2.  Mark  all  strings  that  should  be translated with leading under‐</span><br><span class="line">           scores.</span><br><span class="line"></span><br><span class="line">       3.  If necessary, use the dcgettext() and/or bindtextdomain() functions</span><br><span class="line">           in your program, as appropriate.</span><br><span class="line"></span><br><span class="line">       4.  Run  gawk  --gen-pot  -f myprog.awk &gt; myprog.pot to generate a .pot</span><br><span class="line">           file for your program.</span><br><span class="line"></span><br><span class="line">       5.  Provide appropriate translations, and build and install the  corre‐</span><br><span class="line">           sponding .gmo files.</span><br><span class="line"></span><br><span class="line">       The internationalization features are described in full detail in GAWK:</span><br><span class="line">       Effective AWK Programming.</span><br><span class="line"></span><br><span class="line">POSIX COMPATIBILITY</span><br><span class="line">       A primary goal for gawk is compatibility with the  POSIX  standard,  as</span><br><span class="line">       well as with the latest version of Brian Kernighan&apos;s awk.  To this end,</span><br><span class="line">       gawk incorporates the following user visible  features  which  are  not</span><br><span class="line">       described  in  the AWK book, but are part of the Brian Kernighan&apos;s ver‐</span><br><span class="line">       sion of awk, and are in the POSIX standard.</span><br><span class="line"></span><br><span class="line">       The book indicates that command line variable assignment  happens  when</span><br><span class="line">       awk  would  otherwise  open  the argument as a file, which is after the</span><br><span class="line">       BEGIN rule is executed.  However, in earlier implementations, when such</span><br><span class="line">       an assignment appeared before any file names, the assignment would hap‐</span><br><span class="line">       pen before the BEGIN rule was run.  Applications came to depend on this</span><br><span class="line">       “feature.”   When  awk  was  changed to match its documentation, the -v</span><br><span class="line">       option for assigning variables before program execution  was  added  to</span><br><span class="line">       accommodate  applications  that  depended upon the old behavior.  (This</span><br><span class="line">       feature was agreed upon by both  the  Bell  Laboratories  and  the  GNU</span><br><span class="line">       developers.)</span><br><span class="line"></span><br><span class="line">       When  processing arguments, gawk uses the special option “--” to signal</span><br><span class="line">       the end of arguments.  In compatibility mode, it warns about but other‐</span><br><span class="line">       wise  ignores  undefined  options.  In normal operation, such arguments</span><br><span class="line">       are passed on to the AWK program for it to process.</span><br><span class="line"></span><br><span class="line">       The AWK book does not define the return value of  srand().   The  POSIX</span><br><span class="line">       standard has it return the seed it was using, to allow keeping track of</span><br><span class="line">       random number sequences.  Therefore srand() in gawk  also  returns  its</span><br><span class="line">       current seed.</span><br><span class="line"></span><br><span class="line">       Other  new features are: The use of multiple -f options (from MKS awk);</span><br><span class="line">       the ENVIRON array; the \a, and \v escape sequences (done originally  in</span><br><span class="line">       gawk  and  fed  back into the Bell Laboratories version); the tolower()</span><br><span class="line">       and toupper() built-in functions (from the Bell Laboratories  version);</span><br><span class="line">       and  the  ISO  C conversion specifications in printf (done first in the</span><br><span class="line">       Bell Laboratories version).</span><br><span class="line"></span><br><span class="line">HISTORICAL FEATURES</span><br><span class="line">       There is one feature of historical AWK implementations that  gawk  sup‐</span><br><span class="line">       ports:  It  is possible to call the length() built-in function not only</span><br><span class="line">       with no argument, but even without parentheses!  Thus,</span><br><span class="line"></span><br><span class="line">              a = length     # Holy Algol 60, Batman!</span><br><span class="line"></span><br><span class="line">       is the same as either of</span><br><span class="line"></span><br><span class="line">              a = length()</span><br><span class="line">              a = length($0)</span><br><span class="line"></span><br><span class="line">       Using this feature is poor practice, and gawk issues  a  warning  about</span><br><span class="line">       its use if --lint is specified on the command line.</span><br><span class="line"></span><br><span class="line">GNU EXTENSIONS</span><br><span class="line">       Gawk  has  a  too-large  number  of  extensions to POSIX awk.  They are</span><br><span class="line">       described in this section.  All the extensions described  here  can  be</span><br><span class="line">       disabled by invoking gawk with the --traditional or --posix options.</span><br><span class="line"></span><br><span class="line">       The following features of gawk are not available in POSIX awk.</span><br><span class="line"></span><br><span class="line">       · No  path  search  is  performed  for  files  named via the -f option.</span><br><span class="line">         Therefore the AWKPATH environment variable is not special.</span><br><span class="line"></span><br><span class="line">       · There is no facility for doing file inclusion (gawk&apos;s @include mecha‐</span><br><span class="line">         nism).</span><br><span class="line"></span><br><span class="line">       · There  is no facility for dynamically adding new functions written in</span><br><span class="line">         C (gawk&apos;s @load mechanism).</span><br><span class="line"></span><br><span class="line">       · The \x escape sequence.  (Disabled with --posix.)</span><br><span class="line"></span><br><span class="line">       · The ability to  continue  lines  after  ?   and  :.   (Disabled  with</span><br><span class="line">         --posix.)</span><br><span class="line"></span><br><span class="line">       · Octal and hexadecimal constants in AWK programs.</span><br><span class="line"></span><br><span class="line">       · The ARGIND, BINMODE, ERRNO, LINT, RT and TEXTDOMAIN variables are not</span><br><span class="line">         special.</span><br><span class="line"></span><br><span class="line">       · The IGNORECASE variable and its side-effects are not available.</span><br><span class="line"></span><br><span class="line">       · The FIELDWIDTHS variable and fixed-width field splitting.</span><br><span class="line"></span><br><span class="line">       · The FPAT variable and field splitting based on field values.</span><br><span class="line"></span><br><span class="line">       · The PROCINFO array is not available.</span><br><span class="line"></span><br><span class="line">       · The use of RS as a regular expression.</span><br><span class="line"></span><br><span class="line">       · The special file names available for I/O redirection are  not  recog‐</span><br><span class="line">         nized.</span><br><span class="line"></span><br><span class="line">       · The |&amp; operator for creating co-processes.</span><br><span class="line"></span><br><span class="line">       · The BEGINFILE and ENDFILE special patterns are not available.</span><br><span class="line"></span><br><span class="line">       · The  ability to split out individual characters using the null string</span><br><span class="line">         as the value of FS, and as the third argument to split().</span><br><span class="line"></span><br><span class="line">       · An optional fourth argument  to  split()  to  receive  the  separator</span><br><span class="line">         texts.</span><br><span class="line"></span><br><span class="line">       · The optional second argument to the close() function.</span><br><span class="line"></span><br><span class="line">       · The optional third argument to the match() function.</span><br><span class="line"></span><br><span class="line">       · The ability to use positional specifiers with printf and sprintf().</span><br><span class="line"></span><br><span class="line">       · The ability to pass an array to length().</span><br><span class="line"></span><br><span class="line">       · The and(), asort(), asorti(), bindtextdomain(), compl(), dcgettext(),</span><br><span class="line">         dcngettext(),  gensub(),  lshift(),   mktime(),   or(),   patsplit(),</span><br><span class="line">         rshift(), strftime(), strtonum(), systime() and xor() functions.</span><br><span class="line"></span><br><span class="line">       · Localizable strings.</span><br><span class="line"></span><br><span class="line">       The  AWK book does not define the return value of the close() function.</span><br><span class="line">       Gawk&apos;s close() returns the value from  fclose(3),  or  pclose(3),  when</span><br><span class="line">       closing an output file or pipe, respectively.  It returns the process&apos;s</span><br><span class="line">       exit status when closing an input pipe.  The return value is -1 if  the</span><br><span class="line">       named file, pipe or co-process was not opened with a redirection.</span><br><span class="line"></span><br><span class="line">       When  gawk is invoked with the --traditional option, if the fs argument</span><br><span class="line">       to the -F option is “t”, then FS is set to  the  tab  character.   Note</span><br><span class="line">       that  typing  gawk  -F\t ...  simply causes the shell to quote the “t,”</span><br><span class="line">       and does not pass “\t” to the -F option.  Since this is a  rather  ugly</span><br><span class="line">       special  case, it is not the default behavior.  This behavior also does</span><br><span class="line">       not occur if --posix has been specified.  To really get a tab character</span><br><span class="line">       as  the  field  separator, it is best to use single quotes: gawk -F&apos;\t&apos;</span><br><span class="line">       ....</span><br><span class="line"></span><br><span class="line">ENVIRONMENT VARIABLES</span><br><span class="line">       The AWKPATH environment variable can be  used  to  provide  a  list  of</span><br><span class="line">       directories that gawk searches when looking for files named via the -f,</span><br><span class="line">       --file, -i and --include options.  If the  initial  search  fails,  the</span><br><span class="line">       path is searched again after appending .awk to the filename.</span><br><span class="line"></span><br><span class="line">       The  AWKLIBPATH  environment  variable can be used to provide a list of</span><br><span class="line">       directories that gawk searches when looking for files named via the  -l</span><br><span class="line">       and --load options.</span><br><span class="line"></span><br><span class="line">       The  GAWK_READ_TIMEOUT  environment  variable  can be used to specify a</span><br><span class="line">       timeout in milliseconds for reading input from a terminal, pipe or two-</span><br><span class="line">       way communication including sockets.</span><br><span class="line"></span><br><span class="line">       For  connection to a remote host via socket, GAWK_SOCK_RETRIES controls</span><br><span class="line">       the number of retries, and GAWK_MSEC_SLEEP  and  the  interval  between</span><br><span class="line">       retries.   The interval is in milliseconds. On systems that do not sup‐</span><br><span class="line">       port usleep(3), the value is rounded up to an integral number  of  sec‐</span><br><span class="line">       onds.</span><br><span class="line"></span><br><span class="line">       If POSIXLY_CORRECT exists in the environment, then gawk behaves exactly</span><br><span class="line">       as if --posix had been specified on the command line.   If  --lint  has</span><br><span class="line">       been specified, gawk issues a warning message to this effect.</span><br><span class="line"></span><br><span class="line">EXIT STATUS</span><br><span class="line">       If  the  exit  statement is used with a value, then gawk exits with the</span><br><span class="line">       numeric value given to it.</span><br><span class="line"></span><br><span class="line">       Otherwise, if there were no problems during execution, gawk exits  with</span><br><span class="line">       the value of the C constant EXIT_SUCCESS.  This is usually zero.</span><br><span class="line"></span><br><span class="line">       If  an  error  occurs,  gawk  exits  with  the  value of the C constant</span><br><span class="line">       EXIT_FAILURE.  This is usually one.</span><br><span class="line"></span><br><span class="line">       If gawk exits because of a fatal error, the exit status is 2.  On  non-</span><br><span class="line">       POSIX systems, this value may be mapped to EXIT_FAILURE.</span><br><span class="line"></span><br><span class="line">VERSION INFORMATION</span><br><span class="line">       This man page documents gawk, version 4.1.</span><br><span class="line"></span><br><span class="line">AUTHORS</span><br><span class="line">       The original version of UNIX awk was designed and implemented by Alfred</span><br><span class="line">       Aho, Peter Weinberger, and Brian Kernighan of Bell Laboratories.  Brian</span><br><span class="line">       Kernighan continues to maintain and enhance it.</span><br><span class="line"></span><br><span class="line">       Paul  Rubin  and  Jay  Fenlason, of the Free Software Foundation, wrote</span><br><span class="line">       gawk, to be compatible with the original version of awk distributed  in</span><br><span class="line">       Seventh  Edition  UNIX.   John Woods contributed a number of bug fixes.</span><br><span class="line">       David Trueman, with contributions from Arnold Robbins, made  gawk  com‐</span><br><span class="line">       patible  with  the new version of UNIX awk.  Arnold Robbins is the cur‐</span><br><span class="line">       rent maintainer.</span><br><span class="line"></span><br><span class="line">       See GAWK: Effective AWK Programming for a full list of the contributors</span><br><span class="line">       to gawk and its documentation.</span><br><span class="line"></span><br><span class="line">       See the README file in the gawk distribution for up-to-date information</span><br><span class="line">       about maintainers and which ports are currently supported.</span><br><span class="line"></span><br><span class="line">BUG REPORTS</span><br><span class="line">       If you find a  bug  in  gawk,  please  send  electronic  mail  to  bug-</span><br><span class="line">       gawk@gnu.org.   Please  include your operating system and its revision,</span><br><span class="line">       the version of gawk (from gawk --version), which C compiler you used to</span><br><span class="line">       compile  it,  and a test program and data that are as small as possible</span><br><span class="line">       for reproducing the problem.</span><br><span class="line"></span><br><span class="line">       Before sending a bug report, please do the  following  things.   First,</span><br><span class="line">       verify  that  you  have the latest version of gawk.  Many bugs (usually</span><br><span class="line">       subtle ones) are fixed at each release, and if yours is  out  of  date,</span><br><span class="line">       the  problem  may already have been solved.  Second, please see if set‐</span><br><span class="line">       ting the environment variable  LC_ALL  to  LC_ALL=C  causes  things  to</span><br><span class="line">       behave  as  you  expect. If so, it&apos;s a locale issue, and may or may not</span><br><span class="line">       really be a bug.  Finally, please read this man page and the  reference</span><br><span class="line">       manual  carefully  to  be  sure that what you think is a bug really is,</span><br><span class="line">       instead of just a quirk in the language.</span><br><span class="line"></span><br><span class="line">       Whatever you do, do NOT post a bug report in comp.lang.awk.  While  the</span><br><span class="line">       gawk  developers  occasionally read this newsgroup, posting bug reports</span><br><span class="line">       there is an unreliable way to report bugs.   Instead,  please  use  the</span><br><span class="line">       electronic mail addresses given above.  Really.</span><br><span class="line"></span><br><span class="line">       If you&apos;re using a GNU/Linux or BSD-based system, you may wish to submit</span><br><span class="line">       a bug report to the vendor of  your  distribution.   That&apos;s  fine,  but</span><br><span class="line">       please send a copy to the official email address as well, since there&apos;s</span><br><span class="line">       no guarantee that the bug report will be forwarded to  the  gawk  main‐</span><br><span class="line">       tainer.</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">       The  -F option is not necessary given the command line variable assign‐</span><br><span class="line">       ment feature; it remains only for backwards compatibility.</span><br><span class="line"></span><br><span class="line">SEE ALSO</span><br><span class="line">       egrep(1),  sed(1),  getpid(2),   getppid(2),   getpgrp(2),   getuid(2),</span><br><span class="line">       geteuid(2), getgid(2), getegid(2), getgroups(2), usleep(3)</span><br><span class="line"></span><br><span class="line">       The  AWK Programming Language, Alfred V. Aho, Brian W. Kernighan, Peter</span><br><span class="line">       J. Weinberger, Addison-Wesley, 1988.  ISBN 0-201-07981-X.</span><br><span class="line"></span><br><span class="line">       GAWK: Effective AWK Programming, Edition 4.1,  shipped  with  the  gawk</span><br><span class="line">       source.   The  current  version of this document is available online at</span><br><span class="line">       http://www.gnu.org/software/gawk/manual.</span><br><span class="line"></span><br><span class="line">EXAMPLES</span><br><span class="line">       Print and sort the login names of all users:</span><br><span class="line"></span><br><span class="line">            BEGIN     &#123; FS = &quot;:&quot; &#125;</span><br><span class="line">                 &#123; print $1 | &quot;sort&quot; &#125;</span><br><span class="line"></span><br><span class="line">       Count lines in a file:</span><br><span class="line"></span><br><span class="line">                 &#123; nlines++ &#125;</span><br><span class="line">            END  &#123; print nlines &#125;</span><br><span class="line"></span><br><span class="line">       Precede each line by its number in the file:</span><br><span class="line"></span><br><span class="line">            &#123; print FNR, $0 &#125;</span><br><span class="line"></span><br><span class="line">       Concatenate and line number (a variation on a theme):</span><br><span class="line"></span><br><span class="line">            &#123; print NR, $0 &#125;</span><br><span class="line"></span><br><span class="line">       Run an external command for particular lines of data:</span><br><span class="line"></span><br><span class="line">            tail -f access_log |</span><br><span class="line">            awk &apos;/myhome.html/ &#123; system(&quot;nmap &quot; $1 &quot;&gt;&gt; logdir/myhome.html&quot;) &#125;&apos;</span><br><span class="line"></span><br><span class="line">ACKNOWLEDGEMENTS</span><br><span class="line">       Brian Kernighan provided valuable assistance during testing and  debug‐</span><br><span class="line">       ging.  We thank him.</span><br><span class="line"></span><br><span class="line">COPYING PERMISSIONS</span><br><span class="line">       Copyright © 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,</span><br><span class="line">       2001, 2002, 2003, 2004, 2005, 2007, 2009, 2010, 2011, 2012, 2013,  2014</span><br><span class="line">       Free Software Foundation, Inc.</span><br><span class="line"></span><br><span class="line">       Permission  is  granted  to make and distribute verbatim copies of this</span><br><span class="line">       manual page provided the copyright notice and  this  permission  notice</span><br><span class="line">       are preserved on all copies.</span><br><span class="line"></span><br><span class="line">       Permission  is granted to copy and distribute modified versions of this</span><br><span class="line">       manual page under the conditions for verbatim  copying,  provided  that</span><br><span class="line">       the  entire  resulting derived work is distributed under the terms of a</span><br><span class="line">       permission notice identical to this one.</span><br><span class="line"></span><br><span class="line">       Permission is granted to copy and distribute translations of this  man‐</span><br><span class="line">       ual page into another language, under the above conditions for modified</span><br><span class="line">       versions, except that this permission notice may be stated in a  trans‐</span><br><span class="line">       lation approved by the Foundation.</span><br><span class="line"></span><br><span class="line">Free Software Foundation          Aug 03 2014                          GAWK(1)</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line">SED(1)                           User Commands                          SED(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       sed - stream editor for filtering and transforming text</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       sed [OPTION]... &#123;script-only-if-no-other-script&#125; [input-file]...</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Sed  is a stream editor.  A stream editor is used to perform basic text</span><br><span class="line">       transformations on an input stream (a file or input from  a  pipeline).</span><br><span class="line">       While  in  some  ways similar to an editor which permits scripted edits</span><br><span class="line">       (such as ed), sed works by making only one pass over the input(s),  and</span><br><span class="line">       is consequently more efficient.  But it is sed&apos;s ability to filter text</span><br><span class="line">       in a pipeline which particularly distinguishes it from other  types  of</span><br><span class="line">       editors.</span><br><span class="line"></span><br><span class="line">       -n, --quiet, --silent</span><br><span class="line"></span><br><span class="line">              suppress automatic printing of pattern space</span><br><span class="line"></span><br><span class="line">       -e script, --expression=script</span><br><span class="line"></span><br><span class="line">              add the script to the commands to be executed</span><br><span class="line"></span><br><span class="line">       -f script-file, --file=script-file</span><br><span class="line"></span><br><span class="line">              add the contents of script-file to the commands to be executed</span><br><span class="line"></span><br><span class="line">       --follow-symlinks</span><br><span class="line"></span><br><span class="line">              follow symlinks when processing in place</span><br><span class="line"></span><br><span class="line">       -i[SUFFIX], --in-place[=SUFFIX]</span><br><span class="line"></span><br><span class="line">              edit files in place (makes backup if SUFFIX supplied)</span><br><span class="line"></span><br><span class="line">       -l N, --line-length=N</span><br><span class="line"></span><br><span class="line">              specify the desired line-wrap length for the `l&apos; command</span><br><span class="line"></span><br><span class="line">       --posix</span><br><span class="line"></span><br><span class="line">              disable all GNU extensions.</span><br><span class="line"></span><br><span class="line">       -r, --regexp-extended</span><br><span class="line"></span><br><span class="line">              use extended regular expressions in the script.</span><br><span class="line"></span><br><span class="line">       -s, --separate</span><br><span class="line"></span><br><span class="line">              consider  files  as  separate rather than as a single continuous</span><br><span class="line">              long stream.</span><br><span class="line"></span><br><span class="line">       -u, --unbuffered</span><br><span class="line"></span><br><span class="line">              load minimal amounts of data from the input files and flush  the</span><br><span class="line">              output buffers more often</span><br><span class="line"></span><br><span class="line">       -z, --null-data</span><br><span class="line"></span><br><span class="line">              separate lines by NUL characters</span><br><span class="line"></span><br><span class="line">       --help</span><br><span class="line">              display this help and exit</span><br><span class="line"></span><br><span class="line">       --version</span><br><span class="line">              output version information and exit</span><br><span class="line"></span><br><span class="line">       If  no  -e, --expression, -f, or --file option is given, then the first</span><br><span class="line">       non-option argument is taken as  the  sed  script  to  interpret.   All</span><br><span class="line">       remaining  arguments  are  names  of input files; if no input files are</span><br><span class="line">       specified, then the standard input is read.</span><br><span class="line"></span><br><span class="line">       GNU sed home page:  &lt;http://www.gnu.org/software/sed/&gt;.   General  help</span><br><span class="line">       using  GNU software: &lt;http://www.gnu.org/gethelp/&gt;.  E-mail bug reports</span><br><span class="line">       to: &lt;bug-sed@gnu.org&gt;.  Be sure to include the word  ``sed&apos;&apos;  somewhere</span><br><span class="line">       in the ``Subject:&apos;&apos; field.</span><br><span class="line"></span><br><span class="line">COMMAND SYNOPSIS</span><br><span class="line">       This is just a brief synopsis of sed commands to serve as a reminder to</span><br><span class="line">       those who already know sed; other documentation (such  as  the  texinfo</span><br><span class="line">       document) must be consulted for fuller descriptions.</span><br><span class="line"></span><br><span class="line">   Zero-address ``commands&apos;&apos;</span><br><span class="line">       : label</span><br><span class="line">              Label for b and t commands.</span><br><span class="line"></span><br><span class="line">       #comment</span><br><span class="line">              The  comment  extends until the next newline (or the end of a -e</span><br><span class="line">              script fragment).</span><br><span class="line"></span><br><span class="line">       &#125;      The closing bracket of a &#123; &#125; block.</span><br><span class="line"></span><br><span class="line">   Zero- or One- address commands</span><br><span class="line">       =      Print the current line number.</span><br><span class="line"></span><br><span class="line">       a \</span><br><span class="line"></span><br><span class="line">       text   Append text, which has each embedded newline preceded by a back‐</span><br><span class="line">              slash.</span><br><span class="line"></span><br><span class="line">       i \</span><br><span class="line"></span><br><span class="line">       text   Insert text, which has each embedded newline preceded by a back‐</span><br><span class="line">              slash.</span><br><span class="line"></span><br><span class="line">       q [exit-code]</span><br><span class="line">              Immediately quit the sed  script  without  processing  any  more</span><br><span class="line">              input,  except  that  if  auto-print is not disabled the current</span><br><span class="line">              pattern space will be printed.  The exit code argument is a  GNU</span><br><span class="line">              extension.</span><br><span class="line"></span><br><span class="line">       Q [exit-code]</span><br><span class="line">              Immediately  quit  the  sed  script  without processing any more</span><br><span class="line">              input.  This is a GNU extension.</span><br><span class="line"></span><br><span class="line">       r filename</span><br><span class="line">              Append text read from filename.</span><br><span class="line"></span><br><span class="line">       R filename</span><br><span class="line">              Append a line read from filename.  Each invocation of  the  com‐</span><br><span class="line">              mand reads a line from the file.  This is a GNU extension.</span><br><span class="line"></span><br><span class="line">   Commands which accept address ranges</span><br><span class="line">       &#123;      Begin a block of commands (end with a &#125;).</span><br><span class="line"></span><br><span class="line">       b label</span><br><span class="line">              Branch to label; if label is omitted, branch to end of script.</span><br><span class="line"></span><br><span class="line">       c \</span><br><span class="line"></span><br><span class="line">       text   Replace  the  selected  lines with text, which has each embedded</span><br><span class="line">              newline preceded by a backslash.</span><br><span class="line"></span><br><span class="line">       d      Delete pattern space.  Start next cycle.</span><br><span class="line"></span><br><span class="line">       D      If pattern space contains no newline, start a normal  new  cycle</span><br><span class="line">              as  if  the d command was issued.  Otherwise, delete text in the</span><br><span class="line">              pattern space up to the first newline, and  restart  cycle  with</span><br><span class="line">              the  resultant  pattern  space,  without  reading  a new line of</span><br><span class="line">              input.</span><br><span class="line"></span><br><span class="line">       h H    Copy/append pattern space to hold space.</span><br><span class="line"></span><br><span class="line">       g G    Copy/append hold space to pattern space.</span><br><span class="line"></span><br><span class="line">       l      List out the current line in a ``visually unambiguous&apos;&apos; form.</span><br><span class="line"></span><br><span class="line">       l width</span><br><span class="line">              List out the current line in a  ``visually  unambiguous&apos;&apos;  form,</span><br><span class="line">              breaking it at width characters.  This is a GNU extension.</span><br><span class="line"></span><br><span class="line">       n N    Read/append the next line of input into the pattern space.</span><br><span class="line"></span><br><span class="line">       p      Print the current pattern space.</span><br><span class="line"></span><br><span class="line">       P      Print  up  to  the first embedded newline of the current pattern</span><br><span class="line">              space.</span><br><span class="line"></span><br><span class="line">       s/regexp/replacement/</span><br><span class="line">              Attempt to match regexp against the pattern space.  If  success‐</span><br><span class="line">              ful,   replace  that  portion  matched  with  replacement.   The</span><br><span class="line">              replacement may contain the special character &amp; to refer to that</span><br><span class="line">              portion  of  the  pattern  space  which matched, and the special</span><br><span class="line">              escapes \1 through \9 to refer  to  the  corresponding  matching</span><br><span class="line">              sub-expressions in the regexp.</span><br><span class="line"></span><br><span class="line">       t label</span><br><span class="line">              If  a  s///  has  done  a successful substitution since the last</span><br><span class="line">              input line was read and since the last  t  or  T  command,  then</span><br><span class="line">              branch to label; if label is omitted, branch to end of script.</span><br><span class="line"></span><br><span class="line">       T label</span><br><span class="line">              If  no  s///  has  done a successful substitution since the last</span><br><span class="line">              input line was read and since the last  t  or  T  command,  then</span><br><span class="line">              branch  to  label; if label is omitted, branch to end of script.</span><br><span class="line">              This is a GNU extension.</span><br><span class="line"></span><br><span class="line">       w filename</span><br><span class="line">              Write the current pattern space to filename.</span><br><span class="line"></span><br><span class="line">       W filename</span><br><span class="line">              Write the first line of the current pattern space  to  filename.</span><br><span class="line">              This is a GNU extension.</span><br><span class="line"></span><br><span class="line">       x      Exchange the contents of the hold and pattern spaces.</span><br><span class="line"></span><br><span class="line">       y/source/dest/</span><br><span class="line">              Transliterate  the  characters in the pattern space which appear</span><br><span class="line">              in source to the corresponding character in dest.</span><br><span class="line"></span><br><span class="line">Addresses</span><br><span class="line">       Sed commands can be given with no addresses, in which case the  command</span><br><span class="line">       will  be  executed for all input lines; with one address, in which case</span><br><span class="line">       the command will only be executed for  input  lines  which  match  that</span><br><span class="line">       address;  or with two addresses, in which case the command will be exe‐</span><br><span class="line">       cuted for all input lines which match  the  inclusive  range  of  lines</span><br><span class="line">       starting  from  the first address and continuing to the second address.</span><br><span class="line">       Three things to note about address ranges: the  syntax  is  addr1,addr2</span><br><span class="line">       (i.e.,  the  addresses  are separated by a comma); the line which addr1</span><br><span class="line">       matched will always be accepted, even if addr2 selects an earlier line;</span><br><span class="line">       and  if  addr2 is a regexp, it will not be tested against the line that</span><br><span class="line">       addr1 matched.</span><br><span class="line"></span><br><span class="line">       After the address (or address-range), and before the command, a !   may</span><br><span class="line">       be inserted, which specifies that the command shall only be executed if</span><br><span class="line">       the address (or address-range) does not match.</span><br><span class="line"></span><br><span class="line">       The following address types are supported:</span><br><span class="line"></span><br><span class="line">       number Match only the specified line number (which  increments  cumula‐</span><br><span class="line">              tively  across  files,  unless the -s option is specified on the</span><br><span class="line">              command line).</span><br><span class="line"></span><br><span class="line">       first~step</span><br><span class="line">              Match every step&apos;th line starting with line first.  For example,</span><br><span class="line">              ``sed  -n  1~2p&apos;&apos;  will  print all the odd-numbered lines in the</span><br><span class="line">              input stream, and the address 2~5 will match every  fifth  line,</span><br><span class="line">              starting  with the second.  first can be zero; in this case, sed</span><br><span class="line">              operates as if it were equal to step.  (This is an extension.)</span><br><span class="line"></span><br><span class="line">       $      Match the last line.</span><br><span class="line"></span><br><span class="line">       /regexp/</span><br><span class="line">              Match lines matching the regular expression regexp.</span><br><span class="line"></span><br><span class="line">       \cregexpc</span><br><span class="line">              Match lines matching the regular expression regexp.  The  c  may</span><br><span class="line">              be any character.</span><br><span class="line"></span><br><span class="line">       GNU sed also supports some special 2-address forms:</span><br><span class="line"></span><br><span class="line">       0,addr2</span><br><span class="line">              Start  out  in  &quot;matched  first  address&quot;  state, until addr2 is</span><br><span class="line">              found.  This is similar to 1,addr2, except that if addr2 matches</span><br><span class="line">              the very first line of input the 0,addr2 form will be at the end</span><br><span class="line">              of its range, whereas the 1,addr2 form  will  still  be  at  the</span><br><span class="line">              beginning of its range.  This works only when addr2 is a regular</span><br><span class="line">              expression.</span><br><span class="line"></span><br><span class="line">       addr1,+N</span><br><span class="line">              Will match addr1 and the N lines following addr1.</span><br><span class="line"></span><br><span class="line">       addr1,~N</span><br><span class="line">              Will match addr1 and the lines following addr1  until  the  next</span><br><span class="line">              line whose input line number is a multiple of N.</span><br><span class="line"></span><br><span class="line">REGULAR EXPRESSIONS</span><br><span class="line">       POSIX.2 BREs should be supported, but they aren&apos;t completely because of</span><br><span class="line">       performance problems.  The \n sequence in a regular expression  matches</span><br><span class="line">       the newline character, and similarly for \a, \t, and other sequences.</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">       E-mail bug reports to bug-sed@gnu.org.  Also, please include the output</span><br><span class="line">       of ``sed --version&apos;&apos; in the body of your report if at all possible.</span><br><span class="line"></span><br><span class="line">AUTHOR</span><br><span class="line">       Written by Jay Fenlason, Tom Lord, Ken Pizzini, and Paolo Bonzini.  GNU</span><br><span class="line">       sed  home page: &lt;http://www.gnu.org/software/sed/&gt;.  General help using</span><br><span class="line">       GNU software: &lt;http://www.gnu.org/gethelp/&gt;.  E-mail  bug  reports  to:</span><br><span class="line">       &lt;bug-sed@gnu.org&gt;.   Be  sure  to include the word ``sed&apos;&apos; somewhere in</span><br><span class="line">       the ``Subject:&apos;&apos; field.</span><br><span class="line"></span><br><span class="line">COPYRIGHT</span><br><span class="line">       Copyright © 2012 Free Software Foundation, Inc.   License  GPLv3+:  GNU</span><br><span class="line">       GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;.</span><br><span class="line">       This  is  free  software:  you  are free to change and redistribute it.</span><br><span class="line">       There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line"></span><br><span class="line">SEE ALSO</span><br><span class="line">       awk(1), ed(1), grep(1), tr(1),  perlre(1),  sed.info,  any  of  various</span><br><span class="line">       books on sed, the sed FAQ (http://sed.sf.net/grabbag/tutorials/sed‐</span><br><span class="line">       faq.txt), http://sed.sf.net/grabbag/.</span><br><span class="line"></span><br><span class="line">       The full documentation for sed is maintained as a Texinfo manual.  If</span><br><span class="line">       the info and sed programs are properly installed at your site, the com‐</span><br><span class="line">       mand</span><br><span class="line"></span><br><span class="line">              info sed</span><br><span class="line"></span><br><span class="line">       should give you access to the complete manual.</span><br><span class="line"></span><br><span class="line">sed 4.2.2                        February 2016                          SED(1)</span><br></pre></td></tr></table></figure><hr><h3 id="文本编辑常用命令"><a href="#文本编辑常用命令" class="headerlink" title="文本编辑常用命令"></a>文本编辑常用命令</h3><ul><li>cat -b显示行号</li><li>ed　行文本编辑器</li><li>fmt　重排</li><li>gedit　</li><li>jed　ed改进</li><li>cut　cat改进</li><li>colrm　</li><li>comm</li><li>od</li><li>joe</li><li>aspell　检查拼写</li><li>col</li><li>view　只读</li><li>more　分屏</li><li>head　部分显示</li><li>cmp　文件属性比较</li><li>diff　文件内容比较</li><li>diffstat　</li><li>patch</li><li>csplit　按行数分割</li><li>uniq　显示重复出现的行</li><li>pr　</li><li>pico</li><li>tail　末尾</li><li>tac　反序</li><li>less</li><li>sort　排序</li><li>indent</li><li>tr</li><li>join</li><li>spell</li><li>tee　读取标准输入到标准输出或文件</li><li>wc　统计文本信息</li></ul><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>说好的总结基础，最后还是复制粘贴，毕竟时间宝贵，前人总结好的东西拿来用就是了，想起来一个段子：</p><blockquote><p>人生苦短，要学Python</p></blockquote>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>无序数组中找到第二大的数</title>
      <link href="/posts/59684/"/>
      <url>/posts/59684/</url>
      <content type="html"><![CDATA[<p>这是一道简单的面试题，要求时间复杂度为O(n)，很顺利的想到用两个值存储，以空间换时间，进阶可以使用快速排序的分治思想取巧。</p><a id="more"></a><hr><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>首先，引用一段话：</p><blockquote><p>好了，让我们来看一个示例（这个示例是昨天在微博上的一个讨论），这个题是——“找出无序数组中第2大的数”，几乎所有的人都用了O(n)的算法，我相信对于我们这些应试教育出来的人来说，不用排序用O(n)算法是很正常的事，连我都不由自主地认为O(n)算法是这个题的标准答案。我们太习惯于标准答案了，这是我国教育最悲哀的地方。（广义的洗脑就是让你的意识依赖于某个标准答案，然后通过给你标准答案让你不会思考而控制你）</p></blockquote><p>题为<a href="http://coolshell.cn/articles/8138.html/" target="_blank" rel="noopener">为什么我反对纯算法面试题</a>，作者是陈皓，写于2012年。</p><p>这个“学院派”和“工程师”的争论的问题在下面的评论区里已经展示的淋漓尽致，同样一个题还会出现在2016年秋季校招上，为什么我一点也不奇怪呢。</p><p>不谈支持与否，作者关于工程的观点还是十分精辟的：</p><blockquote><p>根据上面的需求分析，有软件工程经验的人的解法通常会这样：</p></blockquote><blockquote><p>  1）把数组排序，从大到小。</p></blockquote><blockquote><p>  2）于是你要第k大的数，就直接访问 array[k]。</p></blockquote><blockquote><p>  排序只需要一次，O(n*log(n))，然后，接下来的m次对FindKthMaxNum()的调用全是O(1)的，整体复杂度反而成了线性的。</p></blockquote><blockquote><p>  其实，上述的还不是工程式的最好的解法，因为，在业务中，那数组中的数据可能会是会变化的，所以，如果是用数组排序的话，有数据的改动会让我重新排序，这个太耗性能了，如果实际情况中会有很多的插入或删除操作，那么可以考虑使用B+树。</p></blockquote><p>可见，实际工程中不止要考虑算法的时间复杂度这么简单，对于<code>在无序数组中取出第i个值</code>这个问题，工程中使用先排序后取值是最便捷和常用的方式。</p><p>使用如下的方式虽然复杂度为O(n)，但在大数m次访问的时候，复杂度将变成<code>o(n*m)</code>，而排序后取值的访问时复杂度为<code>O(1)</code>。</p><hr><h3 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h3><p><strong>最简单的用两个值存储</strong>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findthesecond</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>; <span class="comment">// max</span></span><br><span class="line">    <span class="keyword">int</span> second=<span class="number">0</span>; <span class="comment">// second</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;size;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;max)&#123;</span><br><span class="line">            second=max;</span><br><span class="line">            max=arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arr[i]&lt;max&amp;&amp;arr[i]&gt;second)</span><br><span class="line">            second=arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> second;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用快速排序的思想</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// from the QuickSort</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">AdjustArray</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = left,j=right;</span><br><span class="line"><span class="keyword">int</span> x = arr[left];</span><br><span class="line"><span class="keyword">while</span> (i&lt;j) &#123;</span><br><span class="line"><span class="keyword">while</span> (i&lt;j&amp;&amp;arr[j]&gt;=x)</span><br><span class="line">j--;</span><br><span class="line"><span class="keyword">if</span> (i&lt;j) </span><br><span class="line">arr[i++]=arr[j];</span><br><span class="line"><span class="keyword">while</span> (i&lt;j&amp;&amp;arr[i]&lt;x)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (i&lt;j)</span><br><span class="line">arr[j--]=arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr[i]=x;</span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">// 返回基准数位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// find the n'nd min number</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindnMinNum</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> index = AdjustArray(arr,left,right); <span class="comment">// the index to divide</span></span><br><span class="line"><span class="keyword">if</span> (index-left+<span class="number">1</span> == n)</span><br><span class="line"><span class="keyword">return</span> arr[index];</span><br><span class="line"><span class="keyword">if</span> (index-left+<span class="number">1</span> &gt; n)</span><br><span class="line"><span class="keyword">return</span> FindnMinNum(arr,left,index<span class="number">-1</span>,n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> FindnMinNum(arr,index+<span class="number">1</span>,right,n-(index-left+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// find the n'nd max number</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindnMaxNum</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> index = AdjustArray(arr,left,right);</span><br><span class="line"><span class="keyword">if</span> (right-index+<span class="number">1</span> == n)</span><br><span class="line"><span class="keyword">return</span> arr[index];</span><br><span class="line"><span class="keyword">if</span> (right-index+<span class="number">1</span> &lt; n)</span><br><span class="line"><span class="keyword">return</span> FindnMaxNum(arr,index+<span class="number">1</span>,right,n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> FindnMaxNum(arr,left,index<span class="number">-1</span>,n-(right-index+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><p>各种排序的复杂度图表：</p><p><img src="http://o7myibfc7.bkt.clouddn.com/21457204_1326898064RUxx.jpg?imageView2/2/h/400/" alt="各种排序复杂度"></p>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu开机登录界面死循环</title>
      <link href="/posts/40658/"/>
      <url>/posts/40658/</url>
      <content type="html"><![CDATA[<p>关于Ubuntu 16.04突然无法开机，在登录界面进入死循环的解决方法。</p><a id="more"></a><hr><h3 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h3><p>首先，Ctrl+Alt+F1进入了命令行，试了一些重启命令无果，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service gdm3 restart</span><br></pre></td></tr></table></figure><p>这里补充一下在控制台临时使用英文的命令（中文乱码）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LANG=C</span><br></pre></td></tr></table></figure><p>随后remove了两个上次关机前安装的软件，还是无果。</p><p>看网上这个问题出现的主要地方有以下：</p><ul><li>显卡驱动</li><li>文件权限</li><li>安装了一些冲突的软件</li></ul><p>各种无果后十分发狂，随后才查找到了原来登录失败会生成如下的log文件：</p><p><code>/home/user/.xsession-errors</code></p><p>主要的几行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(WARN-6410 /build/fcitx-J2yftF/fcitx-4.2.9.1/src/lib/fcitx-config/fcitx-config.c:922) 配置项不合法:  行150 缺少&apos;=&apos;</span><br><span class="line">(WARN-6410 /build/fcitx-J2yftF/fcitx-4.2.9.1/src/module/dbus/dbusstuff.c:246) DBus Service Already Exists</span><br><span class="line">(ERROR-6410 /build/fcitx-J2yftF/fcitx-4.2.9.1/src/lib/fcitx/instance.c:440) Exiting.</span><br><span class="line">sogou-qimpanel-watchdog: Fatal IO error 11 (资源暂时不可用) on X server :0.</span><br></pre></td></tr></table></figure><p>很显然，问题出在fcitx和sogou输入法中，卸载后重装，问题解决。</p><hr><h3 id="Ubuntu日志文件总结"><a href="#Ubuntu日志文件总结" class="headerlink" title="Ubuntu日志文件总结"></a>Ubuntu日志文件总结</h3><p><strong>Linux Log files and usage</strong></p><p>=&gt; /var/log/messages : General log messages</p><p>=&gt; /var/log/boot : System boot log</p><p>=&gt; /var/log/debug : Debugging log messages</p><p>=&gt; /var/log/auth.log : User login and authentication logs</p><p>=&gt; /var/log/daemon.log : Running services such as squid, ntpd and others log message to this file</p><p>=&gt; /var/log/dmesg : Linux kernel ring buffer log</p><p>=&gt; /var/log/dpkg.log : All binary package log includes package installation and other information</p><p>=&gt; /var/log/faillog : User failed login log file</p><p>=&gt; /var/log/kern.log : Kernel log file</p><p>=&gt; /var/log/lpr.log : Printer log file</p><p>=&gt; /var/log/mail.* : All mail server message log files</p><p>=&gt; /var/log/mysql.* : MySQL server log file</p><p>=&gt; /var/log/user.log : All userlevel logs</p><p>=&gt; /var/log/xorg.0.log : X.org log file</p><p>=&gt; /var/log/apache2/* : Apache web server log files directory</p><p>=&gt; /var/log/lighttpd/* : Lighttpd web server log files directory</p><p>=&gt; /var/log/fsck/* : fsck command log</p><p>=&gt; /var/log/apport.log : Application crash report / log file</p><p><strong>shell下的命令</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/apport.log</span><br><span class="line">more /var/log/xorg.0.log</span><br><span class="line">cat /var/log/mysql.err</span><br><span class="line">less /var/log/messages</span><br><span class="line">grep -i fail /var/log/boot</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>做了一些改变</title>
      <link href="/posts/59760/"/>
      <url>/posts/59760/</url>
      <content type="html"><![CDATA[<p>之前一直太忙，没怎么管理blog，今天花了一天时间做了一些改变。</p><a id="more"></a><hr><h3 id="在忙什么"><a href="#在忙什么" class="headerlink" title="在忙什么"></a>在忙什么</h3><p>忙着学java啊，搞项目什么的。</p><p>这几天项目比较累，反而不想搞了，就看了看前端的知识，包括HTML、CSS、JS等等，反过来看这个yelee的blog结构也比较简单，就简单修改了一下样式。</p><p>前端的学习刚刚开始，总结的文章还要往后放，现在时间比较多，多学一点是一点。</p><hr><h3 id="哪些改变？"><a href="#哪些改变？" class="headerlink" title="哪些改变？"></a>哪些改变？</h3><blockquote></blockquote><ul><li>修改了<a href="/404/">404</a>界面</li><li>万年不变的<a href="/about/">about</a>界面</li><li>加入了文章的缩进</li><li>修改了一些CSS样式</li></ul><p>所以整体上也没什么大的改变，比较大的还是换了域名。</p><p>从之前的 <a href="http://smileykk.tk" target="_blank" rel="noopener">http://smileykk.tk</a> 换成了 <a href="http://ykksmile.top">http://ykksmile.top</a></p><p>因为tk域名的解析不算好，百度一直都无法收录。</p><p>虽然没什么技术含量的东西，百度收录也没什么大的意义，但是一直提交一直不收录的感觉也是挺不好的，所以还是买了一个top的域名。</p><p>刚改了DNS，还没解析过来，明天应该就可以了。</p><hr><h3 id="改域名遇到的问题"><a href="#改域名遇到的问题" class="headerlink" title="改域名遇到的问题"></a>改域名遇到的问题</h3><p>之前没有换域名的经验，导致这次换域名手忙脚乱。</p><p>不知道还有站点迁移这种东西，暴力的断开了之前的DNS，然后改换了新买的top域名<a href="http://ykksmile.top">http://ykksmile.top</a>，DNS还是国外github国内coding的双重配置。</p><p>目前还没解决的问题有：</p><ul><li>@的主机解析和MX邮件服务的解析冲突</li></ul><p>解决的问题有：</p><ul><li>多说样式中的src指向改变</li><li>about界面评论不显示</li></ul><hr><h3 id="下一步的计划"><a href="#下一步的计划" class="headerlink" title="下一步的计划"></a>下一步的计划</h3><ul><li>做一个在线书签</li><li>做一个在线简历</li></ul>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 扯淡 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记录蜂窝网络链路聚合项目的零碎</title>
      <link href="/posts/50343/"/>
      <url>/posts/50343/</url>
      <content type="html"><![CDATA[<p>项目是要保密的，所以只是记录一些自己项目过程里的零零碎碎。</p><a id="more"></a><hr><h3 id="对开源IPsec-VPN的研究"><a href="#对开源IPsec-VPN的研究" class="headerlink" title="对开源IPsec VPN的研究"></a>对开源IPsec VPN的研究</h3><h4 id="StrongSwan-vs-OpenSwan-vs-Libreswan"><a href="#StrongSwan-vs-OpenSwan-vs-Libreswan" class="headerlink" title="StrongSwan vs OpenSwan vs Libreswan"></a>StrongSwan vs OpenSwan vs Libreswan</h4><p>Libreswan是OpenSwan开发者因为商标问题新开发的开源VPN工具。</p><ul><li>StrongSwan has much more comprehensive and developed documentation than Libreswan.</li><li>StrongSwan has support for EAP authentication methods, which make it easier to integrate into heterogeneous environments (such as authenticating to Active Directory). These are less well developed or even missing from Libreswan.</li><li>StrongSwan can be clustered and load balanced. Libreswan does not seem to have any support to do either.</li><li>Libreswan supports more hardware crypto accelerators than StrongSwan, but requires kernel patches to do so.</li></ul><h4 id="OpenSwan-roadwarrior-and-net2net"><a href="#OpenSwan-roadwarrior-and-net2net" class="headerlink" title="OpenSwan roadwarrior and net2net"></a>OpenSwan roadwarrior and net2net</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">config setup</span><br><span class="line">    dumpdir=/var/run/pluto/</span><br><span class="line">    nat_traversal=yes</span><br><span class="line">    virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v6:fd00::/8,%v6:fe80::/10</span><br><span class="line">    protostack=netkey</span><br><span class="line">    </span><br><span class="line">conn L2TP-PSK-NAT</span><br><span class="line">    rightsubnet=vhost:%priv</span><br><span class="line">    also=L2TP-PSK-noNAT</span><br><span class="line"></span><br><span class="line">conn L2TP-PSK-noNAT</span><br><span class="line">    authby=secret</span><br><span class="line">    pfs=no</span><br><span class="line">    auto=add</span><br><span class="line">    keyingtries=3</span><br><span class="line">    ikelifetime=8h</span><br><span class="line">    keylife=1h</span><br><span class="line">    type=transport</span><br><span class="line">    left=%SERVERIP%</span><br><span class="line">    leftprotoport=17/1701</span><br><span class="line">    right=%any</span><br><span class="line">    rightprotoport=17/%any</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">conn net-to-net </span><br><span class="line">    left=192.168.1.10              # LServer外网IP地址 </span><br><span class="line">    leftsubnet=10.10.10.0/24       # LServer内网IP段</span><br><span class="line">    leftrsasigkey=0sAQOBIJFmj…   # LServer的公钥 </span><br><span class="line">    leftnexthop=%defaultroute      # LServer的下一跳指定为默认路由地址 </span><br><span class="line">    right=192.168.1.20             # RServer外网IP地址 </span><br><span class="line">    rightsubnet=100.10.20.0/24      # RServer内网IP段</span><br><span class="line">    rightrsasigkey=0sAQNZZZjj…   # Rserver的公钥 </span><br><span class="line">    rightnexthop=%defaultroute     # RServer的下一跳指定为默认路由地址 </span><br><span class="line">    auto=start                     # 添加这个链接，启动时自动连接</span><br></pre></td></tr></table></figure><h4 id="StrongSwan的HA模式"><a href="#StrongSwan的HA模式" class="headerlink" title="StrongSwan的HA模式"></a>StrongSwan的HA模式</h4><p>The roadwarriors carol and dave set up a connection each to the virtual gateway mars implemented by the two real gateways alice and moon in a High Availability (HA) setup based on ClusterIP. Depending on the hash of the IP addresses of the peers and the SPIs, the inbound and outbound CHILD_SAs are either assigned to segment 1 managed by alice or segment 2 handled by moon. The IKEv2 protocol is managed by moon exclusively with passive IKE_SAs installed on the backup gateway alice. </p><p><img src="http://o7myibfc7.bkt.clouddn.com/strongswan.png" alt="StrongSwan的HA模式"></p><h4 id="VPN链路聚合的两种方案"><a href="#VPN链路聚合的两种方案" class="headerlink" title="VPN链路聚合的两种方案"></a>VPN链路聚合的两种方案</h4><ul><li>主要实现还是利用了<code>Netfilter HOOK</code></li></ul><p><img src="http://o7myibfc7.bkt.clouddn.com/vpn1.png" alt="《支持多路负载平衡的IPsec VPN 系统的设计与实现》"></p><p><img src="http://o7myibfc7.bkt.clouddn.com/vpn2.png" alt="《高可用IPsec虚拟专用网研究》"></p><hr><h3 id="硬件问题"><a href="#硬件问题" class="headerlink" title="硬件问题"></a>硬件问题</h3><ul><li>常见天线接头类型:</li></ul><p><img src="http://o7myibfc7.bkt.clouddn.com/TB29215.jpg?imageView2/3/w/300/h/150/q/90" alt="常见天线接头类型"></p><hr><h3 id="SIM7100拨号脚本"><a href="#SIM7100拨号脚本" class="headerlink" title="SIM7100拨号脚本"></a>SIM7100拨号脚本</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>详见gayhub：</p><div class="github-widget" data-repo="cloisonne/SIM7100-dial-script"></div><h4 id="上网设置APN-拨号号码，帐号和密码"><a href="#上网设置APN-拨号号码，帐号和密码" class="headerlink" title="上网设置APN,拨号号码，帐号和密码"></a>上网设置APN,拨号号码，帐号和密码</h4><table><thead><tr><th>运营商（ISP）</th><th>APN</th><th>拨号号码</th><th>帐号</th><th>密码</th></tr></thead><tbody><tr><td>中国联通WCDMA（China Unicom）</td><td>3GNET</td><td>*99#</td><td>空</td><td>空</td></tr><tr><td>中国电信CDMA2000（China Telecom）EVDO网络</td><td>空</td><td>#777</td><td><a href="mailto:ctnet@mycdma.cn" target="_blank" rel="noopener">ctnet@mycdma.cn</a></td><td>vnet.mobi</td></tr><tr><td>1X网络</td><td>空</td><td>#777</td><td>card (CARD)</td><td>card（CARD）</td></tr><tr><td>中国移动 TD-SCDMA（China Mobile）</td><td>CMNET</td><td><em>98</em>1#</td><td>空</td><td>空</td></tr><tr><td>中国移动 GPRS（China Mobile）</td><td>CMNET</td><td><em>99**</em>1#</td><td>空</td><td>空</td></tr></tbody></table><hr><h3 id="OpenSwan源码解析"><a href="#OpenSwan源码解析" class="headerlink" title="OpenSwan源码解析"></a>OpenSwan源码解析</h3><p>后面没有使用开源VPN，这里没有继续接触。</p>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> LTE </tag>
            
            <tag> GSM </tag>
            
            <tag> IPsec </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>用到的sublime快捷键</title>
      <link href="/posts/53056/"/>
      <url>/posts/53056/</url>
      <content type="html"><![CDATA[<p>用过许多的文本编辑器，最近了解前端的时候才发现这个sublime，项目催得紧，拿来写C了。</p><a id="more"></a><hr><p><a href="https://www.sublimetext.com" target="_blank" rel="noopener">sublime</a>是收费的哦，现在用的是<code>sublime3</code>,当然可以和谐掉，赚钱了再补过咯。</p><hr><h3 id="对用到的sublime快捷键进行总结"><a href="#对用到的sublime快捷键进行总结" class="headerlink" title="对用到的sublime快捷键进行总结"></a>对用到的sublime快捷键进行总结</h3><p><code>Ctrl+D</code> 选词，重复按可以选下一个  // Alt+F3  选中所有相同文本</p><p><code>Ctrl+L</code> 选择整行，按住同上</p><p><code>Alt+Shift+N</code> 分成N屏，N=1-9</p><p><code>Ctrl+Shift+N</code> 聚焦到N屏</p><p><code>Ctrl+Z/Y</code>  撤销/恢复撤销</p><p><code>Ctrl+Shift+/</code> 注释所选内容</p><p><code>Ctrl+Shift+B</code> built with</p><p>在Preference/Key Bindings/User中加入<code>F10</code>快速编译加Run：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; &quot;keys&quot;: [&quot;f10&quot;], &quot;command&quot;: &quot;build&quot;, &quot;args&quot;: &#123;&quot;variant&quot;: &quot;Run&quot;&#125; &#125;,</span><br></pre></td></tr></table></figure></p><hr><h3 id="目前用到的插件"><a href="#目前用到的插件" class="headerlink" title="目前用到的插件"></a>目前用到的插件</h3><ul><li>PackageControl</li><li>Codecs33</li><li>ConvertToUTF8</li><li>EJS</li><li>GBK Support</li><li>Stylus</li></ul>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对国庆节呆在实验室的一点看法</title>
      <link href="/posts/50234/"/>
      <url>/posts/50234/</url>
      <content type="html"><![CDATA[<p>国庆节假期到了，身边的人大多都回家或者选择出去旅游了，而我还是默默地在实验室学习，写一点东西，聊以慰藉。</p><a id="more"></a><hr><p>蘑菇还没有签工作，国庆假期里定了学习计划，不过今天还是决定跟团出去旅游一天，看到她发来的在高速路上堵车的照片，我很是欣慰。</p><p>K君放假前一直在向我诉苦，说老板竟然不放十一假期，十一她要在实验室继续搬砖。昨天，她买了机票回家了，事实是老板并没有留她，也许是她过于悲观了。</p><p>乔大侠原本是要陪我一起度过9天假期的（7天加周末），结果前天晚上，鬼使神差地对我说：我发现身边的人都回家了，我也想回家，已经定了火车票。我答：是啊，工作后就更没机会了，能回就回吧。</p><p>Y君还在北京上班，我知道那个繁华的城市最适合她。她说：男朋友来了，就不回家了。</p><p>还有W君、M君、可爱的雪儿童鞋等等，他们今年或参加考研或参加国考，十一并没有心情游山玩水。</p><p>那么我呢？是啊，我属于哪里呢。</p><p>去年十一，我还是考研大军的一员，逼仄在A区自习室的一角，每天和辅导书与食堂大妈打交道，那时我想：<code>要是没有考研就可以好好地玩了</code>。如今我有了假期，却也选择坐在实验室，和博士师兄以及几个任务缠身的师姐一同安静的修炼。</p><p>假期只是给那些身上背上没有负担的人儿一个更放松的理由。</p><p><code>深圳房价6万一平了</code>。</p><p>今年华为给研究生的起薪1万2，一年的收入在20万，华为深圳总部有一部分要迁到东莞了。还不错哦，按照华为的工资，也就还30年房贷而已，如果你能在华为活30年的话。</p><p>然而，实验室的师兄挂在了华为的面试，他说：面试官根本不懂通信，不懂SDN，完全不知道我讲的是什么。我问：什么岗？<code>“软件研发”</code>。</p><p>互联网行业大势已去的风评就像是楼市即将崩盘的传言甚嚣尘上，而我们还在拼命地希望在BAT谋求一份生存的机会，通信原理、DSP、信号处理什么都抛之脑后，都在找工作的几个月前拼命地补操作系统、编程语言、算法与数据结构、软件工程。</p><p>这就是教育的意义吗？上研3年，除了顾些奖学金等鸡毛蒜皮的小事，就是靠突击和运气谋求一份不属于自己专业的工作。看着招聘黄金时期九月的过去，有人因一份研究所的工作高兴不已，也有人还在找工作的路上越走越远，将华为这种批发毕业生的公司都视为最好的归宿。</p><p>在学校论坛翻出了几年前一个学姐找工作的帖子，帖中毫不委婉地指出了目前学校研究生大多由2本学生组成的现状，对于他们来说，实现了工资从3000到8000的跨越，而我们这些原地踏步的从本科一路走来的人，和他们享受的是同样的就业状况，站在同样的起跑线上。</p><p>所谓学校第一大院，所谓的全国前三的专业，所谓的国家重点实验室。我只知道，好多人找不到满意的工作。</p><p>妈让我读博，我说我读完就已经二十八九了，即将而立之年，一点经济积累都没有，还要靠父母的救济度日。更别提孑然一人，在追求自由和梦想的路上越走越远。</p><p>我不是gay，但我也不想结婚，围城就是很好的例子。</p><p>归根结底，就业的压力和理想与现实的差距，让我就算在国庆假期也来到实验室学习，淡漠的，并无埋怨之心。</p><p>中午一个好哥们来学校了，免不了出去喝酒吃饭，酒肉穿肠过，大家吐槽一下学校，吐槽一下体制，并表示出对某某的歆羡之情。几瓶酒下肚，好像更快活了些，因为这个假期我并不是一个人，大家都没出去，很多人都在实验室学习，当然，他们都是有加班费的这就不提了。</p><p>当下，导师的项目是一方面，基本上是硬件通信模块的设计和管理软件的开发；对java的学习是另一方面，选择了java就一路走下去，无论是javaweb还是javase，加上对算法和数据结构的学习，后面再看几遍JVM，但愿到时候能找到合格的实习吧。</p><p>没什么抱怨的意味，在实验室难得清闲，学习和做项目，也有空更一下blog，就是蚊子略多，这两天已经拍死了七八只，说的带花露水过来，总是忘记。</p><p>到现在，5点了，去壶口的蘑菇还没到地方，路上各种堵，原本四五个小时的路程已经走了10个小时，也许会在那里住一夜，一天的行程变作两天。</p><p><code>而我，在拍蚊子</code>。</p><p><img src="http://o7myibfc7.bkt.clouddn.com/25_187069_a86b07318a78665.jpg?imageView2/2/h/400" alt="心在路上"></p>]]></content>
      
      <categories>
          
          <category> Essays </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扯淡 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用JAVA编写的排序算法</title>
      <link href="/posts/32334/"/>
      <url>/posts/32334/</url>
      <content type="html"><![CDATA[<p>使用java练习的排序算法，逐渐补齐。</p><a id="more"></a><hr><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br></pre></td></tr></table></figure><ul><li>选择排序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">classSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line"><span class="comment">// 用i的下一个元素和它比较</span></span><br><span class="line"><span class="keyword">if</span> (arr[i]&gt;arr[j]) &#123;</span><br><span class="line"><span class="comment">// 交换值</span></span><br><span class="line">arr[i]=arr[j]+arr[i]-(arr[j]=arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>冒泡排序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span> ; i++) &#123;</span><br><span class="line"><span class="comment">// 防止越界</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length-i-<span class="number">1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="comment">/*arr[j] = arr[j] ^ arr[j+1];</span></span><br><span class="line"><span class="comment">arr[j+1] =arr[j] ^ arr[j+1];</span></span><br><span class="line"><span class="comment">arr[j] = arr[j] ^ arr[j+1];*/</span></span><br><span class="line">arr[j]=arr[j]+arr[j+<span class="number">1</span>]-(arr[j+<span class="number">1</span>]=arr[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>合并排序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 合并排序（递归）</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (left&lt;right) &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (left+right)/<span class="number">2</span>;</span><br><span class="line">mergeSort(arr, left, mid);</span><br><span class="line">mergeSort(arr, mid+<span class="number">1</span>, right);</span><br><span class="line">merge(arr,left,mid,right); <span class="comment">// 合并后给arr</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// merge的写法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> mid,<span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="comment">//int[] temp = new int[arr.length]; // 暂时存放</span></span><br><span class="line"><span class="keyword">int</span> length = right-left+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> temp[]=<span class="keyword">new</span> <span class="keyword">int</span>[length];</span><br><span class="line"><span class="keyword">int</span> i = left,</span><br><span class="line">j = mid+<span class="number">1</span>,</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((i &lt;= mid)&amp;&amp;(j &lt;= right)) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i]&lt;arr[j]) &#123;</span><br><span class="line">temp[k++] = arr[i++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">temp[k++] = arr[j++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i&lt;=mid) &#123;</span><br><span class="line">temp[k++]=arr[i++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (j&lt;=right) &#123;</span><br><span class="line">temp[k++]=arr[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> t=left;t&lt;=right;t++,n++)&#123;</span><br><span class="line">           arr[t]=temp[n];</span><br><span class="line">       &#125;</span><br><span class="line"><span class="comment">//System.out.println(Arrays.toString(temp));</span></span><br><span class="line"><span class="comment">//arr = Arrays.copyOf(temp, temp.length);</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>快速排序</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 快速排序，分开写</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;<span class="comment">// 分治策略</span></span><br><span class="line"><span class="keyword">if</span> (left&lt;right) &#123;</span><br><span class="line"><span class="keyword">int</span> i = AdjustArray(arr,left,right);</span><br><span class="line">quickSort(arr, left, i-<span class="number">1</span>);</span><br><span class="line">quickSort(arr, i+<span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">AdjustArray</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = left,j=right;</span><br><span class="line"><span class="keyword">int</span> x = arr[left];</span><br><span class="line"><span class="keyword">while</span> (i&lt;j) &#123;</span><br><span class="line"><span class="keyword">while</span> (i&lt;j&amp;&amp;arr[j]&gt;=x)</span><br><span class="line">j--;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i&lt;j) </span><br><span class="line">arr[i++]=arr[j];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i&lt;j&amp;&amp;arr[i]&lt;x)</span><br><span class="line">i++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i&lt;j)</span><br><span class="line">arr[j--]=arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr[i]=x;</span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">// 返回基准数位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速排序，合并写</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">quickSort2</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (left&lt;right) &#123;</span><br><span class="line"><span class="comment">// 可使用中间数做基准</span></span><br><span class="line"><span class="keyword">int</span> i = left,j=right,x=arr[left];</span><br><span class="line"><span class="keyword">while</span> (i&lt;j)&#123;</span><br><span class="line"><span class="keyword">while</span> (i&lt;j&amp;&amp;arr[j]&gt;=x)</span><br><span class="line">j--;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i&lt;j)</span><br><span class="line">arr[i++] =arr[j];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i&lt;j&amp;&amp;arr[i]&lt;x)</span><br><span class="line">i++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i&lt;j)</span><br><span class="line">arr[j--] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">arr[i]=x;</span><br><span class="line">quickSort2(arr, left, i-<span class="number">1</span>);</span><br><span class="line">quickSort2(arr, i+<span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] arrTest = &#123;<span class="number">2</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>&#125;;</span><br><span class="line">classSort m = <span class="keyword">new</span> classSort();</span><br><span class="line">m.quickSort2(arrTest,<span class="number">0</span>,arrTest.length-<span class="number">1</span>);</span><br><span class="line">System.out.println(Arrays.toString(arrTest));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Codes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对于GPT和MBR系统引导的学习</title>
      <link href="/posts/23569/"/>
      <url>/posts/23569/</url>
      <content type="html"><![CDATA[<p>日前给一妹子装Ubuntu，几多波折，最主要的就是一开始没有意识到GPT+uefi的模式。</p><a id="more"></a><hr><h3 id="经验教训"><a href="#经验教训" class="headerlink" title="经验教训"></a>经验教训</h3><p>用PE装WIN10的时候并不会报错，用镜像做启动盘才能看到报错，和BIOS设置有关。</p><p><code>PE毁一生</code></p><hr><h3 id="GPT和MBR"><a href="#GPT和MBR" class="headerlink" title="GPT和MBR"></a>GPT和MBR</h3><p>mrb用于win平台，gpt主要用于mac（苹果），MBR分区表与GPT分区表的关系。</p><blockquote><p>与支持最大卷为2 TB（Terabytes）并且每个磁盘最多有4个主分区（或3个主分区，1个扩展分区和无限制的逻辑驱动器）的MBR磁盘分区的样式相比，GPT磁盘分区样式支持最大卷为18 EB（Exabytes）并且每磁盘的分区数没有上限，只受到操作系统限制（<code>由于分区表本身需要占用一定空间，最初规划硬盘分区时，留给分区表的空间决定了最多可以有多少个分区</code>，IA-64版Windows限制最多有128个分区，这也是EFI标准规定的分区表的最小尺寸）。与MBR分区的磁盘不同，至关重要的平台操作数据位于分区，而不是位于非分区或隐藏扇区。另外，GPT分区磁盘有备份分区表来提高分区数据结构的完整性。</p></blockquote><p><code>解读</code>：</p><ul><li>GPT支持更大的分区，并且支持大于4个主分区</li><li>uefi和legacy的速度没有很明显的比较，但是uefi毕竟是新一代的引导技术</li></ul><hr><h3 id="目前Linux对uefi-GPT的支持"><a href="#目前Linux对uefi-GPT的支持" class="headerlink" title="目前Linux对uefi+GPT的支持"></a>目前Linux对uefi+GPT的支持</h3><p>据说已经可以支持UEFI启动，对于GPT而言，多了一个boot/efi</p><p>注意的几点：</p><ul><li>secure boot</li><li>如果在安装Ubuntu系统的时候不是选择自动分区，而是选择最后那个“其它选项”来自定义分区，会发现其实Ubuntu提供的自定义分区功能很有限。它没办法让人选择是使用MBR分区还是使用GPT分区，也没有办法选择是否启用LVM。如果需要更灵活的管理的话，还是只有点击“试用Ubuntu”按钮，进入LiveCD的Ubuntu系统后，使用parted命令和lvm命令手动管理硬盘分区。</li></ul><hr><h3 id="双系统中为什么选择了MBR"><a href="#双系统中为什么选择了MBR" class="headerlink" title="双系统中为什么选择了MBR"></a>双系统中为什么选择了MBR</h3><p>原因很简单，对于<code>MBR+legacy</code>的熟悉程度远大于uefi。</p><ul><li>可以随意定制boot的位置，efi好像必须是一个单独的分区。</li><li>启动引导可以随意选择win的boot loader或者linux的grub or grub2</li><li>想怎么玩怎么玩</li></ul><p>装机过程也选择了将GPT硬盘转化成MBR并重建MBR表。</p><p><strong>那么，GPT下如何实现WIN+linux双系统？（转载）</strong></p><ol><li>ubuntu镜像（以ubuntu为例）需要是64位的，ubuntu官网有说明，他们只为64位版本添加了uefi启动模式<br>（判断镜像是否支持uefi启动很简单，不只是ubuntu，只要打开镜像，看其中是否有个efi文件夹，有就支持，没有就不支持）</li><li>以uefi模式启动。虽然主板支持uefi，但从刻录好的U盘（或者光盘等其他介质）启动不一定采取uefi模式，以我电脑为例，开机按F12进入启动菜单选择时，分为两大类：uefi和lengcy。而U盘同时出现在两类启动中，这里需要选择uefi中的U盘</li><li>选择引导安装设备。在ubuntu安装过程中，会让你选择将系统引导安装到哪里。传统的grub是安装到“sda”也就是整个硬盘的开始处，现在嘛，绝对不行！预装win8情况下，C盘前肯定会有2~3个小分区，其中一个就是用来存放efi文件以引导开机的。选择引导安装设备时ubuntu会列出当前所有分区，并且有注明分区类型，其中有一个标注为efi的就是此时要选择的</li></ol><hr><h3 id="GPT和MBR的无损转化"><a href="#GPT和MBR的无损转化" class="headerlink" title="GPT和MBR的无损转化"></a>GPT和MBR的无损转化</h3><p>GPT到MBR比较简单，启动分区直接丢掉。</p><p><code>MBR到GPT有一定风险</code>，系统需要重装，并且需要一个新的引导分区。</p><p>实际操作过程用的傲梅分区助手。</p><p>就酱。</p>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> System </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/1/"/>
      <url>/posts/1/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/posts/9/"/>
      <url>/posts/9/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>VPN问题和科学上网地址</title>
      <link href="/posts/40055/"/>
      <url>/posts/40055/</url>
      <content type="html"><![CDATA[<p>因为需要访问<code>GNU Radio</code>，需要翻墙，很自然的想到在Ubuntu16.04里使用VPN。<br>遇到的问题是VPN无法正常启动服务，<del>至今仍未解决</del>,<strong>该问题已经解决</strong>。</p><a id="more"></a><hr><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><blockquote><p>问题主要是在Ubuntu16.04系统中使用VPN无法启动服务，syslog如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Jul 23 21:45:06 tyler-QTJ5 NetworkManager[2597]: &lt;error&gt; [1469281506.9518] platform-linux: <span class="keyword">do</span>-change-link[9]: failure changing link: failure 19 (没有那个设备)</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 NetworkManager[2597]: &lt;warn&gt;  [1469281506.9518] device (ppp0): failed to <span class="built_in">disable</span> userspace IPv6LL address handling</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 gnome-session[3306]: Gjs-Message: JS LOG: Removing a network device that was not added</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 NetworkManager[2597]: &lt;info&gt;  [1469281506.9549] devices removed (path: /sys/devices/virtual/net/ppp0, iface: ppp0)</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 NetworkManager[2597]: ** Message: nm-pptp-ppp-plugin: (nm_phasechange): status 1 / phase <span class="string">'dead'</span></span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 NetworkManager[2597]: ** Message: nm-pptp-ppp-plugin: (nm_exit_notify): cleaning up</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 pptp[5371]: nm-pptp-service-5359 warn[decaps_hdlc:pptp_gre.c:220]: short <span class="built_in">read</span> (-1): Input/output error</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 pptp[5371]: nm-pptp-service-5359 warn[decaps_hdlc:pptp_gre.c:232]: pppd may have shutdown, see pppd <span class="built_in">log</span></span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 pptp[5386]: nm-pptp-service-5359 <span class="built_in">log</span>[callmgr_main:pptp_callmgr.c:245]: Closing connection (unhandled)</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 pptp[5386]: nm-pptp-service-5359 <span class="built_in">log</span>[ctrlp_rep:pptp_ctrl.c:259]: Sent control packet <span class="built_in">type</span> is 12 <span class="string">'Call-Clear-Request'</span></span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 pppd[5366]: Exit.</span><br><span class="line">Jul 23 21:45:06 tyler-QTJ5 pptp[5386]: nm-pptp-service-5359 <span class="built_in">log</span>[call_callback:pptp_callmgr.c:84]: Closing connection (call state)</span><br></pre></td></tr></table></figure><blockquote><p>和自己的网络状况以及VPN的设置有关</p></blockquote><hr><h3 id="VPN选择"><a href="#VPN选择" class="headerlink" title="VPN选择"></a>VPN选择</h3><ol><li><strong>Lantern</strong>: <a href="https://github.com/getlantern/forum/issues/833" target="_blank" rel="noopener">https://github.com/getlantern/forum/issues/833</a>  <strong>每月800M免费流量，WIN10旧版本无限流量</strong></li><li><strong>天行VPN</strong></li></ol><hr><h3 id="科学上网-google镜像"><a href="#科学上网-google镜像" class="headerlink" title="科学上网-google镜像"></a>科学上网-google镜像</h3><ol><li><strong>快搜</strong>: <a href="http://so.chongbuluo.com/" target="_blank" rel="noopener">http://so.chongbuluo.com/</a>   // 比较推荐</li><li><strong>谷歌镜像大全</strong>: <a href="http://google.adwiki.cn/" target="_blank" rel="noopener">http://google.adwiki.cn/</a> </li></ol><hr><p><code>以下为转载：</code></p><blockquote></blockquote><p> 原版页面：</p><p><a href="https://go.coolnull.com/" target="_blank" rel="noopener">https://go.coolnull.com/</a> （无广告，搜索体验良好）</p><p><a href="http://google.suanfazu.com/" target="_blank" rel="noopener">http://google.suanfazu.com/</a> （整合搜索，非原版，相对稳定）</p><p><a href="https://g.jikewenku.cn/" target="_blank" rel="noopener">https://g.jikewenku.cn/</a> （无广告，搜索体验良好）</p><p><a href="https://g.chenjx.cn/" target="_blank" rel="noopener">https://g.chenjx.cn/</a> （无广告，体验良好</p><p><a href="https://g.namaho.com/" target="_blank" rel="noopener">https://g.namaho.com/</a> （无广告，搜索体验良好）</p><p><a href="https://g.starmoe.xyz/" target="_blank" rel="noopener">https://g.starmoe.xyz/</a> （无广告，搜索体验良好）</p><p><a href="https://g.linuxeye.com" target="_blank" rel="noopener">https://g.linuxeye.com</a> （无广告，搜索体验良好）</p><p><a href="https://g.inspire-energy.com.cn/" target="_blank" rel="noopener">https://g.inspire-energy.com.cn/</a> （无广告，搜索体验良好）</p><p><a href="https://www.ytso.cc/" target="_blank" rel="noopener">https://www.ytso.cc/</a> （无广告，搜索体验良好）</p><p><a href="https://soguge.ga" target="_blank" rel="noopener">https://soguge.ga</a> （无广告，搜索体验良好）</p><p><a href="https://ggg.eeload.com/" target="_blank" rel="noopener">https://ggg.eeload.com/</a> （无广告，体验良好）</p><p><a href="https://letsgg.tk/" target="_blank" rel="noopener">https://letsgg.tk/</a> （无广告，体验良好）</p><p><a href="https://google.kfd.me/" target="_blank" rel="noopener">https://google.kfd.me/</a> （先访问主站，然后点击google）</p><p><a href="https://www.guge.xxx/" target="_blank" rel="noopener">https://www.guge.xxx/</a> （无广告，体验良好）</p><p><a href="http://ljy2345.esy.es/" target="_blank" rel="noopener">http://ljy2345.esy.es/</a> （无广告，搜索体验良好）</p><p><a href="http://gg.aiorai.com/" target="_blank" rel="noopener">http://gg.aiorai.com/</a> （无广告，搜索体验良好）</p><p><a href="http://ggso.gq/" target="_blank" rel="noopener">http://ggso.gq/</a> （无广告，搜索体验良好）</p><p><a href="http://gg.qwghq.com/" target="_blank" rel="noopener">http://gg.qwghq.com/</a> （无广告，体验良好）</p><p><a href="http://bc60042.byethost13.com/" target="_blank" rel="noopener">http://bc60042.byethost13.com/</a> （无广告，体验良好）</p><p><a href="http://gc.ihuan.me/" target="_blank" rel="noopener">http://gc.ihuan.me/</a>  （无广告，体验良好）</p><p><a href="http://www.nginxgoogle.com/" target="_blank" rel="noopener">http://www.nginxgoogle.com/</a> （无广告，体验良好）</p><p><a href="https://julianhuang.cc/" target="_blank" rel="noopener">https://julianhuang.cc/</a> （无广告，体验良好）</p><p><a href="http://baidusb.tk/" target="_blank" rel="noopener">http://baidusb.tk/</a> （无广告，体验良好）</p><p><a href="http://45.78.38.197/" target="_blank" rel="noopener">http://45.78.38.197/</a> （无广告，体验良好）</p><p><a href="https://ggso.co/" target="_blank" rel="noopener">https://ggso.co/</a> （无广告，体验良好）</p><p><a href="http://glgoo.jsylhs.com/" target="_blank" rel="noopener">http://glgoo.jsylhs.com/</a> （有广告，体验一般）</p><p><a href="https://g.hancel.net/" target="_blank" rel="noopener">https://g.hancel.net/</a> （无广告，体验良好）</p><p><a href="https://g.v2fr.ml" target="_blank" rel="noopener">https://g.v2fr.ml</a> （无广告，搜索体验良好）</p><p><a href="http://scholar.hntvchina.com/" target="_blank" rel="noopener">http://scholar.hntvchina.com/</a> （无广告，体验良好）</p><p><a href="http://lujinjie.win/" target="_blank" rel="noopener">http://lujinjie.win/</a> （无广告，体验良好）</p><p><a href="http://so.biochen.com/" target="_blank" rel="noopener">http://so.biochen.com/</a> （无广告，体验良好）</p><p><a href="http://gg.huwaige.com/" target="_blank" rel="noopener">http://gg.huwaige.com/</a> （有弹窗广告，体验不是很好）</p><p><a href="http://guge.ro.lt/" target="_blank" rel="noopener">http://guge.ro.lt/</a> （有弹窗广告，体验不是很好）</p><p><a href="http://free.8090st.com/" target="_blank" rel="noopener">http://free.8090st.com/</a> （有弹窗广告，体验不是很好）</p><p><a href="https://fq.yanke.info" target="_blank" rel="noopener">https://fq.yanke.info</a> （无广告，搜索体验良好）</p><p><a href="https://g.glv.io/" target="_blank" rel="noopener">https://g.glv.io/</a> （无广告，搜索体验良好）</p><p><a href="http://www.jumper.site/" target="_blank" rel="noopener">http://www.jumper.site/</a> （无广告，体验良好）</p><p><a href="http://3.zzq2.com/" target="_blank" rel="noopener">http://3.zzq2.com/</a> （无广告，体验良好）</p><p><a href="https://ggso.me/" target="_blank" rel="noopener">https://ggso.me/</a> （无广告，体验良好）</p><p><a href="http://fuckbaidu.bid" target="_blank" rel="noopener">http://fuckbaidu.bid</a>  （已被污染，建议访问对应ip地址：<a href="http://198.12.101.102/）" target="_blank" rel="noopener">http://198.12.101.102/）</a></p><p><a href="http://forkgil.com/" target="_blank" rel="noopener">http://forkgil.com/</a> （无广告，体验良好）</p><p><a href="https://aigg.info" target="_blank" rel="noopener">https://aigg.info</a> （无广告，体验良好）</p><p><a href="https://g.wxbit.com/" target="_blank" rel="noopener">https://g.wxbit.com/</a> （无广告，搜索体验良好）</p><p><a href="http://g.fity.cn/" target="_blank" rel="noopener">http://g.fity.cn/</a> （无广告，体验良好）</p><p><a href="https://ykooh.com/" target="_blank" rel="noopener">https://ykooh.com/</a> （无广告，搜索体验良好）</p><p><a href="https://www.onk6.com" target="_blank" rel="noopener">https://www.onk6.com</a> （无广告，体验良好）</p><blockquote><p>谷歌学术</p></blockquote><p><a href="https://xueshu.glgoo.org/" target="_blank" rel="noopener">https://xueshu.glgoo.org/</a> </p><p><a href="http://gg.qwghq.com/scholar/" target="_blank" rel="noopener">http://gg.qwghq.com/scholar/</a></p><p><a href="http://xueshu.51google.pw/" target="_blank" rel="noopener">http://xueshu.51google.pw/</a></p><p><a href="https://ggso.co/scholar" target="_blank" rel="noopener">https://ggso.co/scholar</a></p><p><a href="https://www.scholar.live/" target="_blank" rel="noopener">https://www.scholar.live/</a> </p><p><a href="https://g.glv.io/extdomains/scholar.google.com/" target="_blank" rel="noopener">https://g.glv.io/extdomains/scholar.google.com/</a></p><blockquote><p>变种网页：</p></blockquote><p><a href="http://www.gfsousou.cn/" target="_blank" rel="noopener">http://www.gfsousou.cn/</a> （谷粉搜搜）</p><p><a href="http://www.51google.pw/" target="_blank" rel="noopener">http://www.51google.pw/</a> （无广告，搜索体验良好）</p><p><a href="https://www.dcrss.com/" target="_blank" rel="noopener">https://www.dcrss.com/</a> （google学术和网页）</p><p><a href="http://www.ibying.com/" target="_blank" rel="noopener">http://www.ibying.com/</a> （无广告，搜索体验良好）</p><p><a href="http://www.ssdao.com/" target="_blank" rel="noopener">http://www.ssdao.com/</a> （无广告，搜索体验良好）</p><p><a href="https://gfsoso.8090st.com/" target="_blank" rel="noopener">https://gfsoso.8090st.com/</a> （无广告，搜索体验良好）</p><p><a href="http://lige.aclstack.com/" target="_blank" rel="noopener">http://lige.aclstack.com/</a> （无广告，体验良好）</p><p><a href="http://g.sjswdh.com/" target="_blank" rel="noopener">http://g.sjswdh.com/</a> （无广告，体验良好）</p><p><a href="http://search.twcc.com/" target="_blank" rel="noopener">http://search.twcc.com/</a>  （无广告，体验良好）</p><p><a href="http://wangye.wallpai.com/" target="_blank" rel="noopener">http://wangye.wallpai.com/</a> （无广告，体验良好）</p><p><a href="https://www.tlss.space/" target="_blank" rel="noopener">https://www.tlss.space/</a> （无广告，体验良好）</p><p><a href="http://google.aiorai.com/" target="_blank" rel="noopener">http://google.aiorai.com/</a> （有广告，体验一般）</p><p><a href="http://mob.wallpai.com/" target="_blank" rel="noopener">http://mob.wallpai.com/</a> （有广告，体验还行）</p><p><a href="http://www.gfss.cc/" target="_blank" rel="noopener">http://www.gfss.cc/</a> （有广告，体验还行）</p><p><a href="https://www.googto.com/" target="_blank" rel="noopener">https://www.googto.com/</a> （<a href="https://www.googto.net）" target="_blank" rel="noopener">https://www.googto.net）</a></p><p><a href="http://fcczp3.huwaige.com/" target="_blank" rel="noopener">http://fcczp3.huwaige.com/</a> （有广告，体验一般）</p><p><a href="http://www.gfsswy.com/" target="_blank" rel="noopener">http://www.gfsswy.com/</a> （无广告，体验良好）</p><p><a href="http://www.gycc.com/" target="_blank" rel="noopener">http://www.gycc.com/</a> （无广告，体验良好）</p><p><a href="http://fcczp6.huwaige.com/" target="_blank" rel="noopener">http://fcczp6.huwaige.com/</a> （有广告，体验一般） </p>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客搭建过程和工具总结</title>
      <link href="/posts/17629/"/>
      <url>/posts/17629/</url>
      <content type="html"><![CDATA[<p>长期记录，很多东西都是边学边做，要培养自己规范记录的习惯。</p><p>还不怎么熟悉图床和图链的使用，暂时就用文字叙述，主要还是给自己看。</p><a id="more"></a><h2 id="需要解决"><a href="#需要解决" class="headerlink" title="需要解决"></a>需要解决</h2><ul><li>加入GithubRepoWidget.js 不懂pug？ layouts/includes/additional-js.pug</li></ul><h2 id="2018-6-7更新"><a href="#2018-6-7更新" class="headerlink" title="2018.6.7更新"></a>2018.6.7更新</h2><ul><li>gitment评论初始化</li></ul><h2 id="2018-6-5更新"><a href="#2018-6-5更新" class="headerlink" title="2018.6.5更新"></a>2018.6.5更新</h2><ul><li>gitment recall url报错  原因是github上原来的OAuth没有修改</li><li><del>列表无法进行缩进的问题</del></li></ul><h2 id="2018-6-5更新-1"><a href="#2018-6-5更新-1" class="headerlink" title="2018.6.5更新"></a>2018.6.5更新</h2><ul><li>新主题的修改，全面加入了<code>https</code>支持（coding和github双https部署）。</li></ul><h2 id="2018-6-4大更新（BIG）"><a href="#2018-6-4大更新（BIG）" class="headerlink" title="2018.6.4大更新（BIG）"></a>2018.6.4大更新（BIG）</h2><ul><li>更换了主题，更换为<a href="https://github.com/Molunerfinn/hexo-theme-melody" target="_blank" rel="noopener">Melody</a>，避开了花哨的动画效果，回归写文档的本质。</li></ul><h2 id="2018-5-23更新"><a href="#2018-5-23更新" class="headerlink" title="2018.5.23更新"></a>2018.5.23更新</h2><ul><li>切换了CDN，bootcdn屏蔽了top域名？切换为<a href="https://cdn.baomitu.com/" target="_blank" rel="noopener">前端静态资源库</a></li></ul><h2 id="2018-3-8更新"><a href="#2018-3-8更新" class="headerlink" title="2018.3.8更新"></a>2018.3.8更新</h2><ul><li>加入了插件<a href="https://github.com/rozbo/hexo-abbrlink/" target="_blank" rel="noopener">hexo-abbrlink</a> 目前文章ID为随机数，解决了gitment laber不够短的问题</li></ul><hr><h2 id="2018-3-7更新"><a href="#2018-3-7更新" class="headerlink" title="2018.3.7更新"></a>2018.3.7更新</h2><ul><li>修改了gitment生成ID的方式，参考<a href="http://xichen.pub/2018/01/31/2018-01-31-gitment/" target="_blank" rel="noopener">添加Gitment评论系统踩过的坑</a></li><li>增加了插件hexo-admin，踩坑，删除nodejs插件目录后重装恢复，增加了hexo编辑文档的方式<pre><code>cnpm install</code></pre></li></ul><hr><h2 id="2018-1-23更新"><a href="#2018-1-23更新" class="headerlink" title="2018.1.23更新"></a>2018.1.23更新</h2><ul><li>用python写了gitment自动初始化工具</li></ul><hr><h2 id="2018-1-22更新"><a href="#2018-1-22更新" class="headerlink" title="2018.1.22更新"></a>2018.1.22更新</h2><ul><li>加入了<a href="https://github.com/imsun/gitment/" target="_blank" rel="noopener">gitment</a>评论，修改了gitment的css样式，匹配了我的blog</li><li>在留言板中也加入了gitment</li></ul><hr><h2 id="2018-1-17更新"><a href="#2018-1-17更新" class="headerlink" title="2018.1.17更新"></a>2018.1.17更新</h2><ul><li>新建了一个wordpress小站<a href="https://ykk.000webhostapp.com/" target="_blank" rel="noopener">我的文字小站</a>，托管在三蛋空间</li><li>之前换了友言评论，差强人意，有时间换成gitment</li><li>修改主站，增加了跳转链接<a href="http://ykksmile.top/writing">http://ykksmile.top/writing</a>,并修改了博客左边栏适配</li><li>考虑要不要自己新开一个主题，原作者不更新了，我还有足够的精力吗？</li></ul><hr><h2 id="博客搭建过程"><a href="#博客搭建过程" class="headerlink" title="博客搭建过程"></a>博客搭建过程</h2><ul><li>博客搭建主要是依赖<a href="https://hexo.io/zh-cn/index.html" title="Hexo中文主页" target="_blank" rel="noopener">Hexo</a>，这是一个<code>快速、简洁且高效的博客框架</code>，支持的主题十分丰富。</li><li>搭建环境是Ubuntu 16.04，因为之前做毕设课题是<code>SDN</code>和<code>物联网</code>，硬件驱动都是在Linux中编译；后面研究方向又是集中在<code>GNU Radio</code>上，所以早早的就进了Linux这个大坑。</li><li>在Linux里遇到炒鸡多的问题，就连装个QQ也折腾了好久，好多东西比如<code>Ubuntu中文站</code>都是后来才知道的。后面会再开一贴记录Linux折腾的过程，之前的大多不记得了，就从今往后吧。</li></ul><hr><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>做静态主页必然是要从<a href="https://github.com/" title="Github主页" target="_blank" rel="noopener">Github</a>入手：</p><ul><li>注册账号，建立repository，使用Github提供的Github Pages。</li><li>部署Hexo，需要前置程序：<ul><li>Node.js</li><li>Git</li></ul></li><li>安装和建站（省去folder）：<pre><code>npm install -g hexo-clihexo initnpm install</code></pre></li><li>学习使用git命令，下载主题仓库<pre><code>git clone URL</code></pre></li><li>基础命令<pre><code>hexo new [layout] &lt;title&gt;hexo cleanhexo ghexo s</code></pre></li><li>主题修改过后使用部署插件<pre><code>npm install hexo-deployer-git --savehexo deploy</code></pre></li><li>这里Github部署使用SSH，需要在官网匹配一个公钥，注意branch的填写<blockquote><p>初始地址：<a href="http://cloisonne.github.io/" target="_blank" rel="noopener">http://cloisonne.github.io/</a> (cloisonne为我的ID)</p></blockquote></li></ul><hr><h3 id="补充-关于nodejs的安装"><a href="#补充-关于nodejs的安装" class="headerlink" title="补充-关于nodejs的安装"></a>补充-关于nodejs的安装</h3><p>官网直接下载完整包 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> node-v-linux-x64/bin</span><br><span class="line">ls</span><br><span class="line">./node -v</span><br></pre></td></tr></table></figure><p>设置全局：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /home/node-v-linux-x64/bin/node /usr/<span class="built_in">local</span>/bin/node</span><br><span class="line">ln -s /home/node-v-linux-x64/bin/npm /usr/<span class="built_in">local</span>/bin/npm</span><br></pre></td></tr></table></figure><p>后面安装的hexo目录位于nodejs/bin 也需要设置全局</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /opt/node-v4.4.7-linux-x64/bin/hexo /usr/<span class="built_in">local</span>/bin/hexo</span><br></pre></td></tr></table></figure><hr><h3 id="补充-Windows下nodejs的问题"><a href="#补充-Windows下nodejs的问题" class="headerlink" title="补充-Windows下nodejs的问题"></a>补充-Windows下nodejs的问题</h3><p>国内npm被墙 采用淘宝镜像<a href="https://npm.taobao.org/" target="_blank" rel="noopener">cnpm</a></p><pre><code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><h3 id="补充-关于私钥公钥的生成"><a href="#补充-关于私钥公钥的生成" class="headerlink" title="补充-关于私钥公钥的生成"></a>补充-关于私钥公钥的生成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;cloisonne&quot;</span><br><span class="line">$ git config --global user.email &quot;tylerluan@163.com&quot;</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;tylerluan@163.com&quot;</span><br></pre></td></tr></table></figure><p>生成两个文件id_rsa和id_rsa.pub 公钥位于<code>id_rsa.pub</code></p><h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><p>一开始是使用的<a href="http://theme-next.iissnan.com/" title="干净整洁的主题" target="_blank" rel="noopener">Next主题</a>，这个主题的好处在于有很强大的说明文档。<br>利用自带的<code>_config.yml</code>可以完成基础的定制，也借助它我熟悉了Hexo的主要框架和一个blog的主要结构。</p><blockquote><p>在Next中首先遇到的问题在于如何修改底部标签，事实上如果了解Hexo主题的开发过程，这一问题就很好解决。<br>自己摸索找到了<code>theme/layout/_partial</code>这里放着关于布局的JavaScript文件。</p></blockquote><p>包括学习Markdown，并且发表第一篇post，过程一直很顺利，后面<a href="http://duoshuo.com/" title="多说评论系统主页" target="_blank" rel="noopener">多说</a>在手机适配端出现了问题，恰逢毕业季，很久都未解决，迫不得已放弃。</p><h3 id="Yelee主题"><a href="#Yelee主题" class="headerlink" title="Yelee主题"></a>Yelee主题</h3><p>后来看上了<a href="https://github.com/litten/hexo-theme-yilia" title="Yilia主题" target="_blank" rel="noopener">Yilia</a>主题，主题特点是简单，注重对内容的突出。但是简单就意味着缺少了很多功能，比如搜索等等，<a href="https://github.com/MOxFIVE/hexo-theme-yelee" title="Yelee主题" target="_blank" rel="noopener">Yelee</a>正是在Yilia基础上更改的主题，增加了很多可用的功能。</p><blockquote><p>本主题基于主题 Hexo-Theme-Yilia 修改而来，在此再次感谢原作者 Litten。修复了一些 bugs，改变了大量的样式，添加了不少特性。对原主题百般折腾后，发觉变动越来越大，索性就发布个新主题了，主题随我微博名 “夜Yelee” 。个人喜欢简洁的样式，重视内容的浏览，同时希望作为个人网站的博客，能稍微凸显出博主个性。各种修改折腾大抵基于以上考虑。</p></blockquote><p>这里附上Yelee主题使用说明，基本配置大致都有了：<a href="http://moxfive.coding.me/yelee/" title="Yelee主题使用说明" target="_blank" rel="noopener">Yelee主题使用说明</a></p><ul><li>关于修改左边栏上方的<strong>Overlay</strong>配色，这一段代码写在<code>yelee/source/js/main.js</code></li><li>关于如何解决Hexo置顶问题：<a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" title="解决Hexo置顶问题" target="_blank" rel="noopener">解决Hexo置顶问题 </a></li><li>多说样式的修改：<a href="http://moxfive.xyz/2015/09/29/duoshuo-style/" title="对多说评论的改造" target="_blank" rel="noopener">多说样式折腾记录 — 添加 UA 浏览器标识、旋转头像等 </a></li></ul><h3 id="各种插件"><a href="#各种插件" class="headerlink" title="各种插件"></a>各种插件</h3><p>Hexo的各种插件，包括sitemap、rss、git部署等等：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p><strong>置顶插件</strong></p><pre><code>    $ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save</code></pre><p>第三方插件，主要有：</p><p> <del>- 多说评论</del></p><ul><li>百度统计</li><li>不蒜子统计</li><li>sitemap</li><li>RSS</li></ul><h3 id="coding部署"><a href="#coding部署" class="headerlink" title="coding部署"></a>coding部署</h3><p>因为百度屏蔽了Github的抓取，为了让百度能够正常抓取，这里借鉴了知乎<br><a href="http://www.zhihu.com/question/30898326/" title="如何解决百度爬虫无法爬取搭建在Github上的个人博客的问题" target="_blank" rel="noopener">如何解决百度爬虫无法爬取搭建在Github上的个人博客的问题</a><br>完成了Github和国内Coding的共同部署，并通过DNS实现了国内访问Coding，国外访问Github。</p><p>附上Deploy的配置（Github的branch <code>master</code>可以省略）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: https://github.com/cloisonne/cloisonne.github.io</span><br><span class="line">- type: git</span><br><span class="line">  repo: https://git.coding.net/cloisonne/cloisonne.git</span><br><span class="line">  branch: coding-pages</span><br></pre></td></tr></table></figure><p><del>登录方式依然是SSH，SSH隔段时间就要重新输入密码，最近还在寻找更好的方式。</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@github.com:cloisonne/cloisonne.github.io.git</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@git.coding.net:cloisonne/cloisonne.git</span><br><span class="line">  branch: coding-pages</span><br></pre></td></tr></table></figure><p>已解决每次需要输入密码的问题。</p><h3 id="域名和DNS"><a href="#域名和DNS" class="headerlink" title="域名和DNS"></a>域名和DNS</h3><p>因为主要是以学习为主，这里使用了免费的<a href="http://www.dot.tk/zh/index.html?lang=zh/" title="注册Dot TK域名" target="_blank" rel="noopener">tk域名</a>，注册了<del><a href="http://smileykk.tk" target="_blank" rel="noopener">http://smileykk.tk</a></del>　已换成<a href="http://ykksmile.top">http://ykksmile.top</a></p><blockquote><p>注意tk域名目前免费最大时长为12小时，建议一次注册选择最大时长，注册时间选错了可以注销重新申请。</p></blockquote><p>DNS使用了流行的<a href="https://www.dnspod.cn/" title="好用的DNS工具" target="_blank" rel="noopener">DNSPod</a>,具体过程比较简单，参考了<a href="http://bblove.me/2015/11/25/how-to-solve-the-problem-that-github-blocks-the-baidu-spider/" title="参考的DNS方案" target="_blank" rel="noopener">解决 Github Pages 禁止百度爬虫的方法</a></p><ul><li>将域名解析到DNSPod提供的地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1g1ns1.dnspod.net</span><br><span class="line">f1g1ns2.dnspod.net</span><br></pre></td></tr></table></figure><ul><li>修改DNSPod解析记录</li><li>添加Github的CNAME文件,添加Coding自定义域名</li></ul><h3 id="TiddlyWiki"><a href="#TiddlyWiki" class="headerlink" title="TiddlyWiki"></a>TiddlyWiki</h3><p>TiddlyWiki是一个轻量级的静态的个人wiki工具，具体使用方法参考TigglyWiki的官方文档：</p><p>在Hexo中的应用：</p><blockquote><p>放在theme/source/wiki/index.html 即可通过<code>http://URL/wiki/</code>访问</p></blockquote><p>TiddlyWiki的Markdown插件安装：</p><blockquote><p>To add the plugin to your own TiddlyWiki5, just drag this link to the browser window:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$:/plugins/tiddlywiki/markdown</span><br></pre></td></tr></table></figure><h2 id="工具链接"><a href="#工具链接" class="headerlink" title="工具链接"></a>工具链接</h2><h3 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h3><ol><li><strong>My blog</strong>: <a href="http://smileykk.tk" target="_blank" rel="noopener">http://smileykk.tk</a> / <a href="http://cloisonne.github.io" target="_blank" rel="noopener">http://cloisonne.github.io</a> / <a href="http://cloisonne.coding.me/cloisonne" target="_blank" rel="noopener">http://cloisonne.coding.me/cloisonne</a></li><li><strong>GitHub</strong>: <a href="https://github.com/cloisonne" target="_blank" rel="noopener">https://github.com/cloisonne</a></li><li><strong>Coding</strong>: <a href="https://coding.net/" target="_blank" rel="noopener">https://coding.net/</a></li><li><strong>Hexo</strong>: <a href="https://hexo.io/zh-cn" target="_blank" rel="noopener">https://hexo.io/zh-cn</a></li><li><strong>Node.js</strong>: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li><li><strong>Next主题</strong>: <a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">http://theme-next.iissnan.com</a></li><li><strong>Yelee主题</strong>: <a href="http://moxfive.coding.me/yelee" target="_blank" rel="noopener">http://moxfive.coding.me/yelee</a></li><li><strong>favicon制作</strong>: <a href="http://www.atool.org/ico.php" target="_blank" rel="noopener">http://www.atool.org/ico.php</a></li><li><strong>淘宝npm镜像</strong>： <a href="https://npm.taobao.org/" target="_blank" rel="noopener">https://npm.taobao.org/</a></li></ol><h3 id="网站维护"><a href="#网站维护" class="headerlink" title="网站维护"></a>网站维护</h3><ol><li><del>多说评论系统: <a href="http://duoshuo.com/" target="_blank" rel="noopener">http://duoshuo.com/</a></del></li><li><strong>DNSPod</strong>: <a href="https://www.dnspod.cn" target="_blank" rel="noopener">https://www.dnspod.cn</a></li><li><strong>TK域名注册</strong>: <a href="http://www.dot.tk/zh/index.html?lang=zh" target="_blank" rel="noopener">http://www.dot.tk/zh/index.html?lang=zh</a></li><li><strong>域名管理freenom</strong>: <a href="https://my.freenom.com/clientarea.php" target="_blank" rel="noopener">https://my.freenom.com/clientarea.php</a></li><li><strong>站长工具大全</strong>: <a href="http://tool.lusongsong.com/" target="_blank" rel="noopener">http://tool.lusongsong.com/</a></li></ol><h3 id="相关学习"><a href="#相关学习" class="headerlink" title="相关学习"></a>相关学习</h3><ol><li><strong>小书匠Markdown编辑器</strong>: <a href="http://markdown.xiaoshujiang.com/" target="_blank" rel="noopener">http://markdown.xiaoshujiang.com/</a></li><li><strong>简书</strong>: <a href="http://www.jianshu.com" target="_blank" rel="noopener">http://www.jianshu.com</a></li><li><strong>TiddlyWiki</strong>: <a href="http://tiddlywiki.com/" target="_blank" rel="noopener">http://tiddlywiki.com/</a></li></ol>]]></content>
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Tools </tag>
            
            <tag> Markdown </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我为什么要建这样一个blog</title>
      <link href="/posts/41162/"/>
      <url>/posts/41162/</url>
      <content type="html"><![CDATA[<p>一切从零开始。</p><a id="more"></a><h3 id="扯一些淡"><a href="#扯一些淡" class="headerlink" title="扯一些淡"></a>扯一些淡</h3><p>第一次写<a href="http://www.jianshu.com/p/1e402922ee32" target="_blank" rel="noopener">Markdown</a>，好吧，直观感受是如果用英文写更好一点，因为加一个链接需要这样：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[markdown](http://www.jianshu.com/p/1e402922ee32)</span><br></pre></td></tr></table></figure></p><p>上面放上了<a href="http://www.jianshu.com" target="_blank" rel="noopener">简书</a>的Markdown入门教程，语法还是边学边用，来的快一些。</p><p>对我来说最大的问题其实并不是Markdown，因为还要注意学习Hexo内建的Tag Plugin，例如下面要手动加入一个阅读全文，like this way:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure></p><h3 id="为什么要搭建这样一个blog"><a href="#为什么要搭建这样一个blog" class="headerlink" title="为什么要搭建这样一个blog"></a>为什么要搭建这样一个blog</h3><p>差不多一个月前，在做毕业设计的时候，涉及到SDN的技术，这方面国内能参考的就一个<a href="www.sdnlab.com">SDNLab</a>，在里面看到一篇很有意思的文章，called <a href="http://www.sdnlab.com/16666.html" target="_blank" rel="noopener">我是一个SDN交换机</a>，写的声情并茂啊有木有，忍不住quote一段:</p><blockquote><p>我按照工作手册的知道，将自己切换到了StandAlone模式，再也不需要主管控制。我自己也学过二层自学习转发算法，和阿楚同桌的时候学的，我可以用二层转发算法继续工作。</p></blockquote><p>作者的名字就不提了，这里放上作者的<a href="http://www.muzixing.com/pages/about-me.html" target="_blank" rel="noopener">简历</a>供你们膜拜。</p><hr><p>刚刚打扫卫生了，这里果断加个粗体，<strong>打扫卫生啊喂！</strong> 都快毕业了，领导还不辞辛苦地来检查卫生。</p><hr><p>因为看到了他的博客，然后自己正好在SDN上有些问题，给这位师兄发邮件问了下，虽然没什么帮助，但是我也想有一个技术博客可以在找工作的时候装逼啊！ <strong>装逼啊！</strong></p><h3 id="这个博客是怎么搭建的"><a href="#这个博客是怎么搭建的" class="headerlink" title="这个博客是怎么搭建的"></a>这个博客是怎么搭建的</h3><p>之后会写一篇文记录自己搭建的过程，这里面最大的困难在于整个过程都是在Ubuntu16.04上完成的，使用linux的过程，简直就是，qoute</p><blockquote><p> 面向搜索引擎的学习过程</p></blockquote><p>因为之前做毕设，课题是物联网，需要使用linux来完成物联网网关的部分，我使用了Ubuntu12.04，现学现卖，从对与<code>cp</code> <code>rm</code> 这样的命令一窍不通到看懂底层的linux驱动，以及各种修改OpenWrt和编译，学习进度简直要起飞了。<strong>然而</strong>，当我接触到Ubuntu16.04的时候，尤其面对的是从未用过的gnome图形界面，现实又给我上了一课，这个后面具体再说吧。</p><p>言归正传，这个博客是基于Hexo，使用了Next的主题，修改主要是基于EZLippi的博客。托管在了github上，主要是HTML5和javascript编写，自己做一些定制或者基于third-party的插件，其中改了一些代码，也是从零开始，现学现卖。<br>网站的搭建还涉及到一些例如域名管理、百度站长之类的事情，也是自己摸索着做了一部分，后续还需要做很多。</p><h3 id="我要写什么-写给谁看？"><a href="#我要写什么-写给谁看？" class="headerlink" title="我要写什么 写给谁看？"></a>我要写什么 写给谁看？</h3><blockquote><p>当然不是写给你看的</p><footer><strong>尼古拉斯赵四</strong></footer></blockquote><p>虽然我也会写一些随笔在这里，但是这个博客注定是为技术而生。<br>我会把我的学习过程，以及我做过的东西都记录下来，例如毕业设计做的<code>SDN</code>和<code>物联网</code>等等<br>所以这个博客的作用主要是给自己看的，for myself。很久不写东西了，怀念参加全国作文大赛的日子，几年时间，如果真的让我写些什么我或许也写不出了吧。<br>也许以后时间多的话，会在lofter写一些东西，简短的随笔也会放在这里。</p><p>我的目标并不是程序猿，也不是什么技术大牛，只是上研了，被逼无奈要做一些东西，例如现在的LTE底层仿真，有这样一个自己的小天地，聊胜于无吧。</p><p>下面的回复里表情这么多这么可爱，你好意思不给我回复一下吗？ </p><p><img style="display: block;" src="/resources/dogdog.gif" title="dog"></p>]]></content>
      
      <categories>
          
          <category> Essays </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 扯淡 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
